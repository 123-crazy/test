{
  "name": "workflow",
  "description": "",
  "type": [
    "native"
  ],
  "srcDir": "src_native",
  "pathOffset": ".",
  "skipAudit": true,
  "skipTest": true,
  "version": "6.1.6",
  "author": "Siemens Product Lifecycle Management Software Inc.",
  "hosting": {
    "hostedComponents": {
      "com.siemens.splm.client.inbox.internal.presenters.PerformTaskDeclarativePresenterW": {
        "commandId": "Awp0PerformTask"
      },
      "com.siemens.splm.client.inbox.internal.goinbox": {
        "componentLocation": "newInboxComponentLocation",
        "commandId": "Awp0GoInbox"
      },
      "com.siemens.splm.client.inbox.internal.reassign": {
        "componentLocation": "newReassignComponentLocation",
        "commandId": "Awp0ReassignTask"
      },
      "com.siemens.splm.client.workflow.published.NewWorkflowProcess": {
        "componentLocation": "newWorkflowProcessComponent"
      }
    }
  },
  "performTaskPanelConfiguration": {
    "secondaryAreaContribution": {
      "Awp0EPMConditionTaskPerformSecondary": {
        "id": "Awp0EPMConditionTaskPerformSecondary",
        "priority": 1,
        "performPanelId": "Awp0EPMConditionTaskPerformSecondary",
        "condition": "modelObject.type === 'EPMConditionTask'"
      },
      "Awp0EPMDoTaskPerformSecondary": {
        "id": "Awp0EPMTaskPerformSecondary",
        "priority": 1,
        "performPanelId": "Awp0EPMTaskPerformSecondary",
        "condition": "modelObject.type === 'EPMDoTask'"
      },
      "Awp0EPMSSTTaskPerformSecondary": {
        "id": "Awp0EPMSSTTaskPerformSecondary",
        "priority": 1,
        "performPanelId": "Awp0EPMSSTTaskPerformSecondary",
        "condition": "modelObject.type === 'EPMSelectSignoffTask'"
      },
      "Awp0EPMRouteTaskPerformSecondary": {
        "id": "Awp0EPMRouteTaskPerformSecondary",
        "priority": 1,
        "performPanelId": "Awp0EPMRouteTaskPerformSecondary",
        "condition": "modelObject.type === 'EPMRouteTask'"
      },
      "Awp0SignoffPerformSecondary": {
        "id": "Awp0SignoffPerformSecondary",
        "priority": 1,
        "performPanelId": "Awp0SignoffPerformSecondary",
        "condition": "modelObject.type === 'EPMPerformSignoffTask' || modelObject.type === 'Signoff'"
      },
      "Awp0EPMTaskPerformSecondary": {
        "id": "Awp0EPMTaskPerformSecondary",
        "priority": 1,
        "performPanelId": "Awp0EPMTaskPerformSecondary",
        "condition": "( (modelObject.type != 'EPMConditionTask' && modelObject.type != 'EPMSelectSignoffTask' && modelObject.type != 'EPMRouteTask' && modelObject.type != 'EPMDoTask' && modelObject.type != 'Signoff' &&  modelObject.type != 'EPMPerformSignoffTask') && modelObject.modelType.typeHierarchyArray.indexOf('EPMTask') >= 0) "
      }
    },
    "perfromTaskToolAreaContribution": {
      "Awp0EPMConditionTaskPerform": {
        "id": "Awp0EPMConditionTaskPerform",
        "priority": 1,
        "performPanelId": "Awp0EPMConditionTaskPerform",
        "condition": "modelObject.type === 'EPMConditionTask'"
      },
      "Awp0EPMDoTaskPerform": {
        "id": "Awp0EPMTaskPerform",
        "priority": 1,
        "performPanelId": "Awp0EPMTaskPerform",
        "condition": "modelObject.type === 'EPMDoTask'"
      },
      "Awp0EPMSelectSignoffTaskPerform": {
        "id": "Awp0EPMSelectSignoffTaskPerform",
        "priority": 1,
        "performPanelId": "Awp0EPMSelectSignoffTaskPerform",
        "condition": "modelObject.type === 'EPMSelectSignoffTask'"
      },
      "Awp0EPMRouteTaskPerform": {
        "id": "Awp0EPMRouteTaskPerform",
        "priority": 1,
        "performPanelId": "Awp0EPMRouteTaskPerform",
        "condition": "modelObject.type === 'EPMRouteTask'"
      },
      "Awp0SignoffPerform": {
        "id": "Awp0SignoffPerform",
        "priority": 1,
        "performPanelId": "Awp0SignoffPerform",
        "condition": "modelObject.type === 'EPMPerformSignoffTask' || modelObject.type === 'Signoff'"
      },
      "Awp0EPMTaskPerform": {
        "id": "Awp0EPMTaskPerform",
        "priority": 1,
        "performPanelId": "Awp0EPMTaskPerform",
        "condition": "( (modelObject.type != 'EPMConditionTask' && modelObject.type != 'EPMSelectSignoffTask' && modelObject.type != 'EPMRouteTask' && modelObject.type != 'EPMDoTask' && modelObject.type != 'Signoff' &&  modelObject.type != 'EPMPerformSignoffTask') && modelObject.modelType.typeHierarchyArray.indexOf('EPMTask') >= 0) "
      }
    }
  },
  "adapters": [
    {
      "conditions": {
        "modelType.typeHierarchyArray": {
          "$in": "Awp0UserAssignment"
        }
      },
      "target": {
        "prop": "awp0User"
      }
    }
  ],
  "aliasRegistry": {
    "typeSelectSignoffTeamTask48": [
      "EPMSelectSignoffTask",
      "EPMSelectSignoffTaskTemplate"
    ],
    "typePerformSignoffTask48": [
      "Signoff",
      "EPMPerformSignoffTask",
      "EPMPerformSignoffTaskTemplate"
    ],
    "typePerson48": [
      "Awp0UserAssignment"
    ],
    "typePersonGray48": [
      "EPMSignoffProfile"
    ],
    "typeConditionTask48": [
      "EPMConditionTask",
      "EPMConditionTaskTemplate"
    ],
    "typeDoTask48": [
      "EPMDoTask",
      "EPMDoTaskTemplate"
    ],
    "typeRouteTask48": [
      "EPMRouteTask",
      "EPMRouteTaskTemplate"
    ],
    "typeReviewTask48": [
      "EPMReviewTask",
      "EPMReviewTaskTemplate"
    ],
    "typeAcknowledgeTask48": [
      "EPMAcknowledgeTask",
      "EPMAcknowledgeTaskTemplate"
    ],
    "typeWorkflowAddStatusTask48": [
      "EPMAddStatusTask",
      "EPMAddStatusTaskTemplate"
    ],
    "typeNotifyTask48": [
      "EPMNotifyTask",
      "EPMNotifyTaskTemplate"
    ],
    "typeWorkflowValidateTask48": [
      "EPMValidateTask",
      "EPMValidateTaskTemplate"
    ],
    "typeWorkflowOrTask48": [
      "EPMOrTask",
      "EPMOrTaskTemplate"
    ],
    "typeTask48": [
      "EPMTask",
      "EPMTaskTemplate"
    ],
    "homeInbox64": [
      "inbox"
    ],
    "typeWorkflowProcess48": [
      "Job"
    ],
    "typeAssignmentList48": [
      "EPMAssignmentList"
    ]
  },
  "bootstrap": {
    "postInit": [
      "import('js/eventBus').then(function(eventBus){eventBus.subscribe('sessionInfo.updated',function(){import('js/aw.inbox.polling.service').then(function(awInboxPollingService){awInboxPollingService.init();});});});"
    ]
  },
  "commandsViewModel": {
    "commands": {
      "Awp0CreateWorkflow": {
        "iconId": "cmdSubmitToWorkflow",
        "isGroup": false,
        "title": "{{i18n.createWorkflow}}"
      },
      "Awp0PromoteTask": {
        "iconId": "cmdPromoteTask",
        "isGroup": false,
        "title": "{{i18n.promote}}",
        "description": "{{i18n.Awp0PromoteTaskDesc}}"
      },
      "Awp0OutOfOffice": {
        "iconId": "cmdAssignTask",
        "isGroup": false,
        "title": "{{i18n.outOfOfficeCommandTitle}}",
        "description": "{{i18n.Awp0OutOfOfficeDesc}}"
      },
      "Awp0OpenInboxLocation": {
        "iconId": "cmdOpenInbox",
        "isGroup": false,
        "title": "{{i18n.openInboxLocationCommand}}",
        "description": "{{i18n.Awp0OpenInboxLocationDesc}}"
      },
      "Awp0InboxFilters": {
        "iconId": "cmdfilter",
        "isGroup": false,
        "title": "{{i18n.inboxFiltersCommandTitle}}",
        "description": "{{i18n.Awp0InboxFiltersDesc}}"
      },
      "Awp0InboxAddCmd": {
        "iconId": "cmdAdd",
        "isGroup": false,
        "title": "{{i18n.surrogateAdd}}",
        "description": "{{i18n.surrogateAdd}}"
      },
      "Awp0SurrogateAddCmd": {
        "iconId": "cmdAdd",
        "isGroup": false,
        "title": "{{i18n.surrogateAdd}}",
        "description": "{{i18n.Awp0SurrogateAddCmdDesc}}"
      },
      "Awp0AddReviewProfileSignoffCellCommand": {
        "iconId": "cmdAdd",
        "isGroup": false,
        "title": "{{i18n.surrogateAdd}}",
        "description": "{{i18n.Awp0AddReviewProfileSignoffCellCommandDesc}}"
      },
      "Awp0AddReviewAdhocSignoffCommand": {
        "iconId": "cmdAdd",
        "isGroup": false,
        "title": "{{i18n.surrogateAdd}}",
        "description": "{{i18n.Awp0AddReviewAdhocSignoffCommandDesc}}"
      },
      "Awp0RemoveReviewProfileSignoffCommand": {
        "iconId": "cmdRemove",
        "isGroup": false,
        "title": "{{i18n.removeCommandTitle}}",
        "description": "{{i18n.Awp0RemoveReviewAdhocSignoffCommandDesc}}"
      },
      "Awp0RemoveReviewAdhocSignoffCommand": {
        "iconId": "cmdRemove",
        "isGroup": false,
        "title": "{{i18n.removeCommandTitle}}",
        "description": "{{i18n.Awp0RemoveReviewAdhocSignoffCommandDesc}}"
      },
      "Awp0AddSurrogate": {
        "iconId": "cmdAdd",
        "isGroup": false,
        "title": "{{i18n.addSurrogateTitle}}",
        "description": "{{i18n.Awp0AddSurrogateDesc}}"
      },
      "Awp0AddResourcePool": {
        "iconId": "cmdAdd",
        "isGroup": false,
        "title": "{{i18n.surrogateAdd}}",
        "description": "{{i18n.Awp0AddResourcePoolDesc}}"
      },
      "Awp0RemoveResourcePool": {
        "iconId": "cmdRemove",
        "isGroup": false,
        "title": "{{i18n.removeCommandTitle}}",
        "description": "{{i18n.Awp0RemoveResourcePoolDesc}}"
      },
      "Awp0AddAcknowledgeAdhocSignoffCommand": {
        "iconId": "cmdAdd",
        "isGroup": false,
        "title": "{{i18n.add}}",
        "description": "{{i18n.Awp0AddAcknowledgeAdhocSignoffCommandDesc}}"
      },
      "Awp0RemoveAcknowledgeAdhocSignoffCommand": {
        "iconId": "cmdRemove",
        "isGroup": false,
        "title": "{{i18n.removeCommandTitle}}",
        "description": "{{i18n.Awp0RemoveResourcePoolDesc}}"
      },
      "Awp0AddNotifyAdhocSignoffCommand": {
        "iconId": "cmdAdd",
        "isGroup": false,
        "title": "{{i18n.add}}",
        "description": "{{i18n.surrogateAdd}}"
      },
      "Awp0RemoveNotifyAdhocSignoffCommand": {
        "iconId": "cmdRemove",
        "isGroup": false,
        "title": "{{i18n.removeCommandTitle}}",
        "description": "{{i18n.Awp0RemoveResourcePoolDesc}}"
      },
      "Awp0ReassignTask": {
        "iconId": "cmdAssignTask",
        "isGroup": false,
        "title": "{{i18n.reassign}}",
        "description": "{{i18n.Awp0ReassignTaskDesc}}"
      },
      "Awp0Release": {
        "iconId": "cmdRelease",
        "isGroup": false,
        "title": "{{i18n.releaseCommand}}",
        "description": "{{i18n.Awp0ReleaseDesc}}"
      },
      "Awp0StandIn": {
        "iconId": "cmdStandIn",
        "isGroup": false,
        "title": "{{i18n.standInCommand}}",
        "description": "{{i18n.Awp0StandInDesc}}"
      },
      "Awp0AddReviewer": {
        "iconId": "cmdAdd",
        "isGroup": false,
        "title": "{{i18n.add}}",
        "description": "{{i18n.Awp0AddReviewerDesc}}"
      },
      "Awp0RemoveSurrogate": {
        "iconId": "cmdRemove",
        "isGroup": false,
        "title": "{{i18n.removeSurrogateCommand}}",
        "description": "{{i18n.Awp0RemoveSurrogateDesc}}"
      },
      "Awp0PerformTaskPanel": {
        "iconId": "cmdPerformTask",
        "isGroup": false,
        "title": "{{i18n.performTask}}",
        "description": "{{i18n.Awp0PerformTaskPanelDesc}}"
      },
      "Awp0ClaimTask": {
        "iconId": "cmdClaimTask",
        "isGroup": false,
        "title": "{{i18n.claimTask}}",
        "description": "{{i18n.Awp0ClaimTaskDesc}}"
      },
      "Awp0AbortTask": {
        "iconId": "cmdAbortTask",
        "isGroup": false,
        "title": "{{i18n.abort}}",
        "description": "{{i18n.Awp0AbortTaskDesc}}"
      },
      "Awp0GoInbox": {
        "iconId": "cmdInbox",
        "title": "{{i18n.inboxTitle}}",
        "template": "<div>{{ctx.unviewedWFTaskCount}}</div>",
        "description": "{{i18n.Awp0GoInboxDesc}}"
      },
      "Awp0GoInboxWithoutBubble": {
        "iconId": "cmdInbox",
        "title": "{{i18n.inboxTitle}}",
        "description": "{{i18n.Awp0GoInboxWithoutBubbleDesc}}"
      },
      "Awp0DemoteTask": {
        "iconId": "cmdDemoteTask",
        "isGroup": false,
        "title": "{{i18n.demote}}",
        "description": "{{i18n.Awp0DemoteTaskDesc}}"
      },
      "Awp0SuspendTask": {
        "iconId": "cmdSuspendTask",
        "isGroup": false,
        "title": "{{i18n.suspend}}",
        "description": "{{i18n.Awp0SuspendTaskDesc}}"
      },
      "Awp0ResumeTask": {
        "iconId": "cmdResumeTask",
        "isGroup": false,
        "title": "{{i18n.resume}}",
        "description": "{{i18n.Awp0ResumeTaskDesc}}"
      },
      "Awp0DeleteWorkflow": {
        "iconId": "cmdDelete",
        "title": "{{i18n.deleteWorkflow}}",
        "description": "{{i18n.Awp0DeleteWorkflowDesc}}"
      },
      "Awp0AddRemoteInboxCmd": {
        "iconId": "cmdAdd",
        "isGroup": false,
        "title": "{{i18n.surrogateAdd}}",
        "description": "{{i18n.Awp0ShowAddObjectDesc}}"
      },
      "Awp0ReplaceMultipleParticipants": {
        "iconId": "cmdReplace",
        "isGroup": false,
        "title": "{{i18n.replaceMultipleParticipantsCommandTitle}}",
        "description": "{{i18n.Awp0ReplaceMultipleParticipantsDesc}}"
      },
      "OpenProcessInViewer": {
        "iconId": "cmdOpen",
        "isGroup": false
      },
      "Awp0FromSectionAddCmd": {
        "iconId": "cmdAdd",
        "isGroup": false,
        "title": "{{i18n.assignFrom}}",
        "description": "{{i18n.Awp0FromSectionAddCmdDesc}}"
      },
      "Awp0ToSectionAddCmd": {
        "iconId": "cmdAdd",
        "isGroup": false,
        "title": "{{i18n.assignTo}}",
        "description": "{{i18n.Awp0ToSectionAddCmdDesc}}"
      },
      "Awp0ToggleChildren": {
        "iconId": "cmdChild",
        "isGroup": false,
        "title": "{{i18n.hideChildren}}"
      },
      "Awp0ToggleSubProcess": {
        "iconId": "cmdChild",
        "isGroup": false,
        "title": "{{i18n.hideChildren}}"
      },
      "Awp0NewWorkflowProcess": {
        "iconId": "cmdSubmitToWorkflow",
        "isGroup": false,
        "title": "{{i18n.Workflow_Title}}",
        "description": "{{i18n.Awp0NewWorkflowProcessDesc}}"
      },
      "Awp0AddParticipant": {
        "iconId": "cmdAdd",
        "isGroup": false,
        "title": "{{i18n.Add}}",
        "description": "{{i18n.Awp0AddParticipantDesc}}"
      },
      "Awp0ReplaceParticipant": {
        "iconId": "cmdReplace",
        "isGroup": false,
        "title": "{{i18n.Replace_Title}}",
        "description": "{{i18n.Awp0ReplaceParticipantDesc}}"
      },
      "Awp0RemoveParticipant": {
        "iconId": "cmdRemove",
        "isGroup": false,
        "title": "{{i18n.removeCommandTitle}}",
        "description": "{{i18n.Awp0RemoveParticipantDesc}}"
      },
      "Awp0AddProcessAssignmentCmd": {
        "iconId": "cmdAdd",
        "isGroup": false,
        "title": "{{i18n.Add}}",
        "description": "{{i18n.Awp0AddParticipantDesc}}"
      },
      "Awp0RemoveProcessAssignmentCmd": {
        "iconId": "cmdRemove",
        "isGroup": false,
        "title": "{{i18n.removeCommandTitle}}",
        "description": "{{i18n.Awp0RemoveProcessAssignmentCmdDesc}}"
      },
      "Awp0RemoveReference": {
        "iconId": "cmdCut",
        "isGroup": false,
        "title": "{{i18n.Awp0CutTitle}}"
      },
      "Awp0AddTaskAssignmentCmd": {
        "iconId": "cmdAdd",
        "isGroup": false,
        "title": "{{i18n.Add}}",
        "description": "{{i18n.Awp0AddTaskAssignmentCmdDesc}}"
      },
      "Awp0RemoveTaskAssignmentCmd": {
        "iconId": "cmdRemove",
        "isGroup": false,
        "title": "{{i18n.removeCommandTitle}}",
        "description": "{{i18n.Awp0RemoveTaskAssignmentCmdDesc}}"
      },
      "Awp0PasteUserAssignmentCmd": {
        "iconId": "cmdAssignUsers",
        "isGroup": false,
        "title": "{{i18n.assignCmdTitle}}",
        "description": "{{i18n.Awp0PasteUserAssignmentCmdDesc}}"
      },
      "Awp0PasteProfileUserAssignmentCmd": {
        "iconId": "cmdAssignUsers",
        "isGroup": false,
        "title": "{{i18n.assignCmdTitle}}",
        "description": "{{i18n.Awp0PasteUserAssignmentCmdDesc}}"
      },
      "Awp0ProfileSignoffCellCommand": {
        "iconId": "cmdAdd",
        "isGroup": false,
        "title": "{{i18n.add}}",
        "description": "{{i18n.Awp0ProfileSignoffCellCommandDesc}}"
      },
      "Awp0TasksAferSubmitProfileCellCommand": {
        "iconId": "cmdAdd",
        "isGroup": false,
        "title": "{{i18n.add}}",
        "description": "{{i18n.Awp0AddUsersAssignmentCmdDesc}}"
      },
      "Awp0AddTaskParticipant": {
        "iconId": "cmdAdd",
        "isGroup": false,
        "title": "{{i18n.Add}}",
        "description": "{{i18n.Awp0AddParticipantDesc}}"
      },
      "Awp0AddUsersAssignmentCmd": {
        "iconId": "cmdAdd",
        "isGroup": false,
        "title": "{{i18n.Add}}",
        "description": "{{i18n.Awp0AddUsersAssignmentCmdDesc}}"
      },
      "Awp0RemoveUsersAssignmentCmd": {
        "iconId": "cmdRemove",
        "isGroup": false,
        "title": "{{i18n.removeCommandTitle}}",
        "description": "{{i18n.Awp0RemoveProcessAssignmentCmdDesc}}"
      },
      "Awp0ReplaceTaskParticipant": {
        "iconId": "cmdReplace",
        "isGroup": false,
        "title": "{{i18n.Replace_Title}}",
        "description": "{{i18n.Awp0ReplaceParticipantDesc}}"
      },
      "Awp0SaveAssignment": {
        "iconId": "cmdSave",
        "isGroup": false,
        "title": "{{i18n.saveEdit}}",
        "description": "{{i18n.Awp0SaveAssignmentDesc}}"
      },
      "Awp0CancelAssignment": {
        "iconId": "cmdCancelEdit",
        "isGroup": false,
        "title": "{{i18n.cancelEdit}}",
        "description": "{{i18n.Awp0CancelAssignmentDesc}}"
      },
      "Awp0StartEditAssignment": {
        "iconId": "cmdEdit",
        "isGroup": false,
        "title": "{{i18n.Awp0StartEditTitle}}",
        "description": "{{i18n.Awp0StartEditAssignmentDesc}}"
      },
      "Awp0WorkflowAutoLayoutTopToBottom": {
        "iconId": "cmdDownArrow",
        "isGroup": false,
        "title": "{{i18n.topToBottomLayout}}",
        "selected": {
          "iconId": "cmdDownArrow",
          "title": "{{i18n.topToBottomLayout}}"
        },
        "description": "{{i18n.topToBottomLayoutDesc}}"
      },
      "Awp0WorkflowAutoLayoutRightToLeft": {
        "iconId": "cmdLeftArrow",
        "isGroup": false,
        "title": "{{i18n.rightToLeftLayout}}",
        "selected": {
          "iconId": "cmdLeftArrow",
          "title": "{{i18n.rightToLeftLayout}}"
        },
        "description": "{{i18n.rightToLeftLayoutDesc}}"
      },
      "Awp0WorkflowAutoLayoutLeftToRight": {
        "iconId": "cmdRightArrow",
        "isGroup": false,
        "title": "{{i18n.leftToRightLayout}}",
        "selected": {
          "iconId": "cmdRightArrow",
          "title": "{{i18n.leftToRightLayout}}"
        },
        "description": "{{i18n.leftToRightLayoutDesc}}"
      },
      "Awp0WorkflowFixedLayout": {
        "iconId": "cmdFreezeExchange",
        "isGroup": false,
        "title": "{{i18n.fixedLayout}}",
        "selected": {
          "iconId": "cmdFreezeExchange",
          "title": "{{i18n.fixedLayout}}"
        },
        "description": "{{i18n.Awp0WorkflowFixedLayoutDesc}}"
      },
      "Awp0NewWorkflowSubProcess": {
        "iconId": "cmdSubmitToWorkflow",
        "isGroup": false,
        "title": "{{i18n.createWorkflowSubProcess}}",
        "description": "{{i18n.Awp0NewWorkflowSubProcessDesc}}"
      },
      "Awp0AddWorkflowProcessTarget": {
        "iconId": "cmdAdd",
        "isGroup": false,
        "title": "{{i18n.Add_Title}}",
        "description": "{{i18n.Awp0AddWorkflowProcessTargetDesc}}"
      },
      "Awp0AddReferenceInSubmitToWorkflow": {
        "iconId": "cmdAdd",
        "isGroup": false,
        "title": "{{i18n.Add_Title}}"
      },
      "Awp0RemoveWorkflowProcessTarget": {
        "iconId": "cmdCut",
        "isGroup": false,
        "title": "{{i18n.Awp0CutTitle}}",
        "description": "{{i18n.Awp0RemoveWorkflowProcessTargetDesc}}"
      },
      "Awp0ClearAllSelections": {
        "iconId": "cmdCheckmark",
        "isGroup": false,
        "title": "{{i18n.clearSelections}}"
      },
      "Awp0ClearAllReferenceSelections": {
        "iconId": "cmdCheckmark",
        "isGroup": false,
        "title": "{{i18n.clearSelections}}"
      },
      "Awp0RemoveTaskAssignmentCtx": {
        "iconId": "cmdRemove",
        "isGroup": false,
        "title": "{{i18n.removeCommandTitle}}",
        "description": "{{i18n.Awp0RemoveTaskAssignmentDesc}}"
      },
      "Awp0ReplaceTaskAssignmentCtx": {
        "iconId": "cmdReplace",
        "isGroup": false,
        "title": "{{i18n.Replace_Title}}",
        "description": "{{i18n.Awp0ReplaceTaskAssignmentDesc}}"
      },
      "Awp0WorkflowClosePopupCommand": {
        "iconId": "cmdClosePanel",
        "isGroup": false,
        "title": "{{i18n.closeText}}",
        "description": "{{i18n.Awp0CloseCommandPanelDesc}}"
      },
      "Awp0AddTaskParticipantAssignmentCmd": {
        "iconId": "cmdAdd",
        "isGroup": false,
        "title": "{{i18n.Add}}",
        "description": "{{i18n.Awp0AddTaskParticipantAssignmentCmdDesc}}"
      },
      "Awp0RemoveTaskParticipantAssignmentCmd": {
        "iconId": "cmdRemove",
        "isGroup": false,
        "title": "{{i18n.removeCommandTitle}}",
        "description": "{{i18n.Awp0RemoveTaskParticipantAssignmentCmdDesc}}"
      },
      "Awp0AssignTask": {
        "iconId": "cmdAssignTask",
        "isGroup": false,
        "title": "{{i18n.assignTask}}",
        "description": "{{i18n.assignTask}}"
      },
      "Awp0WorkflowSetPin": {
        "iconId": "cmdPin",
        "title": "{{i18n.addObjectPanelPinButtonToolTip}}",
        "description": "{{i18n.panelPinButtonDesc}}",
        "isToggle": false
      },
      "Awp0WorkflowSetUnPin": {
        "iconId": "cmdUnpin",
        "title": "{{i18n.addObjectPanelUnpinButtonToolTip}}",
        "description": "{{i18n.panelUnPinButtonDesc}}",
        "isToggle": false
      },
      "Awp0AssignTaskAssignmentCtx": {
        "iconId": "cmdAssignUsers",
        "isGroup": false,
        "title": "{{i18n.assignCmdTitle}}",
        "description": "{{i18n.openTaskAssignmentPanel}}"
      },
      "Awp0NewWorkflowProcessTemplate": {
        "iconId": "cmdSubmitToWorkflow",
        "isGroup": false,
        "title": "{{i18n.newWorkflowProcessTemplate}}",
        "description": "{{i18n.Awp0NewWorkflowProcessTemplateDesc}}"
      },
      "Awp0RemoveProcessTemplate": {
        "iconId": "cmdRemove",
        "isGroup": false,
        "title": "{{i18n.delete}}",
        "description": "{{i18n.Awp0RemoveProcessTemplateDesc}}"
      },
      "Awp0ImportWorkflowTemplate": {
        "iconId": "cmdImport",
        "isGroup": false,
        "title": "{{i18n.import}}",
        "description": "{{i18n.Awp0ImportWorkflowTemplateDesc}}"
      },
      "Awp0ExportWorkflowTemplate": {
        "iconId": "cmdExport",
        "isGroup": false,
        "title": "{{i18n.export}}",
        "description": "{{i18n.Awp0ExportWorkflowTemplateDesc}}"
      },
      "Awp0ToggleTemplateChildren": {
        "iconId": "cmdChild",
        "isGroup": false,
        "title": "{{i18n.showChildren}}",
        "description": "{{i18n.Awp0ToggleTemplateChildrenDesc}}"
      },
      "Awp0WorkflowGraphGridSettings": {
        "iconId": "cmdSettings",
        "isGroup": false,
        "title": "{{i18n.gridSetting}}",
        "description": "{{i18n.Awp0WorkflowGraphGridSettingsDesc}}"
      },
      "Awp0TemplateFilters": {
        "iconId": "cmdfilter",
        "isGroup": false,
        "title": "{{i18n.inboxFiltersCommandTitle}}",
        "description": "{{i18n.Awp0TemplateFiltersDesc}}"
      },
      "Awp0TemplateStartEdit": {
        "iconId": "cmdEdit",
        "isGroup": false,
        "title": "{{i18n.Awp0StartEditTitle}}",
        "description": "{{i18n.Awp0TemplateStartEditDesc}}"
      },
      "Awp0TemplateSaveEdit": {
        "iconId": "cmdPublish",
        "isGroup": false,
        "title": "{{i18n.onlineOption}}",
        "description": "{{i18n.Awp0TemplateSaveEditDesc}}"
      },
      "Awp0TemplateEndEdit": {
        "iconId": "cmdSave",
        "isGroup": false,
        "title": "{{i18n.endTemplateEdit}}",
        "description": "{{i18n.Awp0TemplateEndEditDesc}}"
      },
      "Awp0ToggleShowTaskRelatedInfo": {
        "iconId": "cmdPropagateSelection",
        "isGroup": false,
        "title": "{{i18n.showTaskInfo}}",
        "description": "{{i18n.Awp0ToggleShowTaskRelatedInfoDesc}}"
      },
      "Awp0RemoveTaskTemplate": {
        "iconId": "cmdRemove",
        "isGroup": false,
        "title": "{{i18n.Awp0NameValueRemoveTitle}}",
        "description": "{{i18n.Awp0DeleteDesc}}"
      },
      "Awp0TemplateConvertToParent": {
        "iconId": "cmdConvertToParent",
        "isGroup": false,
        "title": "{{i18n.convertToParentCmdTitle}}",
        "description": "{{i18n.Awp0TemplateConvertToParentDesc}}"
      },
      "Awp0TemplateAddNotificationHandler": {
        "iconId": "cmdAdd",
        "isGroup": false,
        "title": "{{i18n.addTitle}}",
        "description": "{{i18n.Awp0TemplateAddNotificationHandlerDesc}}"
      },
      "Awp0TemplateShowNotificationHandlerInfo": {
        "iconId": "cmdShowInfoPanel",
        "isGroup": false,
        "title": "{{i18n.Awp0ObjectInfoTitle}}",
        "description": "{{i18n.Awp0TemplateShowNotificationHandlerInfoDesc1}}"
      },
      "Awp0TemplateEditNotificationHandlerInfo": {
        "iconId": "cmdEdit",
        "isGroup": false,
        "title": "{{i18n.Awp0StartEditTableTitle}}",
        "description": "{{i18n.Awp0TemplateEditNotificationHandlerInfoDesc}}"
      },
      "Awp0TemplateRemoveNotificationHandler": {
        "iconId": "cmdRemove",
        "isGroup": false,
        "title": "{{i18n.removeCommandTitle}}",
        "description": "{{i18n.Awp0TemplateRemoveNotificationHandlerDesc1}}"
      },
      "Awp0TemplateAddArgument": {
        "iconId": "cmdAdd",
        "isGroup": false,
        "title": "{{i18n.addTitle}}",
        "description": "{{i18n.Awp0TemplateAddArgumentDesc}}"
      },
      "Awp0TemplateRemoveArgument": {
        "iconId": "cmdRemove",
        "isGroup": false,
        "title": "{{i18n.removeCommandTitle}}",
        "description": "{{i18n.Awp0TemplateRemoveArgumentDesc}}"
      },
      "Awp0ActionHandlerTableAdd": {
        "iconId": "cmdAdd",
        "isGroup": false,
        "title": "{{i18n.addTitle}}",
        "description": "{{i18n.Awp0ActionHandlerTableAddDesc}}"
      },
      "Awp0RuleHandlerTableAdd": {
        "iconId": "cmdAdd",
        "isGroup": false,
        "title": "{{i18n.addTitle}}",
        "description": "{{i18n.Awp0RuleHandlerTableAddDesc}}"
      },
      "Awp0AddHandlerArgumentPanel": {
        "iconId": "cmdAdd",
        "isGroup": false,
        "title": "{{i18n.addTitle}}",
        "description": "{{i18n.Awp0AddHandlerArgumentPanelDesc}}"
      },
      "Awp0RemoveHandlerArgumentPanel": {
        "iconId": "cmdRemove",
        "isGroup": false,
        "title": "{{i18n.delete}}",
        "description": "{{i18n.Awp0RemoveHandlerArgumentPanelDesc}}"
      },
      "Awp0RemoveActionHandler": {
        "iconId": "cmdRemove",
        "isGroup": false,
        "title": "{{i18n.delete}}",
        "description": "{{i18n.Awp0RemoveActionHandlerDesc}}"
      },
      "Awp0RemoveRuleHandler": {
        "iconId": "cmdRemove",
        "isGroup": false,
        "title": "{{i18n.delete}}",
        "description": "{{i18n.Awp0RemoveRuleHandlerDesc}}"
      },
      "Awp0StartActionHandlerInfo": {
        "iconId": "cmdShowInfoPanel",
        "isGroup": false,
        "title": "{{i18n.Awp0ObjectInfoTitle}}",
        "description": "{{i18n.Awp0StartActionHandlerInfoDesc}}"
      },
      "Awp0StartRuleHandlerInfo": {
        "iconId": "cmdShowInfoPanel",
        "isGroup": false,
        "title": "{{i18n.Awp0ObjectInfoTitle}}",
        "description": "{{i18n.Awp0StartRuleHandlerInfoDesc}}"
      },
      "Awp0StartActionHandlerEdit": {
        "iconId": "cmdEdit",
        "isGroup": false,
        "title": "{{i18n.Awp0StartEditTableTitle}}",
        "description": "{{i18n.Awp0StartActionHandlerEditDesc}}"
      },
      "Awp0StartRuleHandlerEdit": {
        "iconId": "cmdEdit",
        "isGroup": false,
        "title": "{{i18n.Awp0StartEditTableTitle}}",
        "description": "{{i18n.Awp0StartRuleHandlerEditDesc}}"
      },
      "Awp0StartArgumentEdit": {
        "iconId": "cmdEdit",
        "isGroup": false,
        "title": "{{i18n.Awp0StartEditTitle}}",
        "description": "{{i18n.Awp0StartArgumentEditDesc}}"
      },
      "Awp0ActionHandlerCut": {
        "iconId": "cmdCut",
        "isGroup": false,
        "title": "{{i18n.Awp0CutTitle}}",
        "description": "{{i18n.handlerCutDesc}}"
      },
      "Awp0ActionHandlerCopy": {
        "iconId": "cmdCopy",
        "isGroup": false,
        "title": "{{i18n.Awp0CopyTitle}}",
        "description": "{{i18n.handlerCopyDesc}}"
      },
      "Awp0ActionHandlerPasteGroup": {
        "iconId": "cmdPaste",
        "isGroup": true,
        "title": "{{i18n.Awp0PasteTitle}}",
        "description": "{{i18n.pasteHandlerDesc}}"
      },
      "Awp0StartActionType": {
        "iconId": "cmdPaste",
        "isGroup": false,
        "title": "{{i18n.start_action}}",
        "selected": {
          "iconId": "cmdPaste",
          "title": "{{i18n.start_action}}"
        },
        "description": "{{i18n.Awp0StartActionTypeDesc}}"
      },
      "Awp0AssignActionType": {
        "iconId": "cmdPaste",
        "isGroup": false,
        "title": "{{i18n.assign_action}}",
        "selected": {
          "iconId": "cmdPaste",
          "title": "{{i18n.assign_action}}"
        },
        "description": "{{i18n.Awp0AssignActionTypeDesc}}"
      },
      "Awp0PerformActionType": {
        "iconId": "cmdPaste",
        "isGroup": false,
        "title": "{{i18n.perform_action}}",
        "selected": {
          "iconId": "cmdPaste",
          "title": "{{i18n.perform_action}}"
        },
        "description": "{{i18n.Awp0PerformActionTypeDesc}}"
      },
      "Awp0CompleteActionType": {
        "iconId": "cmdPaste",
        "isGroup": false,
        "title": "{{i18n.complete_action}}",
        "selected": {
          "iconId": "cmdPaste",
          "title": "{{i18n.complete_action}}"
        },
        "description": "{{i18n.Awp0CompleteActionTypeDesc}}"
      },
      "Awp0SkipActionType": {
        "iconId": "cmdPaste",
        "isGroup": false,
        "title": "{{i18n.skip_action}}",
        "selected": {
          "iconId": "cmdPaste",
          "title": "{{i18n.skip_action}}"
        },
        "description": "{{i18n.Awp0SkipActionTypeDesc}}"
      },
      "Awp0SuspendActionType": {
        "iconId": "cmdPaste",
        "isGroup": false,
        "title": "{{i18n.suspend_action}}",
        "selected": {
          "iconId": "cmdPaste",
          "title": "{{i18n.suspend_action}}"
        },
        "description": "{{i18n.Awp0SuspendActionTypeDesc}}"
      },
      "Awp0ResumeActionType": {
        "iconId": "cmdPaste",
        "isGroup": false,
        "title": "{{i18n.resume_action}}",
        "selected": {
          "iconId": "cmdPaste",
          "title": "{{i18n.resume_action}}"
        },
        "description": "{{i18n.Awp0ResumeActionTypeDesc}}"
      },
      "Awp0AbortActionType": {
        "iconId": "cmdPaste",
        "isGroup": false,
        "title": "{{i18n.abort_action}}",
        "selected": {
          "iconId": "cmdPaste",
          "title": "{{i18n.abort_action}}"
        },
        "description": "{{i18n.Awp0AbortActionTypeDesc}}"
      },
      "Awp0UndoActionType": {
        "iconId": "cmdPaste",
        "isGroup": false,
        "title": "{{i18n.undo_action}}",
        "selected": {
          "iconId": "cmdPaste",
          "title": "{{i18n.undo_action}}"
        },
        "description": "{{i18n.Awp0UndoActionTypeDesc}}"
      },
      "Awp0ActionHandlerMoveUp": {
        "iconId": "cmdMoveUp",
        "isGroup": false,
        "title": "{{i18n.exportMoveUpCommandTitle}}",
        "description": "{{i18n.handlerMoveupDesc}}"
      },
      "Awp0ActionHandlerMoveDown": {
        "iconId": "cmdMoveDown",
        "isGroup": false,
        "title": "{{i18n.exportMoveDownCommandTitle}}",
        "description": "{{i18n.handlerMoveDownDesc}}"
      },
      "Awp0RuleHandlerMoveUp": {
        "iconId": "cmdMoveUp",
        "isGroup": false,
        "title": "{{i18n.exportMoveUpCommandTitle}}",
        "description": "{{i18n.handlerMoveupDesc}}"
      },
      "Awp0RuleHandlerMoveDown": {
        "iconId": "cmdMoveDown",
        "isGroup": false,
        "title": "{{i18n.exportMoveDownCommandTitle}}",
        "description": "{{i18n.handlerMoveDownDesc}}"
      },
      "Awp0RuleHandlerCut": {
        "iconId": "cmdCut",
        "isGroup": false,
        "title": "{{i18n.Awp0CutTitle}}",
        "description": "{{i18n.handlerCutDesc}}"
      },
      "Awp0RuleHandlerCopy": {
        "iconId": "cmdCopy",
        "isGroup": false,
        "title": "{{i18n.Awp0CopyTitle}}",
        "description": "{{i18n.handlerCopyDesc}}"
      },
      "Awp0RuleHandlerPasteGroup": {
        "iconId": "cmdPaste",
        "isGroup": true,
        "title": "{{i18n.Awp0PasteTitle}}",
        "description": "{{i18n.pasteHandlerDesc}}"
      },
      "Awp0StartActionTypeForRule": {
        "iconId": "cmdPaste",
        "isGroup": false,
        "title": "{{i18n.start_action}}",
        "selected": {
          "iconId": "cmdPaste",
          "title": "{{i18n.start_action}}"
        },
        "description": "{{i18n.Awp0StartActionTypeForRuleDesc}}"
      },
      "Awp0AssignActionTypeForRule": {
        "iconId": "cmdPaste",
        "isGroup": false,
        "title": "{{i18n.assign_action}}",
        "selected": {
          "iconId": "cmdPaste",
          "title": "{{i18n.assign_action}}"
        },
        "description": "{{i18n.Awp0AssignActionTypeForRuleDesc}}"
      },
      "Awp0PerformActionTypeForRule": {
        "iconId": "cmdPaste",
        "isGroup": false,
        "title": "{{i18n.perform_action}}",
        "selected": {
          "iconId": "cmdPaste",
          "title": "{{i18n.perform_action}}"
        },
        "description": "{{i18n.Awp0PerformActionTypeForRuleDesc}}"
      },
      "Awp0CompleteActionTypeForRule": {
        "iconId": "cmdPaste",
        "isGroup": false,
        "title": "{{i18n.complete_action}}",
        "selected": {
          "iconId": "cmdPaste",
          "title": "{{i18n.complete_action}}"
        },
        "description": "{{i18n.Awp0CompleteActionTypeForRuleDesc}}"
      },
      "Awp0SkipActionTypeForRule": {
        "iconId": "cmdPaste",
        "isGroup": false,
        "title": "{{i18n.skip_action}}",
        "selected": {
          "iconId": "cmdPaste",
          "title": "{{i18n.skip_action}}"
        },
        "description": "{{i18n.Awp0SkipActionTypeForRuleDesc}}"
      },
      "Awp0SuspendActionTypeForRule": {
        "iconId": "cmdPaste",
        "isGroup": false,
        "title": "{{i18n.suspend_action}}",
        "selected": {
          "iconId": "cmdPaste",
          "title": "{{i18n.suspend_action}}"
        },
        "description": "{{i18n.Awp0SuspendActionTypeForRuleDesc}}"
      },
      "Awp0ResumeActionTypeForRule": {
        "iconId": "cmdPaste",
        "isGroup": false,
        "title": "{{i18n.resume_action}}",
        "selected": {
          "iconId": "cmdPaste",
          "title": "{{i18n.resume_action}}"
        },
        "description": "{{i18n.Awp0ResumeActionTypeForRuleDesc}}"
      },
      "Awp0AbortActionTypeForRule": {
        "iconId": "cmdPaste",
        "isGroup": false,
        "title": "{{i18n.abort_action}}",
        "selected": {
          "iconId": "cmdPaste",
          "title": "{{i18n.abort_action}}"
        },
        "description": "{{i18n.Awp0AbortActionTypeForRuleDesc}}"
      },
      "Awp0UndoActionTypeForRule": {
        "iconId": "cmdPaste",
        "isGroup": false,
        "title": "{{i18n.undo_action}}",
        "selected": {
          "iconId": "cmdPaste",
          "title": "{{i18n.undo_action}}"
        },
        "description": "{{i18n.Awp0UndoActionTypeForRuleDesc}}"
      },
      "Awp0TemplateAddAssignmentHandler": {
        "iconId": "cmdAdd",
        "isGroup": false,
        "title": "{{i18n.addTitle}}",
        "description": "{{i18n.Awp0TemplateAddAssignmentHandlerDesc}}"
      },
      "Awp0TemplateShowProfileInfo": {
        "iconId": "cmdShowInfoPanel",
        "isGroup": false,
        "title": "{{i18n.Awp0ObjectInfoTitle}}",
        "description": "{{i18n.Awp0TemplateShowAssignmentHandlerInfoDesc}}"
      },
      "Awp0TemplateEditProfileInfo": {
        "iconId": "cmdEdit",
        "isGroup": false,
        "title": "{{i18n.Awp0StartEditTableTitle}}",
        "description": "{{i18n.Awp0TemplateEditAssignmentHandlerInfoDesc}}"
      },
      "Awp0TemplateShowAssignmentHandlerInfo": {
        "iconId": "cmdShowInfoPanel",
        "isGroup": false,
        "title": "{{i18n.Awp0ObjectInfoTitle}}",
        "description": "{{i18n.Awp0TemplateShowAssignmentHandlerInfoDesc}}"
      },
      "Awp0TemplateEditAssignmentHandlerInfo": {
        "iconId": "cmdEdit",
        "isGroup": false,
        "title": "{{i18n.Awp0StartEditTableTitle}}",
        "description": "{{i18n.Awp0TemplateEditAssignmentHandlerInfoDesc}}"
      },
      "Awp0TemplateRemoveSignoffProfile": {
        "iconId": "cmdRemove",
        "isGroup": false,
        "title": "{{i18n.removeCommandTitle}}",
        "description": "{{i18n.Awp0TemplateRemoveAssignmentHandlerDesc}}"
      },
      "Awp0TemplateRemoveAssignmentHandler": {
        "iconId": "cmdRemove",
        "isGroup": false,
        "title": "{{i18n.removeCommandTitle}}",
        "description": "{{i18n.Awp0TemplateRemoveAssignmentHandlerDesc}}"
      },
      "Awp0TemplateAddFormHandler": {
        "iconId": "cmdAdd",
        "isGroup": false,
        "title": "{{i18n.addTitle}}"
      },
      "Awp0TemplateShowFormHandlerInfo": {
        "iconId": "cmdShowInfoPanel",
        "isGroup": false,
        "title": "{{i18n.Awp0ObjectInfoTitle}}"
      },
      "Awp0TemplateEditFormHandlerInfo": {
        "iconId": "cmdEdit",
        "isGroup": false,
        "title": "{{i18n.Awp0StartEditTableTitle}}"
      },
      "Awp0TemplateRemoveFormHandler": {
        "iconId": "cmdRemove",
        "isGroup": false,
        "title": "{{i18n.delete}}"
      },
      "Awp0SaveGraphPositions": {
        "iconId": "cmdSaveAsDiagram",
        "isGroup": false,
        "title": "{{i18n.saveGraphPosition}}",
        "description": "{{i18n.Awp0SaveGraphPositionsDesc}}"
      },
      "Awp0ShowFixedLayout": {
        "iconId": "cmdManualValidation",
        "isGroup": false,
        "title": "{{i18n.showFixedLayout}}",
        "description": "{{i18n.Awp0ShowFixedLayoutDesc}}"
      },
      "Awp0ShowAutoLayout": {
        "iconId": "cmdAutoLayout",
        "isGroup": false,
        "title": "{{i18n.showAutoLayout}}",
        "description": "{{i18n.Awp0ShowAutoLayoutDesc}}"
      },
      "Awp0WorkflowGraphLegendPanel": {
        "iconId": "cmdShowRelationsControls",
        "isGroup": false,
        "title": "{{i18n.taskPalette}}"
      },
      "Awp0RuleHandlerHelp": {
        "iconId": "homeHelp",
        "isGroup": false,
        "title": "{{i18n.helpTitle}}",
        "description": "{{i18n.helpDesc}}"
      },
      "Awp0ActionHandlerHelp": {
        "iconId": "homeHelp",
        "isGroup": false,
        "title": "{{i18n.helpTitle}}",
        "description": "{{i18n.helpDesc}}"
      },
      "Awp0TemplateAssignmentProfileCellCommand": {
        "iconId": "cmdAdd",
        "isGroup": false,
        "title": "{{i18n.Add_Title}}",
        "description": "{{i18n.Awp0TemplateAssignmentProfileCellCommandDesc}}"
      },
      "Awp0ImportPAL": {
        "iconId": "cmdImport",
        "isGroup": false,
        "title": "{{i18n.import}}",
        "description": "{{i18n.importPALDesc}}"
      },
      "Awp0ExportPAL": {
        "iconId": "cmdExport",
        "isGroup": false,
        "title": "{{i18n.export}}",
        "description": "{{i18n.exportPALDesc}}"
      },
      "Awp0AddTemplateUserAssignmentCmd": {
        "iconId": "cmdAdd",
        "isGroup": false,
        "title": "{{i18n.Add_Title}}",
        "description": "{{i18n.Awp0AddTemplateUserAssignmentCmdDesc}}"
      },
      "Awp0RemoveTemplateUsersAssignmentCmd": {
        "iconId": "cmdRemove",
        "isGroup": false,
        "title": "{{i18n.removeCommandTitle}}",
        "description": "{{i18n.Awp0RemoveProcessAssignmentCmdDesc}}"
      },
      "Awp0StartEditTemplateAssignment": {
        "iconId": "cmdEdit",
        "isGroup": false,
        "title": "{{i18n.Awp0StartEditTitle}}",
        "description": "{{i18n.Awp0StartEditTemplateAssignmentDesc}}"
      },
      "Awp0SaveTemplateAssignment": {
        "iconId": "cmdSave",
        "isGroup": false,
        "title": "{{i18n.saveEdit}}",
        "description": "{{i18n.Awp0SaveTemplateAssignmentDesc}}"
      },
      "Awp0CancelTemplateAssignment": {
        "iconId": "cmdCancelEdit",
        "isGroup": false,
        "title": "{{i18n.cancelEdit}}",
        "description": "{{i18n.Awp0CancelTemplateAssignmentDesc}}"
      },
      "Awp0CreateProcessAssignmentList": {
        "iconId": "cmdAdd",
        "isGroup": false,
        "title": "{{i18n.createProcessAssignmentList}}",
        "description": "{{i18n.Awp0CreateProcessAssignmentListDesc}}"
      },
      "Awp0RemovePAL": {
        "iconId": "cmdRemove",
        "isGroup": false,
        "title": "{{i18n.removePAL}}",
        "description": "{{i18n.Awp0RemovePALDesc}}"
      },
      "Awp0PALAssignUsersCtx": {
        "iconId": "cmdAssignUsers",
        "isGroup": false,
        "title": "{{i18n.assignCmdTitle}}",
        "description": "{{i18n.openTaskAssignmentPanel}}"
      }
    },
    "commandHandlers": {
      "Awp0CreateWorkflowCommandHandler": {
        "id": "Awp0CreateWorkflow",
        "action": "getSubmitToWorkflowInputs",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.displayCreateWorkflow"
        }
      },
      "OpenTaskCommandHandler": {
        "id": "Awp0ShowObject",
        "action": "workflowShowDelegatedObject",
        "activeWhen": {
          "condition": "conditions.workflowOpenConditionActive"
        },
        "visibleWhen": {
          "condition": "conditions.workflowOpenConditionActive"
        }
      },
      "awp0PromoteTaskCommandHandler": {
        "id": "Awp0PromoteTask",
        "action": "awp0PromoteTaskCommandAction",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.awp0PromoteTaskCommandCondition"
        }
      },
      "awp0OutOfOfficeCommandHandler": {
        "id": "Awp0OutOfOffice",
        "action": "awp0OutOfOfficeCommandAction",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.awp0OutOfOfficeCommandCondition"
        }
      },
      "awp0OpenInboxLocationCommandHandler": {
        "id": "Awp0OpenInboxLocation",
        "action": "awp0OpenInboxLocationCommandAction",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.awp0OpenInboxLocationCommandCondition"
        }
      },
      "awp0InboxFiltersCommandHandler": {
        "id": "Awp0InboxFilters",
        "action": "awp0InboxFiltersCommandAction",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.awp0InboxFiltersCommandCondition"
        }
      },
      "Awp0InboxAddCmdHandler": {
        "id": "Awp0InboxAddCmd",
        "action": "awp0InboxUserTabSubPanelAction",
        "activeWhen": true,
        "visibleWhen": true
      },
      "Awp0SurrogateAddCmdHandler": {
        "id": "Awp0SurrogateAddCmd",
        "action": "awp0InboxUserTabSubPanelAction",
        "activeWhen": true,
        "visibleWhen": true
      },
      "Awp0UserAssignmentShowObjectCommandHandler": {
        "id": "Awp0ShowObject",
        "action": "Awp0UserAssignmentShowDelegatedObject",
        "activeWhen": {
          "condition": "conditions.Awp0UserAssignmentOpenConditionActive"
        },
        "visibleWhen": {
          "condition": "conditions.Awp0UserAssignmentOpenConditionActive"
        }
      },
      "Awp0AddReviewProfileSignoffCellCommandHandler": {
        "id": "Awp0AddReviewProfileSignoffCellCommand",
        "action": "addReviewProfileSignoffCellCommand",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isAddReviewProfileSignoffCommandVisible"
        }
      },
      "Awp0AddReviewAdhocSignoffCommandHandler": {
        "id": "Awp0AddReviewAdhocSignoffCommand",
        "action": "addReviewAdhocSignoffCommand",
        "activeWhen": true,
        "visibleWhen": true
      },
      "Awp0RemoveReviewProfileSignoffCommandHandler": {
        "id": "Awp0RemoveReviewProfileSignoffCommand",
        "action": "removeReviewProfileSignoffCommand",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isReviewProfileSignoffObjectsSelected"
        }
      },
      "Awp0RemoveReviewAdhocSignoffCommandHandler": {
        "id": "Awp0RemoveReviewAdhocSignoffCommand",
        "action": "removeReviewAdhocSignoffCommand",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isReviewAdhocSignoffObjectsSelected"
        }
      },
      "Awp0AddSurrogateCommandHandler": {
        "id": "Awp0AddSurrogate",
        "action": "createPresenterForAddSurrogate",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.addSurrogateCmdCond"
        }
      },
      "Awp0AddResourcePoolCommandHandler": {
        "id": "Awp0AddResourcePool",
        "action": "AddResourcePoolCommand",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.addResPoolSubCmdCond"
        }
      },
      "Awp0RemoveResourcePoolCommandHandler": {
        "id": "Awp0RemoveResourcePool",
        "action": "getAwp0UserSubInboxProperty",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.removeSubResPool"
        }
      },
      "Awp0UserAssignmentShowObjectCellCommandHandler": {
        "id": "Awp0ShowObjectCell",
        "action": "Awp0UserAssignmentShowObjectCell",
        "activeWhen": {
          "condition": "conditions.Awp0UserAssignmentShowObjectCellCondition"
        },
        "visibleWhen": {
          "condition": "conditions.Awp0UserAssignmentShowObjectCellCondition"
        }
      },
      "Awp0AddAcknowledgeAdhocSignoffCommandHandler": {
        "id": "Awp0AddAcknowledgeAdhocSignoffCommand",
        "action": "addAcknowledgeAdhocSignoffCommand",
        "activeWhen": true,
        "visibleWhen": true
      },
      "Awp0RemoveAcknowledgeAdhocSignoffCommandHandler": {
        "id": "Awp0RemoveAcknowledgeAdhocSignoffCommand",
        "action": "removeAcknowledgeAdhocSignoffCommand",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isAcknowledgeAdhocSignoffObjectsSelected"
        }
      },
      "Awp0AddNotifyAdhocSignoffCommandHandler": {
        "id": "Awp0AddNotifyAdhocSignoffCommand",
        "action": "addNotifyAdhocSignoffCommand",
        "activeWhen": true,
        "visibleWhen": true
      },
      "Awp0RemoveNotifyAdhocSignoffCommandHandler": {
        "id": "Awp0RemoveNotifyAdhocSignoffCommand",
        "action": "removeNotifyAdhocSignoffCommand",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isNotifyAdhocSignoffObjectsSelected"
        }
      },
      "Awp0ReassignTaskCommandHandler": {
        "id": "Awp0ReassignTask",
        "action": "reassignTaskAction",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.Awp0ReassignTaskCommandCondition"
        }
      },
      "Awp0ReleaseCommandHandler": {
        "id": "Awp0Release",
        "action": "releaseCommandAction",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.releaseCmdCond"
        }
      },
      "inboxCopyCommandHandler": {
        "id": "Awp0Copy",
        "action": "copyUserAssignment",
        "activeWhen": {
          "condition": "conditions.isSurrogate"
        },
        "enableWhen": {
          "condition": "conditions.cmdCopyCommandVisible"
        }
      },
      "inboxCopyContextMenuCommandHandler": {
        "id": "Awp0CopyContextMenu",
        "action": "copyUserAssignment",
        "activeWhen": {
          "condition": "conditions.isSurrogate"
        },
        "visibleWhen": {
          "condition": "conditions.cmdCopyCommandVisible"
        }
      },
      "Awp0StandInCommandHandler": {
        "id": "Awp0StandIn",
        "action": "performStandInAction",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.standInCmdCond"
        }
      },
      "Awp0AddReviewerCmdHandler": {
        "id": "Awp0AddReviewer",
        "action": "setContextVariableForAddReviewer",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.awp0AddReviewerCmdCond"
        }
      },
      "Awp0RemoveSurrogateCommandHandler": {
        "id": "Awp0RemoveSurrogate",
        "action": "getAwp0UserProperty",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.removeSurrogate"
        }
      },
      "Awp0PerformTaskCommandHandler": {
        "id": "Awp0PerformTaskPanel",
        "action": "isPerformTaskCommandClicked",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.Awp0PerformTaskCommandCondition"
        }
      },
      "Awp0ClaimTaskCommandHandler": {
        "id": "Awp0ClaimTask",
        "action": "ClaimTask",
        "activeWhen": {
          "condition": "conditions.claimTaskCmdCond"
        },
        "visibleWhen": {
          "condition": "conditions.claimTaskCmdCond"
        }
      },
      "Awp0ClaimSignoffCommandHandler": {
        "id": "Awp0ClaimTask",
        "action": "claimSignoffObject",
        "activeWhen": {
          "condition": "conditions.claimSignoffCmdCond"
        },
        "visibleWhen": {
          "condition": "conditions.claimSignoffCmdCond"
        }
      },
      "EPMTaskOrSignoffShowObjectCellNavigateCommandHandler": {
        "id": "Awp0ShowObjectCellForObjectNavigation",
        "action": "openEPMTaskOrSignoffCommandAction",
        "activeWhen": {
          "condition": "conditions.openEPMTaskOrSignoffCommandVisibleCondition"
        },
        "visibleWhen": {
          "condition": "conditions.openEPMTaskOrSignoffCommandVisibleCondition"
        }
      },
      "EPMTaskOrSignoffShowObjectCellCommandHandler": {
        "id": "Awp0ShowObjectCell",
        "action": "openEPMTaskOrSignoffCommandAction",
        "activeWhen": {
          "condition": "conditions.openEPMTaskOrSignoffCommandVisibleCondition"
        },
        "visibleWhen": {
          "condition": "conditions.openEPMTaskOrSignoffCommandVisibleCondition"
        }
      },
      "Awp0AbortTaskCommandHandler": {
        "id": "Awp0AbortTask",
        "action": "Awp0AbortTaskActivatePanel",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.Awp0AbortTaskCommandVisibility"
        }
      },
      "Awp0UserAssignmentCutCommandHandler": {
        "id": "Awp0Cut",
        "activeWhen": {
          "condition": "conditions.Awp0UserAssignmentCutConditionActive"
        },
        "enableWhen": false
      },
      "Awp0UserAssignmentCutCtxMwenuCommandHandler": {
        "id": "Awp0CutContextMenu",
        "activeWhen": {
          "condition": "conditions.Awp0UserAssignmentCutConditionActive"
        },
        "visibleWhen": false
      },
      "Awp0SignoffReviewersCutCommandHandler": {
        "id": "Awp0Cut",
        "activeWhen": {
          "condition": "conditions.Awp0SignoffReviewersCutConditionActive"
        },
        "enableWhen": false
      },
      "Awp0SignoffReviewersCutCtxMwenuCommandHandler": {
        "id": "Awp0CutContextMenu",
        "activeWhen": {
          "condition": "conditions.Awp0SignoffReviewersCutConditionActive"
        },
        "visibleWhen": false
      },
      "Awp0GoInboxHandler": {
        "id": "Awp0GoInbox",
        "action": "showInbox",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.enableInboxWihBubbleCommand"
        }
      },
      "awp0DemoteTaskCommandHandler": {
        "id": "Awp0DemoteTask",
        "action": "awp0DemoteTaskCommandAction",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.awp0DemoteTaskCommandCondition"
        }
      },
      "awp0SuspendTaskCommandHandler": {
        "id": "Awp0SuspendTask",
        "action": "awp0SuspendTaskCommandAction",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.awp0SuspendTaskCommandCondition"
        }
      },
      "awp0ResumeTaskCommandHandler": {
        "id": "Awp0ResumeTask",
        "action": "awp0ResumeTaskCommandAction",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.awp0ResumeTaskCommandCondition"
        }
      },
      "showInboxWithoutBubbleCommandHandler": {
        "id": "Awp0GoInboxWithoutBubble",
        "action": "showInbox",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.enableInboxWithoutBubbleCommand"
        }
      },
      "Awp0DeleteTaskCommandHandler": {
        "id": "Awp0Delete",
        "action": "deleteTaskAction",
        "activeWhen": {
          "condition": "conditions.isDeleteTaskCommandActive"
        },
        "visibleWhen": false
      },
      "Awp0DeleteWorkflowCommandHandler": {
        "id": "Awp0DeleteWorkflow",
        "action": "deleteTaskAction",
        "activeWhen": {
          "condition": "conditions.isDeleteTaskCommandActive"
        },
        "visibleWhen": {
          "condition": "conditions.isDeleteTaskCommandVisible"
        }
      },
      "Awp0AddRemoteInboxCommandHandler": {
        "id": "Awp0AddRemoteInboxCmd",
        "action": "openAddRemoteInboxPanel",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isAddRemoteInboxCommandVisible"
        }
      },
      "Awp0RemoteInboxShowObjectCommandHandler": {
        "id": "Awp0ShowObject",
        "action": "openContextRemoteInboxObject",
        "activeWhen": {
          "condition": "conditions.openRemoteInboxContextCommandVisibleCondition"
        },
        "visibleWhen": {
          "condition": "conditions.openRemoteInboxContextCommandVisibleCondition"
        }
      },
      "Awp0RemoteInboxShowObjectCommandHandlerCellHandler": {
        "id": "Awp0ShowObjectCell",
        "action": "openRemoteInboxObject",
        "activeWhen": {
          "condition": "conditions.openRemoteInboxCommandVisibleCondition"
        },
        "visibleWhen": {
          "condition": "conditions.openRemoteInboxCommandVisibleCondition"
        }
      },
      "Awp0RemoteInboxInNewTabHandler": {
        "id": "Awp0OpenInNewTab",
        "action": "openContextRemoteInboxObject",
        "activeWhen": {
          "condition": "conditions.openRemoteInboxContextCommandVisibleCondition"
        },
        "visibleWhen": {
          "condition": "conditions.openRemoteInboxContextCommandVisibleCondition"
        }
      },
      "Awp0RemoteInboxInNewWindowHandler": {
        "id": "Awp0OpenInNewWindow",
        "action": "openContextRemoteInboxObject",
        "activeWhen": {
          "condition": "conditions.openRemoteInboxContextCommandVisibleCondition"
        },
        "visibleWhen": {
          "condition": "conditions.openRemoteInboxContextCommandVisibleCondition"
        }
      },
      "Awp0CutRemoteTaskInboxCommandHandler": {
        "id": "Awp0Cut",
        "action": "removeRemoteInboxSubscription",
        "activeWhen": {
          "condition": "conditions.isCutRemoteInboxCommandVisible"
        },
        "visibleWhen": {
          "condition": "conditions.isCutRemoteInboxCommandVisible"
        },
        "enableWhen": {
          "condition": "conditions.isCutRemoteInboxCommandVisible"
        }
      },
      "Awp0CutCtxMenuRemoteTaskInboxCommandHandler": {
        "id": "Awp0CutContextMenu",
        "action": "removeRemoteInboxSubscription",
        "activeWhen": {
          "condition": "conditions.isCutRemoteInboxCommandVisible"
        },
        "visibleWhen": {
          "condition": "conditions.isCutRemoteInboxCommandVisible"
        }
      },
      "Awp0RemoteInboxCreateTraceLinkHandler": {
        "id": "Arm0CreateTraceLinkCtx",
        "activeWhen": {
          "condition": "conditions.isRemoteInboxTracelinkCommandCondition"
        },
        "visibleWhen": false
      },
      "Awp0RemoteInboxArm0ExistingTraceLinkHandler": {
        "id": "Arm0ExistingTraceLink",
        "activeWhen": {
          "condition": "conditions.isRemoteInboxTracelinkCommandCondition"
        },
        "visibleWhen": false
      },
      "awp0ReplaceMultipleParticipantsCommandHandler": {
        "id": "Awp0ReplaceMultipleParticipants",
        "action": "awp0ReplaceMultipleParticipantsCommandAction",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.awp0ReplaceMultipleParticipantsCommandCondition"
        }
      },
      "Awp0ProfileSignoffCellCommandHandler": {
        "id": "Awp0ProfileSignoffCellCommand",
        "action": "awp0AddTasksAssignmentAction",
        "activeWhen": {
          "condition": "conditions.isProfileSubmitWithTemplateCellCommandActive"
        },
        "visibleWhen": {
          "condition": "conditions.isProfileSubmitWithTemplateCommandVisible"
        }
      },
      "openProcessInViewerCommandHandler": {
        "id": "OpenProcessInViewer",
        "action": "openProcessInViewerCommandAction",
        "activeWhen": true,
        "visibleWhen": true
      },
      "Awp0FromSectionAddCmdHandler": {
        "id": "Awp0FromSectionAddCmd",
        "action": "Awp0FromSectionAddCmdAction",
        "activeWhen": true,
        "visibleWhen": true
      },
      "Awp0ToggleChildrenCommandHandler": {
        "id": "Awp0ToggleChildren",
        "action": "expandChildren",
        "activeWhen": true,
        "visibleWhen": true
      },
      "Awp0ToggleSubProcessCommandHandler": {
        "id": "Awp0ToggleSubProcess",
        "action": "expandSubProcess",
        "activeWhen": true,
        "visibleWhen": true
      },
      "Awp0ToSectionAddCmdHandler": {
        "id": "Awp0ToSectionAddCmd",
        "action": "Awp0ToSectionAddCmdAction",
        "activeWhen": true,
        "visibleWhen": true
      },
      "Awp0NewWorkflowProcessCommandHandler": {
        "id": "Awp0NewWorkflowProcess",
        "action": "getSubmitToWorkflowInputs",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.awp0NewWorkflowProcessCommandCondition"
        },
        "selectWhen": {
          "condition": "conditions.isSubmitWorkflowPopupPanelActive"
        }
      },
      "Awp0AddParticipantCommandHandler": {
        "id": "Awp0AddParticipant",
        "action": "Awp0AddParticipantCommandAction",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.Awp0AddParticipantCommandVisibility"
        }
      },
      "Awp0ReplaceParticipantCommandHandler": {
        "id": "Awp0ReplaceParticipant",
        "action": "Awp0ReplaceParticipantCommandAction",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.Awp0ReplaceParticipantCommandVisibility"
        }
      },
      "Awp0RemoveParticipantCommandHandler": {
        "id": "Awp0RemoveParticipant",
        "action": "Awp0RemoveParticipantCommandAction",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.Awp0RemoveParticipantCommandVisibility"
        }
      },
      "Awp0ProcessAssignmentCommandHandler": {
        "id": "Awp0AddProcessAssignmentCmd",
        "action": "awp0ProcessAssignmentAction",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.Awp0ProcessAssignmentCommandVisibility"
        }
      },
      "Awp0RemoveProcessAssignmentCommandHandler": {
        "id": "Awp0RemoveProcessAssignmentCmd",
        "action": "removeParticipantAssignments",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.Awp0RemoveProcessAssignmentCommandVisibility"
        }
      },
      "Awp0RemoveReferenceCommandHandler": {
        "id": "Awp0RemoveReference",
        "action": "removeWorkflowProcessReference",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isRemoveSelectedProcessReferenceCommandVisible"
        }
      },
      "WorkflowShowLegendHandler": {
        "id": "graphLegend",
        "activeWhen": {
          "condition": "conditions.WorkflowShowLegendHandlerConditionActive"
        },
        "visibleWhen": false
      },
      "Awp0AddTasksAssignmentCommandHandler": {
        "id": "Awp0AddTaskAssignmentCmd",
        "action": "awp0AddTasksAssignmentAction",
        "activeWhen": {
          "condition": "conditions.Awp0AddTaskAssignmentCommandVisible"
        },
        "visibleWhen": {
          "condition": "conditions.Awp0AddTaskAssignmentCommandVisibility"
        }
      },
      "Awp0RemoveTaskAssignmentCommandHandler": {
        "id": "Awp0RemoveTaskAssignmentCmd",
        "action": "awp0RemoveTaskAssignmentAction",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.Awp0RemoveTaskAssignmentCommandVisibility"
        }
      },
      "Awp0PasteUserAssignmentCmdCommandHandler": {
        "id": "Awp0PasteUserAssignmentCmd",
        "action": "awp0PasteUsersAssignmentAction",
        "activeWhen": {
          "condition": "conditions.Awp0PasteUsersAssignmentCommandVisible"
        },
        "visibleWhen": {
          "condition": "conditions.Awp0PasteUsersAssignmentCommandVisibility"
        }
      },
      "Awp0PasteProfileUserAssignmentCmdCommandHandler": {
        "id": "Awp0PasteProfileUserAssignmentCmd",
        "action": "awp0PasteUsersAssignmentAction",
        "activeWhen": {
          "condition": "conditions.Awp0PasteProfileUsersAssignmentCommandVisible"
        },
        "visibleWhen": {
          "condition": "conditions.Awp0PasteProfileUsersAssignmentCommandVisibility"
        }
      },
      "Awp0AddTaskParticipantCommandHandler": {
        "id": "Awp0AddTaskParticipant",
        "action": "Awp0AddTaskParticipantCommandAction",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.Awp0AddTaskParticipantCommandVisibility"
        }
      },
      "Awp0ReplaceTaskParticipantCommandHandler": {
        "id": "Awp0ReplaceTaskParticipant",
        "action": "Awp0ReplaceTaskParticipantCommandAction",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.Awp0ReplaceTaskParticipantCommandVisibility"
        }
      },
      "Awp0StartEditCommandDelegate": {
        "id": "Awp0StartEdit",
        "activeWhen": {
          "condition": "conditions.Awp0StartEditConditionActive"
        },
        "visibleWhen": false
      },
      "Awp0WorkflowAutoLayoutTopToBottomCmdHandler": {
        "id": "Awp0WorkflowAutoLayoutTopToBottom",
        "action": "setWorkflowViewerActiveLayoutAsTopToBottom",
        "activeWhen": {
          "condition": "conditions.cmdWorkflowViewerLayoutOptionsActive"
        },
        "visibleWhen": {
          "condition": "conditions.cmdWorkflowViewerLayoutOptionsActive"
        },
        "selectWhen": {
          "condition": "conditions.cmdWorkflowViewerTopToBottomLayoutSelected"
        }
      },
      "Awp0WorkflowAutoLayoutRightToLeftCmdHandler": {
        "id": "Awp0WorkflowAutoLayoutRightToLeft",
        "action": "setWorkflowViewerActiveLayoutAsRightToLeft",
        "activeWhen": {
          "condition": "conditions.cmdWorkflowViewerLayoutOptionsActive"
        },
        "visibleWhen": {
          "condition": "conditions.cmdWorkflowViewerLayoutOptionsActive"
        },
        "selectWhen": {
          "condition": "conditions.cmdWorkflowViewerRightToLeftLayoutSelected"
        }
      },
      "Awp0WorkflowAutoLayoutLeftToRightCmdHandler": {
        "id": "Awp0WorkflowAutoLayoutLeftToRight",
        "action": "setWorkflowViewerActiveLayoutAsLeftToRight",
        "activeWhen": {
          "condition": "conditions.cmdWorkflowViewerLayoutOptionsActive"
        },
        "visibleWhen": {
          "condition": "conditions.cmdWorkflowViewerLayoutOptionsActive"
        },
        "selectWhen": {
          "condition": "conditions.cmdWorkflowViewerLeftToRightLayoutSelected"
        }
      },
      "Awp0WorkflowFixedLayoutCmdHandler": {
        "id": "Awp0WorkflowFixedLayout",
        "action": "setWorkflowViewerActiveLayoutAsFixed",
        "activeWhen": {
          "condition": "conditions.cmdWorkflowViewerFixedLayoutActive"
        },
        "visibleWhen": {
          "condition": "conditions.cmdWorkflowViewerFixedLayoutActive"
        },
        "selectWhen": {
          "condition": "conditions.cmdWorkflowViewerFixedLayoutSelected"
        }
      },
      "InboxSaveEditsPWACommandHandler": {
        "id": "Awp0SaveEditsPWA",
        "action": "saveEditsInboxPWA",
        "activeWhen": {
          "condition": "conditions.isInboxEditInProgress"
        },
        "visibleWhen": {
          "condition": "conditions.isInboxEditInProgress"
        }
      },
      "InboxCancelEditsPWAHandler": {
        "id": "Awp0CancelEditsPWA",
        "action": "isDirtyInboxOnCancelEditsPWA",
        "activeWhen": {
          "condition": "conditions.isInboxEditInProgress"
        },
        "visibleWhen": {
          "condition": "conditions.isInboxEditInProgress"
        }
      },
      "Awp0NewWorkflowSubProcessCmdHandler": {
        "id": "Awp0NewWorkflowSubProcess",
        "action": "createWorkflowSubProcess",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isCreateSubProcessCommandVisible"
        },
        "selectWhen": {
          "condition": "conditions.isSubmitWorkflowPopupPanelActive"
        }
      },
      "Awp0AddWorkflowProcessTargetCmdHandler": {
        "id": "Awp0AddWorkflowProcessTarget",
        "action": "addWorkflowProcessTargets",
        "activeWhen": {
          "condition": "conditions.isAddProcessTargetCommandVisible"
        },
        "visibleWhen": {
          "condition": "conditions.isAddProcessTargetCommandVisible"
        }
      },
      "Awp0AddWorkflowProcessTargetSubmitToWorkflowCmdHandler": {
        "id": "Awp0AddWorkflowProcessTarget",
        "action": "openAddTargetPanel",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isAddTargetCommandVisible"
        }
      },
      "Awp0RemoveWorkflowProcessTargetCmdHandler": {
        "id": "Awp0RemoveWorkflowProcessTarget",
        "action": "removeWorkflowProcessTarget",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isRemoveSelectedProcessTargetCommandVisible"
        }
      },
      "Awp0ClearAllSelectionsCmdHandler": {
        "id": "Awp0ClearAllSelections",
        "action": "selectNoneWorkflowAction",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isRemoveSelectedProcessTargetCommandVisible"
        }
      },
      "Awp0ClearAllReferenceSelectionsCmdHandler": {
        "id": "Awp0ClearAllReferenceSelections",
        "action": "selectNoneWorkflowAction",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isRemoveSelectedProcessReferenceCommandVisible"
        }
      },
      "Awp0SelectAllWorkflowTargetHandler": {
        "id": "Awp0SelectAllObjectSet",
        "action": "selectAllWorkflowTargetAction",
        "activeWhen": {
          "condition": "conditions.awp0SelectAllWorkflowTargetCondition"
        },
        "visibleWhen": {
          "condition": "conditions.awp0SelectAllWorkflowTargetCondition"
        }
      },
      "Awp0SelectAllWorkflowReferenceHandler": {
        "id": "Awp0SelectAll",
        "action": "selectAllWorkflowTargetAction",
        "activeWhen": {
          "condition": "conditions.awp0SelectAllWorkflowReferenceCondition"
        },
        "visibleWhen": {
          "condition": "conditions.awp0SelectAllWorkflowReferenceCondition"
        }
      },
      "Awp0AddReferenceInSubmitToWorkflowCmdHandler": {
        "id": "Awp0AddReferenceInSubmitToWorkflow",
        "action": "openAddReferencePanel",
        "activeWhen": {
          "condition": "conditions.isAddReferenceCommandVisible"
        },
        "visibleWhen": {
          "condition": "conditions.isAddReferenceCommandVisible"
        }
      },
      "Awp0StartEditTaskAssignmentCommandHandler": {
        "id": "Awp0StartEditAssignment",
        "action": "startEditTaskAssignmentAction",
        "activeWhen": {
          "condition": "conditions.Awp0StartEditTaskAssignmentCommandActive"
        },
        "visibleWhen": {
          "condition": "conditions.Awp0StartEditTaskAssignmentCommandVisibility"
        }
      },
      "Awp0SaveTaskAssignmentCommandHandler": {
        "id": "Awp0SaveAssignment",
        "action": "saveTaskAssignmentAction",
        "activeWhen": {
          "condition": "conditions.Awp0SaveTaskAssignmentCommandVisibility"
        },
        "visibleWhen": {
          "condition": "conditions.Awp0SaveTaskAssignmentCommandVisibility"
        }
      },
      "Awp0CancelTaslAssignmentCommandHandler": {
        "id": "Awp0CancelAssignment",
        "action": "cancelTaskAssignmentAction",
        "activeWhen": {
          "condition": "conditions.Awp0CancelTaskAssignmentCommandVisibility"
        },
        "visibleWhen": {
          "condition": "conditions.Awp0CancelTaskAssignmentCommandVisibility"
        }
      },
      "Awp0RemoveTaskAssignmentCtxCmdHandler": {
        "id": "Awp0RemoveTaskAssignmentCtx",
        "action": "removeTaskAssignment",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isRemoveTaskAssignmentCtxCommandVisible"
        }
      },
      "Awp0ReplaceTaskAssignmentCtxCmdHandler": {
        "id": "Awp0ReplaceTaskAssignmentCtx",
        "action": "replaceTaskAssignments",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isReplaceTaskAssignmentCtxCommandVisible"
        }
      },
      "Awp0AddUsersTaskAssignmentCommandHandler": {
        "id": "Awp0AddUsersAssignmentCmd",
        "action": "addUsersTaskAssignmentAction",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.Awp0AddUserAfterSubmitCommandVisible"
        }
      },
      "Awp0RemoveUsersTaskAssignmentCommandHandler": {
        "id": "Awp0RemoveUsersAssignmentCmd",
        "action": "removeTaskAssignemntAfterSubmit",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.Awp0RemoveUserAfterSubmitCommandVisible"
        }
      },
      "Awp0TasksAferSubmitProfileCellCommandHandler": {
        "id": "Awp0TasksAferSubmitProfileCellCommand",
        "action": "addUsersTaskAssignmentAction",
        "activeWhen": {
          "condition": "conditions.Awp0TasksAferSubmitProfileCellCommandActive"
        },
        "visibleWhen": {
          "condition": "conditions.Awp0TasksAferSubmitProfileCellCommandVisible"
        }
      },
      "Awp0WorkflowClosePopupCommandHandler": {
        "id": "Awp0WorkflowClosePopupCommand",
        "action": "workflowPopupPanelCloseAction",
        "activeWhen": true,
        "visibleWhen": true
      },
      "Awp0AddTaskParticipantAssignmentCommandHandler": {
        "id": "Awp0AddTaskParticipantAssignmentCmd",
        "action": "addTaskParticipantAssignmentAfterSubmit",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isAddTaskParticipantAssignmentCommandVisible"
        }
      },
      "Awp0RemoveTaskParticipantAssignmentCommandHandler": {
        "id": "Awp0RemoveTaskParticipantAssignmentCmd",
        "action": "removeTaskParticipantAssignemntAfterSubmit",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isRemoveTaskParticipantAssignmentCommandVisible"
        }
      },
      "Awp0AssignTaskCommandHandler": {
        "id": "Awp0AssignTask",
        "action": "assignTaskAction",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.Awp0AssignTaskCommandCondition"
        }
      },
      "workflowPanelSetPinCommandHandler": {
        "id": "Awp0WorkflowSetPin",
        "action": "workflowPanelSetPin",
        "activeWhen": {
          "condition": "conditions.isWorkflowPanelPinned"
        },
        "visibleWhen": {
          "condition": "conditions.isWorkflowPanelPinned"
        }
      },
      "workflowPanelSetUnPinCommandHandler": {
        "id": "Awp0WorkflowSetUnPin",
        "action": "workflowPanelSetUnPin",
        "activeWhen": {
          "condition": "conditions.isWorkflowPanelUnPinned"
        },
        "visibleWhen": {
          "condition": "conditions.isWorkflowPanelUnPinned"
        }
      },
      "Awp0AssignTaskAssignmentCtxCommandHandler": {
        "id": "Awp0AssignTaskAssignmentCtx",
        "action": "openTaskAssignmentPanelAction",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isValidToOpenTassignmentPanel"
        }
      },
      "Awp0NewWorkflowProcessTemplateCommandHandler": {
        "id": "Awp0NewWorkflowProcessTemplate",
        "action": "awp0NewWorkflowProcessTemplateOpenPanel",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.awp0NewWorkflowProcessTemplateCommandCondition"
        }
      },
      "Awp0RemoveProcessTemplateCommandHandler": {
        "id": "Awp0RemoveProcessTemplate",
        "action": "removeProcessTemplateAction",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.removeProcessTemplateCondition"
        }
      },
      "importWorkflowTemplateCommandHandler": {
        "id": "Awp0ImportWorkflowTemplate",
        "action": "importWorkflowTemplate",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isImportWorkflowTemplateCmdVisible"
        }
      },
      "exportWorkflowTemplateCommandHandler": {
        "id": "Awp0ExportWorkflowTemplate",
        "action": "exportWorkflowTemplate",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isExportWorkflowTemplateCmdVisible"
        }
      },
      "Awp0ToggleTemplateChildrenCommandHandler": {
        "id": "Awp0ToggleTemplateChildren",
        "action": "expandTemplateChildren",
        "activeWhen": true,
        "visibleWhen": true
      },
      "Awp0WorkflowGraphGridSettingsCommandHandler": {
        "id": "Awp0WorkflowGraphGridSettings",
        "action": "activateWorkflowDesignerGridSettingsPanel",
        "activeWhen": true,
        "visibleWhen": true,
        "enableWhen": true
      },
      "Awp0TemplateFiltersCommandHandler": {
        "id": "Awp0TemplateFilters",
        "action": "awp0TemplateFiltersCommandAction",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.awp0TemplateFiltersCommandCondition"
        }
      },
      "Awp0TemplateStartEditCommandHandler": {
        "id": "Awp0TemplateStartEdit",
        "action": "startEditTemplateAction",
        "activeWhen": {
          "condition": "conditions.isTemplateStartEditCommandVisibility"
        },
        "visibleWhen": {
          "condition": "conditions.isTemplateStartEditCommandVisibility"
        }
      },
      "Awp0TemplateSaveCommandHandler": {
        "id": "Awp0TemplateSaveEdit",
        "action": "saveTemplateAction",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isTemplateEditCommandVisibility"
        }
      },
      "Awp0TemplateEndEditCommandHandler": {
        "id": "Awp0TemplateEndEdit",
        "action": "endEditsTemplateAction",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isTemplateEndEditCommandVisibility"
        }
      },
      "Awp0ToggleShowTaskRelatedInfoCommandHandler": {
        "id": "Awp0ToggleShowTaskRelatedInfo",
        "action": "toggleShowTaskRelatedInfo",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.Awp0ToggleShowTaskRelatedInfoCmdCond"
        },
        "selectWhen": {
          "condition": "conditions.Awp0ToggleShowTaskRelatedInfoActive"
        }
      },
      "Awp0RemoveTaskTemplateCommandHandler": {
        "id": "Awp0RemoveTaskTemplate",
        "action": "removeTaskTemplateAction",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isTaskTemplateRemoveCommandVisibility"
        }
      },
      "Awp0TemplateConvertToParentCommandHandler": {
        "id": "Awp0TemplateConvertToParent",
        "action": "convertToParentTemplateAction",
        "activeWhen": true,
        "visibleWhen": false
      },
      "Awp0TemplateAddNotificationHandlerCommandHandler": {
        "id": "Awp0TemplateAddNotificationHandler",
        "action": "addNotificationHandlerAction",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isAddNotificationHandler"
        }
      },
      "Awp0TemplateShowNotificationHandlerInfoCommandHandler": {
        "id": "Awp0TemplateShowNotificationHandlerInfo",
        "action": "showNotificationHandlerInfoAction",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isShowNotificationHandler"
        }
      },
      "Awp0TemplateEditNotificationHandlerInfoCommandHandler": {
        "id": "Awp0TemplateEditNotificationHandlerInfo",
        "action": "editNotificationHandlerInfoAction",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isEditNotificationHandler"
        }
      },
      "Awp0TemplateRemoveNotificationHandlerCommandHandler": {
        "id": "Awp0TemplateRemoveNotificationHandler",
        "action": "removeNotificationHandlerAction",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isRemoveNotificationHandler"
        }
      },
      "Awp0TemplateAddArgumentCommandHandler": {
        "id": "Awp0TemplateAddArgument",
        "action": "addKeyRoleArguments",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isAddTemplateArgumentCommandVisible"
        }
      },
      "Awp0TemplateRemoveArgumentCommandHandler": {
        "id": "Awp0TemplateRemoveArgument",
        "action": "removeKeyRoleArguments",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isRemoveTemplateArgumentCommandVisible"
        }
      },
      "Awp0ActionHandlerTableAddCommandHandler": {
        "id": "Awp0ActionHandlerTableAdd",
        "action": "createActionHandlerPanel",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isTemplateActionHandlerAddRow"
        },
        "selectWhen": {
          "condition": "conditions.isTemplateActionHandlerAddRow"
        }
      },
      "Awp0RuleHandlerTableAddCommandHandler": {
        "id": "Awp0RuleHandlerTableAdd",
        "action": "createRuleHandlerPanel",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isTemplateRuleHandlerAddRow"
        }
      },
      "Awp0AddHandlerArgumentPanelCommandHandler": {
        "id": "Awp0AddHandlerArgumentPanel",
        "action": "Awp0AddHandlerArgumentPanelSection",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isAddHandlerArgumentPanelCommandVisible"
        }
      },
      "Awp0RemoveHandlerArgumentPanelCommandHandler": {
        "id": "Awp0RemoveHandlerArgumentPanel",
        "action": "Awp0RemoveHandlerArgumentPanelSection",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isRemoveHandlerArgumentPanelCommandVisible"
        }
      },
      "Awp0RemoveActionHandlerCommandHandler": {
        "id": "Awp0RemoveActionHandler",
        "action": "RemoveActionHandler",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isAwp0RemoveActionHandlerCommandVisible"
        }
      },
      "Awp0RemoveRuleHandlerCommandHandler": {
        "id": "Awp0RemoveRuleHandler",
        "action": "RemoveRuleHandler",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isAwp0RemoveRuleHandlerCommandVisible"
        }
      },
      "Awp0StartActionHandlerInfoCommandHandler": {
        "id": "Awp0StartActionHandlerInfo",
        "action": "openActionHandlerInfoPanel",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isAwp0OpenActionHandlerInfoCommandVisible"
        }
      },
      "Awp0StartRuleHandlerInfoCommandHandler": {
        "id": "Awp0StartRuleHandlerInfo",
        "action": "openRuleHandlerInfoPanel",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isAwp0OpenRuleHandlerInfoCommandVisible"
        }
      },
      "Awp0StartActionHandlerEditCommandHandler": {
        "id": "Awp0StartActionHandlerEdit",
        "action": "openActionHandlerEditPanel",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isAwp0OpenActionHandlerEditCommandVisible"
        }
      },
      "Awp0StartRuleHandlerEditCommandHandler": {
        "id": "Awp0StartRuleHandlerEdit",
        "action": "openRuleHandlerEditPanel",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isAwp0OpenRuleHandlerEditCommandVisible"
        }
      },
      "Awp0StartArgumentsEditCommandHandler": {
        "id": "Awp0StartArgumentEdit",
        "action": "Awp0EditArgument",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isAwp0StartArgumentEditCommandVisible"
        }
      },
      "Awp0ActionHandlerCutCommandHandler": {
        "id": "Awp0ActionHandlerCut",
        "action": "cutActionHandlerOpertaion",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isAwp0RemoveActionHandlerCommandVisible"
        }
      },
      "Awp0ActionHandlerCopyCommandHandler": {
        "id": "Awp0ActionHandlerCopy",
        "action": "copyActionHandlerOpertaion",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isAwp0CopyActionHandlerCommandVisible"
        }
      },
      "Awp0ActionHandlerPasteGroupCommandHandler": {
        "id": "Awp0ActionHandlerPasteGroup",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isAwp0ActionHandlerPasteGroupCommandVisible"
        }
      },
      "Awp0StartActionTypeCommandHandler": {
        "id": "Awp0StartActionType",
        "action": "pasteHandlerToStarted",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isAwp0ActionHandlerPasteGroupCommandVisible"
        }
      },
      "Awp0AssignActionTypeCommandHandler": {
        "id": "Awp0AssignActionType",
        "action": "pasteHandlerToAssigned",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isAwp0ActionHandlerPasteGroupCommandVisible"
        }
      },
      "Awp0PerformActionTypeCommandHandler": {
        "id": "Awp0PerformActionType",
        "action": "pasteHandlerToPerformed",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isAwp0ActionHandlerPasteGroupCommandVisible"
        }
      },
      "Awp0CompleteActionTypeCommandHandler": {
        "id": "Awp0CompleteActionType",
        "action": "pasteHandlerToCompleted",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isAwp0ActionHandlerPasteGroupCommandVisible"
        }
      },
      "Awp0SkipActionTypeCommandHandler": {
        "id": "Awp0SkipActionType",
        "action": "pasteHandlerToSkipped",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isAwp0ActionHandlerPasteGroupCommandVisible"
        }
      },
      "Awp0SuspendActionTypeCommandHandler": {
        "id": "Awp0SuspendActionType",
        "action": "pasteHandlerToSuspended",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isAwp0ActionHandlerPasteGroupCommandVisible"
        }
      },
      "Awp0ResumeActionTypeCommandHandler": {
        "id": "Awp0ResumeActionType",
        "action": "pasteHandlerToResumed",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isAwp0ActionHandlerPasteGroupCommandVisible"
        }
      },
      "Awp0AbortActionTypeCommandHandler": {
        "id": "Awp0AbortActionType",
        "action": "pasteHandlerToAborted",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isAwp0ActionHandlerPasteGroupCommandVisible"
        }
      },
      "Awp0UndoActionTypeCommandHandler": {
        "id": "Awp0UndoActionType",
        "action": "pasteHandlerToUndo",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isAwp0ActionHandlerPasteGroupCommandVisible"
        }
      },
      "Awp0ActionHandlerMoveUpCommandHandler": {
        "id": "Awp0ActionHandlerMoveUp",
        "action": "moveUpActionHandler",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isAwp0ActionHandlerMoveUpCommandVisible"
        }
      },
      "Awp0ActionHandlerMoveDownCommandHandler": {
        "id": "Awp0ActionHandlerMoveDown",
        "action": "moveDownActionHandler",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isAwp0ActionHandlerMoveDownCommandVisible"
        }
      },
      "Awp0RuleHandlerMoveUpCommandHandler": {
        "id": "Awp0RuleHandlerMoveUp",
        "action": "moveUpRuleHandler",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isAwp0RuleHandlerMoveUpCommandVisible"
        }
      },
      "Awp0RuleHandlerMoveDownCommandHandler": {
        "id": "Awp0RuleHandlerMoveDown",
        "action": "moveDownRuleHandler",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isAwp0RuleHandlerMoveDownCommandVisible"
        }
      },
      "Awp0RuleHandlerCutCommandHandler": {
        "id": "Awp0RuleHandlerCut",
        "action": "cutRuleHandlerOpertaion",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isAwp0RemoveRuleHandlerCommandVisible"
        }
      },
      "Awp0RuleHandlerCopyCommandHandler": {
        "id": "Awp0RuleHandlerCopy",
        "action": "copyRuleHandlerOpertaion",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isAwp0CopyRuleHandlerCommandVisible"
        }
      },
      "Awp0RuleHandlerPasteGroupCommandHandler": {
        "id": "Awp0RuleHandlerPasteGroup",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isAwp0RuleHandlerPasteGroupCommandVisible"
        }
      },
      "Awp0StartActionTypeForRuleCommandHandler": {
        "id": "Awp0StartActionTypeForRule",
        "action": "pasteHandlerToStarted",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isAwp0RuleHandlerPasteGroupCommandVisible"
        }
      },
      "Awp0AssignActionTypeForRuleCommandHandler": {
        "id": "Awp0AssignActionTypeForRule",
        "action": "pasteHandlerToAssigned",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isAwp0RuleHandlerPasteGroupCommandVisible"
        }
      },
      "Awp0PerformActionTypeForRuleCommandHandler": {
        "id": "Awp0PerformActionTypeForRule",
        "action": "pasteHandlerToPerformed",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isAwp0RuleHandlerPasteGroupCommandVisible"
        }
      },
      "Awp0CompleteActionTypeForRuleCommandHandler": {
        "id": "Awp0CompleteActionTypeForRule",
        "action": "pasteHandlerToCompleted",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isAwp0RuleHandlerPasteGroupCommandVisible"
        }
      },
      "Awp0SkipActionTypeForRuleCommandHandler": {
        "id": "Awp0SkipActionTypeForRule",
        "action": "pasteHandlerToSkipped",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isAwp0RuleHandlerPasteGroupCommandVisible"
        }
      },
      "Awp0SuspendActionTypeForRuleCommandHandler": {
        "id": "Awp0SuspendActionTypeForRule",
        "action": "pasteHandlerToSuspended",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isAwp0RuleHandlerPasteGroupCommandVisible"
        }
      },
      "Awp0ResumeActionTypeForRuleCommandHandler": {
        "id": "Awp0ResumeActionTypeForRule",
        "action": "pasteHandlerToResumed",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isAwp0RuleHandlerPasteGroupCommandVisible"
        }
      },
      "Awp0AbortActionTypeForRuleCommandHandler": {
        "id": "Awp0AbortActionTypeForRule",
        "action": "pasteHandlerToAborted",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isAwp0RuleHandlerPasteGroupCommandVisible"
        }
      },
      "Awp0UndoActionTypeForRuleCommandHandler": {
        "id": "Awp0UndoActionTypeForRule",
        "action": "pasteHandlerToUndo",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isAwp0RuleHandlerPasteGroupCommandVisible"
        }
      },
      "Awp0TemplateAddAssignmentHandlerCommandHandler": {
        "id": "Awp0TemplateAddAssignmentHandler",
        "action": "addAssignmentHandlerAction",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isAddAssignmentHandler"
        }
      },
      "Awp0TemplateShowAssignmentHandlerInfoCommandHandler": {
        "id": "Awp0TemplateShowAssignmentHandlerInfo",
        "action": "showAssignmentHandlerInfoAction",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isShowAssignemntHandler"
        }
      },
      "Awp0TemplateEditAssignmentHandlerInfoCommandHandler": {
        "id": "Awp0TemplateEditAssignmentHandlerInfo",
        "action": "editAssignmentHandlerInfoAction",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isEditAssignemntHandler"
        }
      },
      "Awp0TemplateShowProfileInfoCommandHandler": {
        "id": "Awp0TemplateShowProfileInfo",
        "action": "showProfileInfoAction",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isShowProfileInfo"
        }
      },
      "Awp0TemplateEditProfileInfoCommandHandler": {
        "id": "Awp0TemplateEditProfileInfo",
        "action": "editProfileInfoAction",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isEditProfileInfo"
        }
      },
      "Awp0TemplateRemoveSignoffProfileCommandHandler": {
        "id": "Awp0TemplateRemoveSignoffProfile",
        "action": "removeSignoffProfileAction",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isRemoveSignoffProfile"
        }
      },
      "Awp0TemplateRemoveAssignmentHandlerCommandHandler": {
        "id": "Awp0TemplateRemoveAssignmentHandler",
        "action": "removeAssignmentHandlerAction",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isRemoveAssignmentHandler"
        }
      },
      "Awp0TemplateAddFormHandlerCommandHandler": {
        "id": "Awp0TemplateAddFormHandler",
        "action": "addFormHandlerAction",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isAddFormHandler"
        }
      },
      "Awp0TemplateShowFormHandlerInfoCommandHandler": {
        "id": "Awp0TemplateShowFormHandlerInfo",
        "action": "showFormHandlerInfoAction",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isShowFormHandler"
        }
      },
      "Awp0TemplateEditFormHandlerInfoCommandHandler": {
        "id": "Awp0TemplateEditFormHandlerInfo",
        "action": "editFormHandlerInfoAction",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isEditFormHandler"
        }
      },
      "Awp0TemplateRemoveFormHandlerCommandHandler": {
        "id": "Awp0TemplateRemoveFormHandler",
        "action": "removeFormHandlerAction",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isRemoveFormHandler"
        }
      },
      "Awp0WorkflowGraphLegendPanelCommandHandler": {
        "id": "Awp0WorkflowGraphLegendPanel",
        "action": "showWorkflowGraphLegendPanel",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isTaskPaletteVisible"
        },
        "selectWhen": {
          "condition": "conditions.isTaskPaletteSelected"
        }
      },
      "Awp0SaveGraphPositionsCommandHandler": {
        "id": "Awp0SaveGraphPositions",
        "action": "saveGraphPositions",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isSaveNodePositions"
        }
      },
      "Awp0ShowFixedLayoutCommandHandler": {
        "id": "Awp0ShowFixedLayout",
        "action": "showFixedLayout",
        "activeWhen": true,
        "visibleWhen": false
      },
      "Awp0ShowAutoLayoutCommandHandler": {
        "id": "Awp0ShowAutoLayout",
        "action": "showAutoLayout",
        "activeWhen": true,
        "visibleWhen": false
      },
      "Awp0RuleHandlerHelpCommandHandler": {
        "id": "Awp0RuleHandlerHelp",
        "action": "Awp0RuleHandlerHelpCommandAction",
        "activeWhen": true,
        "visibleWhen": true
      },
      "Awp0ActionHandlerHelpCommandHandler": {
        "id": "Awp0ActionHandlerHelp",
        "action": "Awp0ActionHandlerHelpCommandAction",
        "activeWhen": true,
        "visibleWhen": true
      },
      "Awp0WorkflowDesignerAutoLayoutTopToBottomCmdHandler": {
        "id": "Awp0WorkflowAutoLayoutTopToBottom",
        "action": "setWorkflowDesignerActiveLayoutAsTopToBottom",
        "activeWhen": {
          "condition": "conditions.cmdWorkflowDesignerLayoutOptionsActive"
        },
        "visibleWhen": {
          "condition": "conditions.cmdWorkflowDesignerLayoutOptionsActive"
        },
        "selectWhen": {
          "condition": "conditions.cmdWorkflowDesignerTopToBottomLayoutSelected"
        }
      },
      "Awp0WorkflowDesignerAutoLayoutRightToLeftCmdHandler": {
        "id": "Awp0WorkflowAutoLayoutRightToLeft",
        "action": "setWorkflowDesignerActiveLayoutAsRightToLeft",
        "activeWhen": {
          "condition": "conditions.cmdWorkflowDesignerLayoutOptionsActive"
        },
        "visibleWhen": {
          "condition": "conditions.cmdWorkflowDesignerLayoutOptionsActive"
        },
        "selectWhen": {
          "condition": "conditions.cmdWorkflowDesignerRightToLeftLayoutSelected"
        }
      },
      "Awp0WorkflowDesignerAutoLayoutLeftToRightCmdHandler": {
        "id": "Awp0WorkflowAutoLayoutLeftToRight",
        "action": "setWorkflowDesignerActiveLayoutAsLeftToRight",
        "activeWhen": {
          "condition": "conditions.cmdWorkflowDesignerLayoutOptionsActive"
        },
        "visibleWhen": {
          "condition": "conditions.cmdWorkflowDesignerLayoutOptionsActive"
        },
        "selectWhen": {
          "condition": "conditions.cmdWorkflowDesignerLeftToRightLayoutSelected"
        }
      },
      "Awp0WorkflowDesignerFixedLayoutCmdHandler": {
        "id": "Awp0WorkflowFixedLayout",
        "action": "setWorkflowDesignerActiveLayoutAsFixed",
        "activeWhen": {
          "condition": "conditions.cmdWorkflowDesignerLayoutOptionsActive"
        },
        "visibleWhen": {
          "condition": "conditions.cmdWorkflowDesignerLayoutOptionsActive"
        },
        "selectWhen": {
          "condition": "conditions.cmdWorkflowDesignerFixedLayoutSelected"
        }
      },
      "importPALCommandHandler": {
        "id": "Awp0ImportPAL",
        "action": "actionImportPAL",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isImportPALCmdVisible"
        }
      },
      "exportPALCommandHandler": {
        "id": "Awp0ExportPAL",
        "action": "actionExportPAL",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isExportPALCmdVisible"
        }
      },
      "Awp0TemplateAssignmentProfileCellCommandHandler": {
        "id": "Awp0TemplateAssignmentProfileCellCommand",
        "action": "addUsersTemplateAssignmentAction",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isProfileCommandVisible"
        }
      },
      "Awp0AddTemplateUserAssignmentCommandHandler": {
        "id": "Awp0AddTemplateUserAssignmentCmd",
        "action": "addUsersTemplateAssignmentAction",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isAddTemplateUserAssignmentCommandVisible"
        }
      },
      "Awp0RemoveTemplateUsersAssignmentCommandHandler": {
        "id": "Awp0RemoveTemplateUsersAssignmentCmd",
        "action": "removeUsersTemplateAssignmentAction",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isRemoveTemplateAssignmentCommandVisible"
        }
      },
      "Awp0StartEditTemplateAssignmentCommandHandler": {
        "id": "Awp0StartEditTemplateAssignment",
        "action": "startEditTemplateAssignment",
        "activeWhen": {
          "condition": "conditions.isTemplateAssignmentStartEditCommandVisibility"
        },
        "visibleWhen": {
          "condition": "conditions.isTemplateAssignmentStartEditCommandVisibility"
        }
      },
      "Awp0SaveTemplateAssignmentCommandHandler": {
        "id": "Awp0SaveTemplateAssignment",
        "action": "saveTemplateAssignmentAction",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isTemplateAssignmentEditCommandVisibility"
        }
      },
      "Awp0CancelTemplateAssignmentCommandHandler": {
        "id": "Awp0CancelTemplateAssignment",
        "action": "cancelTemplateAssignmentAction",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isTemplateAssignmentEditCommandVisibility"
        }
      },
      "Awp0CreateProcessAssignmentListCommandHandler": {
        "id": "Awp0CreateProcessAssignmentList",
        "action": "createProcessAssignmentListAction",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isCreateAssignmentListCommandVisibility"
        }
      },
      "Awp0RemovePALCommandHandler": {
        "id": "Awp0RemovePAL",
        "action": "removePALAction",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.removePALCommandVisibility"
        }
      },
      "Arm0GenerateTraceabilityMatrixCommandDelegate": {
        "id": "Arm0GenerateTraceabilityMatrix",
        "activeWhen": {
          "condition": "conditions.isPALContextCondition"
        },
        "visibleWhen": false
      },
      "Awp0InContextReportsCommandDelegate": {
        "id": "Awp0InContextReports",
        "activeWhen": {
          "condition": "conditions.isPALContextCondition"
        },
        "visibleWhen": false
      },
      "Awp0PALAssignUsersCtxCommandHandler": {
        "id": "Awp0PALAssignUsersCtx",
        "action": "openTaskPALAssignmentPanelAction",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isOpenPALTemplateAssignmentPanelCondition"
        }
      }
    },
    "commandPlacements": {
      "Awp0AddResourcePoolCommandPlacement": {
        "id": "Awp0AddResourcePool",
        "uiAnchor": "aw_resourcePoolSubRightSide",
        "priority": 50
      },
      "Awp0RemoveResourcePoolCommandPlacement": {
        "id": "Awp0RemoveResourcePool",
        "uiAnchor": "aw_resourcePoolSubRightSide",
        "priority": 50
      },
      "Awp0CreateWorkflowDisplay": {
        "id": "Awp0CreateWorkflow",
        "uiAnchor": "aw_rightWall",
        "priority": 110,
        "parentGroupId": "Awp0NewGroup"
      },
      "Awp0AddRemoteInboxCmdCommandPlacement": {
        "id": "Awp0AddRemoteInboxCmd",
        "uiAnchor": "aw_remoteInboxSubscriptionSubRightSide",
        "priority": 50
      },
      "awp0PromoteTaskDisplay": {
        "id": "Awp0PromoteTask",
        "uiAnchor": "aw_rightWall",
        "priority": 520,
        "parentGroupId": "Awp0ManageGroup"
      },
      "awp0OutOfOfficeDisplay": {
        "id": "Awp0OutOfOffice",
        "uiAnchor": "aw_rightWall",
        "priority": 110,
        "parentGroupId": "Awp0ShareGroup"
      },
      "awp0OpenInboxLocationDisplay": {
        "id": "Awp0OpenInboxLocation",
        "uiAnchor": "aw_rightWall",
        "priority": 290,
        "parentGroupId": "Awp0OpenGroup"
      },
      "awp0InboxFiltersCommandDisplay": {
        "id": "Awp0InboxFilters",
        "uiAnchor": "aw_primaryWorkArea",
        "priority": 1010
      },
      "Awp0InboxAddCmdDisplay": {
        "id": "Awp0InboxAddCmd",
        "uiAnchor": "awp0_sectionCommands",
        "priority": -1
      },
      "Awp0SurrogateAddCmdDisplay": {
        "id": "Awp0SurrogateAddCmd",
        "uiAnchor": "awp0_addSurrogateSectionCommands",
        "priority": -1
      },
      "Awp0AddReviewProfileSignoffCellCommandPlacement": {
        "id": "Awp0AddReviewProfileSignoffCellCommand",
        "uiAnchor": "aw_taskProfileCellCommand",
        "priority": 10,
        "cellDisplay": {
          "position": "TOP_RIGHT"
        }
      },
      "Awp0RemoveReviewProfileSignoffCommandPlacement": {
        "id": "Awp0RemoveReviewProfileSignoffCommand",
        "uiAnchor": "aw_taskProfileSignoffCommand",
        "priority": 10
      },
      "Awp0AddReviewAdhocSignoffCommandPlacement": {
        "id": "Awp0AddReviewAdhocSignoffCommand",
        "uiAnchor": "aw_taskAdhocSignoffCommand",
        "priority": 10
      },
      "Awp0RemoveReviewAdhocSignoffCommandPlacement": {
        "id": "Awp0RemoveReviewAdhocSignoffCommand",
        "uiAnchor": "aw_taskAdhocSignoffCommand",
        "priority": 10
      },
      "Awp0AddAcknowledgeAdhocSignoffCommandPlacement": {
        "id": "Awp0AddAcknowledgeAdhocSignoffCommand",
        "uiAnchor": "aw_ackTaskAdhocSignoffCommand",
        "priority": 10
      },
      "Awp0RemoveAcknowledgeAdhocSignoffCommandPlacement": {
        "id": "Awp0RemoveAcknowledgeAdhocSignoffCommand",
        "uiAnchor": "aw_ackTaskAdhocSignoffCommand",
        "priority": 10
      },
      "Awp0AddNotifyAdhocSignoffCommandPlacement": {
        "id": "Awp0AddNotifyAdhocSignoffCommand",
        "uiAnchor": "aw_notifyTaskAdhocSignoffCommand",
        "priority": 10
      },
      "Awp0RemoveNotifyAdhocSignoffCommandPlacement": {
        "id": "Awp0RemoveNotifyAdhocSignoffCommand",
        "uiAnchor": "aw_notifyTaskAdhocSignoffCommand",
        "priority": 10
      },
      "Awp0ReassignTaskCmdPlacement": {
        "id": "Awp0ReassignTask",
        "uiAnchor": "aw_rightWall",
        "priority": 10,
        "parentGroupId": "Awp0ManageGroup"
      },
      "Awp0ReleaseCommandPlacement": {
        "id": "Awp0Release",
        "uiAnchor": "aw_rightWall",
        "priority": 610,
        "parentGroupId": "Awp0ManageGroup"
      },
      "Awp0StandInCommandPlacement": {
        "id": "Awp0StandIn",
        "uiAnchor": "aw_rightWall",
        "priority": 730,
        "parentGroupId": "Awp0ManageGroup"
      },
      "Awp0RemoveSurrogateCommandPlacement": {
        "id": "Awp0RemoveSurrogate",
        "uiAnchor": "aw_rightWall",
        "priority": 326,
        "parentGroupId": "Awp0EditGroup"
      },
      "Awp0PerformTaskCommandPlacement": {
        "id": "Awp0PerformTaskPanel",
        "uiAnchor": "aw_rightWall",
        "priority": 320,
        "parentGroupId": "Awp0ManageGroup"
      },
      "Awp0ClaimTaskCommandPlacement": {
        "id": "Awp0ClaimTask",
        "uiAnchor": "aw_rightWall",
        "priority": 260,
        "parentGroupId": "Awp0ManageGroup"
      },
      "Awp0AbortTaskCmdPlacement": {
        "id": "Awp0AbortTask",
        "uiAnchor": "aw_rightWall",
        "priority": 570,
        "parentGroupId": "Awp0ManageGroup"
      },
      "Awp0GoInboxGlobalNavigationbar": {
        "id": "Awp0GoInbox",
        "uiAnchor": "aw_globalNavigationbar",
        "priority": 70
      },
      "Awp0GoInboxWithoutBubbleGlobalNavigationbar": {
        "id": "Awp0GoInboxWithoutBubble",
        "uiAnchor": "aw_globalNavigationbar",
        "priority": 71
      },
      "awp0DemoteTaskDisplay": {
        "id": "Awp0DemoteTask",
        "uiAnchor": "aw_rightWall",
        "priority": 1,
        "parentGroupId": "Awp0ManageGroup",
        "relativeTo": "Awp0PromoteTask"
      },
      "awp0SuspendTaskDisplay": {
        "id": "Awp0SuspendTask",
        "uiAnchor": "aw_rightWall",
        "priority": -1,
        "parentGroupId": "Awp0ManageGroup",
        "relativeTo": "Awp0PromoteTask"
      },
      "awp0ResumeTaskDisplay": {
        "id": "Awp0ResumeTask",
        "uiAnchor": "aw_rightWall",
        "priority": -1,
        "parentGroupId": "Awp0ManageGroup",
        "relativeTo": "Awp0PromoteTask"
      },
      "Awp0DeleteWorkflowCmdPlacement": {
        "id": "Awp0DeleteWorkflow",
        "uiAnchor": "aw_rightWall",
        "priority": 500,
        "parentGroupId": "Awp0EditGroup"
      },
      "awp0ReplaceMultipleParticipantsDisplay": {
        "id": "Awp0ReplaceMultipleParticipants",
        "uiAnchor": "aw_rightWall",
        "priority": 560,
        "parentGroupId": "Awp0ManageGroup"
      },
      "Awp0ProfileSignoffCellCommandPlacement": {
        "id": "Awp0ProfileSignoffCellCommand",
        "uiAnchor": "aw_profileCellCommand",
        "priority": 10,
        "cellDisplay": {
          "hover": true,
          "position": "TOP_RIGHT",
          "selected": true
        }
      },
      "Awp0TasksAferSubmitProfileCellCommandPlacement": {
        "id": "Awp0TasksAferSubmitProfileCellCommand",
        "uiAnchor": "aw_tasksAferSubmitProfileCellCommand",
        "priority": 10,
        "cellDisplay": {
          "hover": true,
          "position": "TOP_RIGHT",
          "selected": true
        }
      },
      "openProcessInViewerDisplay": {
        "id": "OpenProcessInViewer",
        "uiAnchor": "aw_graph_node",
        "priority": 0
      },
      "Awp0FromSectionAddCmdPlacement": {
        "id": "Awp0FromSectionAddCmd",
        "uiAnchor": "awp0_fromSectionCommands",
        "priority": 0
      },
      "Awp0ToggleChildrenTileNode": {
        "id": "Awp0ToggleChildren",
        "uiAnchor": "aw_graph_node",
        "priority": 50
      },
      "Awp0ToggleSubProcessTileNode": {
        "id": "Awp0ToggleSubProcess",
        "uiAnchor": "aw_graph_node",
        "priority": 50
      },
      "Awp0ToSectionAddCmdPlacement": {
        "id": "Awp0ToSectionAddCmd",
        "uiAnchor": "awp0_toSectionCommands",
        "priority": 0
      },
      "Awp0NewWorkflowProcessCmdPlacement": {
        "id": "Awp0NewWorkflowProcess",
        "uiAnchor": "aw_rightWall",
        "priority": 1,
        "parentGroupId": "Awp0ManageGroup"
      },
      "Awp0NewWorkflowProcessFooterToolbar": {
        "id": "Awp0NewWorkflowProcess",
        "uiAnchor": "aw_footer",
        "priority": 0.4
      },
      "Awp0RemoveParticipantCmdPlacement": {
        "id": "Awp0RemoveParticipant",
        "uiAnchor": "aw_rightWall",
        "priority": 323,
        "parentGroupId": "Awp0EditGroup"
      },
      "Awp0AddProcessAssignmentCmdPlacement": {
        "id": "Awp0AddProcessAssignmentCmd",
        "uiAnchor": "awp0_addParticipantEPMJobSectionCommands",
        "priority": 0
      },
      "Awp0PasteUserParticipantAssignmentCmdPlacement": {
        "id": "Awp0PasteUserAssignmentCmd",
        "uiAnchor": "awp0_addParticipantEPMJobSectionCommands",
        "priority": 0
      },
      "Awp0AddUsersAssignmentCmdPlacement": {
        "id": "Awp0AddUsersAssignmentCmd",
        "uiAnchor": "awp0_addUsersOnPanelAnchor",
        "priority": 0
      },
      "Awp0PasteUserAssignmentCmdPlacement": {
        "id": "Awp0PasteUserAssignmentCmd",
        "uiAnchor": "awp0_addUsersOnPanelAnchor",
        "priority": 0
      },
      "Awp0PasteProfileUserAssignmentCmdPlacement": {
        "id": "Awp0PasteProfileUserAssignmentCmd",
        "uiAnchor": "awp0_addUsersOnPanelAnchor",
        "priority": 0
      },
      "Awp0PasteUserAssignmentCategoryPanelCmdPlacement": {
        "id": "Awp0PasteUserAssignmentCmd",
        "uiAnchor": "awp0_addUsersOnPanelAnchorForCategoriesPanel",
        "priority": 0
      },
      "Awp0PasteProfileUserAssignmentCategoryPanelCmdPlacement": {
        "id": "Awp0PasteProfileUserAssignmentCmd",
        "uiAnchor": "awp0_addUsersOnPanelAnchorForCategoriesPanel",
        "priority": 0
      },
      "Awp0RemoveUsersAssignmentCmdPlacement": {
        "id": "Awp0RemoveUsersAssignmentCmd",
        "uiAnchor": "awp0_addUsersOnPanelAnchor",
        "priority": 0
      },
      "Awp0RemoveProcessAssignmentCmdPlacement": {
        "id": "Awp0RemoveProcessAssignmentCmd",
        "uiAnchor": "awp0_addParticipantEPMJobSectionCommands",
        "priority": 0
      },
      "Awp0AddTasksAssignmentCmdPlacement": {
        "id": "Awp0AddTaskAssignmentCmd",
        "uiAnchor": "newWorkflowProcess.taskAssigneeSection",
        "priority": 0
      },
      "Awp0RemoveTaskAssignmentCmdPlacement": {
        "id": "Awp0RemoveTaskAssignmentCmd",
        "uiAnchor": "newWorkflowProcess.taskAssigneeSection",
        "priority": 0
      },
      "Awp0RemoveTaskAssignmentCategoriesCmdPlacement": {
        "id": "Awp0RemoveTaskAssignmentCmd",
        "uiAnchor": "awp0_addUsersOnPanelAnchorForCategoriesPanel",
        "priority": 0
      },
      "GcLayoutCommandGroupPlacement": {
        "id": "GcLayoutCommandGroup",
        "uiAnchor": "aw_workflowViewer",
        "priority": 150,
        "showGroupSelected": false
      },
      "Awp0SaveAssignmentCmdPlacement": {
        "id": "Awp0SaveAssignment",
        "uiAnchor": "Awp0EditCommands_Right",
        "priority": 323
      },
      "Awp0CancelAssignmentCmdPlacement": {
        "id": "Awp0CancelAssignment",
        "uiAnchor": "Awp0EditCommands_Right",
        "priority": 323
      },
      "Awp0StartEditAssignmentCmdPlacement": {
        "id": "Awp0StartEditAssignment",
        "uiAnchor": "Awp0EditCommands_Right",
        "priority": 323
      },
      "Awp0WorkflowFullScreen": {
        "id": "Awp0FullScreen",
        "uiAnchor": "aw_workflowViewerRightSide",
        "priority": 1
      },
      "Awp0WorkflowExitFullScreen": {
        "id": "Awp0ExitFullScreen",
        "uiAnchor": "aw_workflowViewerRightSide",
        "priority": 2
      },
      "Awp0WorkflowAutoLayoutTopToBottomOneStep": {
        "id": "Awp0WorkflowAutoLayoutTopToBottom",
        "uiAnchor": "aw_oneStep",
        "priority": -1,
        "parentGroupId": "GcLayoutCommandGroup"
      },
      "Awp0WorkflowAutoLayoutRightToLeftOneStep": {
        "id": "Awp0WorkflowAutoLayoutRightToLeft",
        "uiAnchor": "aw_oneStep",
        "priority": -1,
        "parentGroupId": "GcLayoutCommandGroup"
      },
      "Awp0WorkflowAutoLayoutLeftToRightOneStep": {
        "id": "Awp0WorkflowAutoLayoutLeftToRight",
        "uiAnchor": "aw_oneStep",
        "priority": -1,
        "parentGroupId": "GcLayoutCommandGroup"
      },
      "Awp0WorkflowFixedLayoutOneStep": {
        "id": "Awp0WorkflowFixedLayout",
        "uiAnchor": "aw_oneStep",
        "priority": -1,
        "parentGroupId": "GcLayoutCommandGroup"
      },
      "Awp0NewWorkflowSubProcessCmdPlacement": {
        "id": "Awp0NewWorkflowSubProcess",
        "uiAnchor": "aw_rightWall",
        "priority": 100,
        "parentGroupId": "Awp0ManageGroup"
      },
      "Awp0AddWorkflowProcessTargetCmdPlacement": {
        "id": "Awp0AddWorkflowProcessTarget",
        "uiAnchor": "workflow_process_attachment_anchor",
        "priority": 100
      },
      "Awp0RemoveWorkflowProcessTargetCmdPlacement": {
        "id": "Awp0RemoveWorkflowProcessTarget",
        "uiAnchor": "workflow_process_attachment_anchor",
        "priority": 100
      },
      "Awp0ClearAllSelectionsCmdPlacement": {
        "id": "Awp0ClearAllSelections",
        "uiAnchor": "workflow_process_attachment_anchor",
        "priority": 102
      },
      "Awp0ClearAllReferenceSelectionsCmdPlacement": {
        "id": "Awp0ClearAllReferenceSelections",
        "uiAnchor": "workflow_reference_anchor",
        "priority": 102
      },
      "Awp0SelectAllObjectSetCmdPlacement": {
        "id": "Awp0SelectAllObjectSet",
        "uiAnchor": "workflow_process_attachment_anchor",
        "priority": 101
      },
      "Awp0SelectAllReferencesObjectSetCmdPlacement": {
        "id": "Awp0SelectAll",
        "uiAnchor": "workflow_reference_anchor",
        "priority": 102
      },
      "Awp0AddReferenceInSubmitToWorkflowCmdPlacement": {
        "id": "Awp0AddReferenceInSubmitToWorkflow",
        "uiAnchor": "workflow_reference_anchor",
        "priority": 101
      },
      "Awp0RemoveReferenceCmdPlacement": {
        "id": "Awp0RemoveReference",
        "uiAnchor": "workflow_reference_anchor",
        "priority": 101
      },
      "Awp0RemoveTaskAssignmentCtxCmdPlacement": {
        "id": "Awp0RemoveTaskAssignmentCtx",
        "uiAnchor": "aw_taskAssignmentTreeTableContextMenu",
        "priority": 1
      },
      "Awp0ReplaceTaskAssignmentCtxCmdPlacement": {
        "id": "Awp0ReplaceTaskAssignmentCtx",
        "uiAnchor": "aw_taskAssignmentTreeTableContextMenu",
        "priority": 2
      },
      "Awp0AssignTaskAssignmentCtxCmdPlacement": {
        "id": "Awp0AssignTaskAssignmentCtx",
        "uiAnchor": "aw_taskAssignmentTreeTableContextMenu",
        "priority": 0
      },
      "Awp0WorkflowClosePopupCommandCmdPlacemnet": {
        "id": "Awp0WorkflowClosePopupCommand",
        "uiAnchor": "workflow_popup_panel_anchor",
        "priority": 300
      },
      "Awp0AddTaskParticipantAssignmentCmdPlacement": {
        "id": "Awp0AddTaskParticipantAssignmentCmd",
        "uiAnchor": "awp0_addTaskParticipantAssignmentOnPanelAnchor",
        "priority": 0
      },
      "Awp0RemoveTaskParticipantAssignmentCmdPlacement": {
        "id": "Awp0RemoveTaskParticipantAssignmentCmd",
        "uiAnchor": "awp0_addTaskParticipantAssignmentOnPanelAnchor",
        "priority": 1
      },
      "Awp0PasteUserAssignmentParticipantCmdPlacement": {
        "id": "Awp0PasteUserAssignmentCmd",
        "uiAnchor": "awp0_addTaskParticipantAssignmentOnPanelAnchor",
        "priority": 0
      },
      "Awp0AssignTaskCmdPlacement": {
        "id": "Awp0AssignTask",
        "uiAnchor": "aw_footer",
        "priority": -1
      },
      "Awp0AddParticipantTableCmdPlacement": {
        "id": "Awp0AddParticipant",
        "uiAnchor": "aw_participantTableRightAnchor",
        "priority": 0
      },
      "Awp0ReplaceParticipantTableCmdPlacement": {
        "id": "Awp0ReplaceParticipant",
        "uiAnchor": "aw_participantTableRightAnchor",
        "priority": 1
      },
      "Awp0RemoveParticipantTableCmdPlacement": {
        "id": "Awp0RemoveParticipant",
        "uiAnchor": "aw_participantTableRightAnchor",
        "priority": 0
      },
      "workflowPanelSetPinPlacement": {
        "id": "Awp0WorkflowSetPin",
        "uiAnchor": "workflow_oneStepPinCommands",
        "priority": 100
      },
      "workflowPanelSetUnPinPlacement": {
        "id": "Awp0WorkflowSetUnPin",
        "uiAnchor": "workflow_oneStepPinCommands",
        "priority": 100
      },
      "Awp0NewWorkflowProcessCommandPlacement": {
        "id": "Awp0NewWorkflowProcessTemplate",
        "uiAnchor": "aw_rightWall",
        "priority": 1,
        "parentGroupId": "Awp0NewGroup"
      },
      "Awp0TemplateStartEditCmdPlacement": {
        "id": "Awp0TemplateStartEdit",
        "uiAnchor": "aw_rightWall",
        "priority": 1,
        "parentGroupId": "Awp0EditGroup"
      },
      "Awp0TemplateSaveCmdPlacement": {
        "id": "Awp0TemplateSaveEdit",
        "uiAnchor": "aw_rightWall",
        "priority": 2,
        "parentGroupId": "Awp0EditGroup"
      },
      "Awp0TemplateEndEditCmdPlacement": {
        "id": "Awp0TemplateEndEdit",
        "uiAnchor": "aw_rightWall",
        "priority": 1,
        "parentGroupId": "Awp0EditGroup"
      },
      "Awp0TemplateSaveEditToolBarCmdPlacement": {
        "id": "Awp0TemplateSaveEdit",
        "uiAnchor": "aw_toolbarRight",
        "priority": -1
      },
      "Awp0TemplateStartEditToolBarCmdPlacement": {
        "id": "Awp0TemplateStartEdit",
        "uiAnchor": "aw_toolbarRight",
        "priority": 0
      },
      "Awp0TemplateEndEditToolBarCmdPlacement": {
        "id": "Awp0TemplateEndEdit",
        "uiAnchor": "aw_toolbarRight",
        "priority": 0
      },
      "Awp0RemoveProcessTemplateCmdPlacement": {
        "id": "Awp0RemoveProcessTemplate",
        "uiAnchor": "aw_rightWall",
        "priority": 4,
        "parentGroupId": "Awp0EditGroup"
      },
      "Awp0ImportWorkflowTemplateCmdPlacement": {
        "id": "Awp0ImportWorkflowTemplate",
        "uiAnchor": "aw_rightWall",
        "priority": 2,
        "parentGroupId": "Awp0NewGroup"
      },
      "Awp0ExportWorkflowTemplateCmdPlacement": {
        "id": "Awp0ExportWorkflowTemplate",
        "uiAnchor": "aw_toolsAndInfo",
        "priority": 1,
        "parentGroupId": "Awp0ShareGroup"
      },
      "Awp0ToggleTemplateChildrenTileNode": {
        "id": "Awp0ToggleTemplateChildren",
        "uiAnchor": "aw_graph_node",
        "priority": 50
      },
      "Awp0WorkflowGraphGridSettingsCmdPlacement": {
        "id": "Awp0WorkflowGraphGridSettings",
        "uiAnchor": "aw_workflowDesigner",
        "priority": 2
      },
      "Awp0WorkflowDesignerLayoutCommandGroupPlacement": {
        "id": "GcLayoutCommandGroup",
        "uiAnchor": "aw_workflowDesigner",
        "priority": 4,
        "showGroupSelected": false
      },
      "Awp0TemplateFiltersCmdPlacement": {
        "id": "Awp0TemplateFilters",
        "uiAnchor": "aw_primaryWorkArea",
        "priority": 1010
      },
      "Awp0ToggleShowTaskRelatedInfoCmdPlacement": {
        "id": "Awp0ToggleShowTaskRelatedInfo",
        "uiAnchor": "aw_workflowDesigner",
        "priority": 1,
        "showGroupSelected": false
      },
      "Awp0RemoveTaskTemplateCmdPlacement": {
        "id": "Awp0RemoveTaskTemplate",
        "uiAnchor": "aw_workflowDesigner",
        "priority": 6
      },
      "Awp0TemplateConvertToParentCmdPlacement": {
        "id": "Awp0TemplateConvertToParent",
        "uiAnchor": "aw_workflowDesigner",
        "priority": 7
      },
      "Awp0TemplateAddNotificationCmdPlacement": {
        "id": "Awp0TemplateAddNotificationHandler",
        "uiAnchor": "aw_workflowNotificationsAnchor",
        "priority": 1
      },
      "Awp0TemplateShowNotificationHandlerInfoCmdPlacement": {
        "id": "Awp0TemplateShowNotificationHandlerInfo",
        "uiAnchor": "aw_workflowNotificationsAnchor",
        "priority": 1
      },
      "Awp0TemplateEditNotificationHandlerInfoCmdPlacement": {
        "id": "Awp0TemplateEditNotificationHandlerInfo",
        "uiAnchor": "aw_workflowNotificationsAnchor",
        "priority": 1
      },
      "Awp0TemplateRemoveNotificationCmdPlacement": {
        "id": "Awp0TemplateRemoveNotificationHandler",
        "uiAnchor": "aw_workflowNotificationsAnchor",
        "priority": 2
      },
      "Awp0TemplateAddArgumentCmdPlacement": {
        "id": "Awp0TemplateAddArgument",
        "uiAnchor": "aw_workflowKeyRoleCellCommand",
        "priority": 300,
        "cellDisplay": {
          "position": "TOP_RIGHT"
        },
        "displayOption": "ALWAYS"
      },
      "Awp0TemplateRemoveArgumentCmdPlacement": {
        "id": "Awp0TemplateRemoveArgument",
        "uiAnchor": "aw_workflowKeyRoleCellCommand",
        "priority": 301,
        "cellDisplay": {
          "position": "TOP_RIGHT"
        },
        "displayOption": "ALWAYS"
      },
      "Awp0ActionHandlerTableAddCmdPlacement": {
        "id": "Awp0ActionHandlerTableAdd",
        "uiAnchor": "wd_ActionHandlerTableSectionCommands",
        "priority": 100
      },
      "Awp0StartActionHandlerInfoCmdPlacement": {
        "id": "Awp0StartActionHandlerInfo",
        "uiAnchor": "wd_ActionHandlerTableSectionCommands",
        "priority": 1
      },
      "Awp0StartActionHandlerEditCmdPlacement": {
        "id": "Awp0StartActionHandlerEdit",
        "uiAnchor": "wd_ActionHandlerTableSectionCommands",
        "priority": 1
      },
      "Awp0RemoveActionHandlerCmdPlacement": {
        "id": "Awp0RemoveActionHandler",
        "uiAnchor": "wd_ActionHandlerTableSectionCommands",
        "priority": 300
      },
      "Awp0ActionHandlerCutCmdPlacement": {
        "id": "Awp0ActionHandlerCut",
        "uiAnchor": "wd_ActionHandlerTableSectionCommands",
        "priority": 200
      },
      "Awp0ActionHandlerCopyCmdPlacement": {
        "id": "Awp0ActionHandlerCopy",
        "uiAnchor": "wd_ActionHandlerTableSectionCommands",
        "priority": 200
      },
      "Awp0ActionHandlerPasteGroupCmdPlacement": {
        "id": "Awp0ActionHandlerPasteGroup",
        "uiAnchor": "wd_ActionHandlerTableSectionCommands",
        "priority": 200,
        "showGroupSelected": false
      },
      "Awp0StartActionTypeCmdPlacement": {
        "id": "Awp0StartActionType",
        "uiAnchor": "aw_oneStep",
        "priority": -1,
        "parentGroupId": "Awp0ActionHandlerPasteGroup"
      },
      "Awp0AssignActionTypeCmdPlacement": {
        "id": "Awp0AssignActionType",
        "uiAnchor": "aw_oneStep",
        "priority": -1,
        "parentGroupId": "Awp0ActionHandlerPasteGroup"
      },
      "Awp0PerformActionTypeCmdPlacement": {
        "id": "Awp0PerformActionType",
        "uiAnchor": "aw_oneStep",
        "priority": -1,
        "parentGroupId": "Awp0ActionHandlerPasteGroup"
      },
      "Awp0CompleteActionTypeCmdPlacement": {
        "id": "Awp0CompleteActionType",
        "uiAnchor": "aw_oneStep",
        "priority": -1,
        "parentGroupId": "Awp0ActionHandlerPasteGroup"
      },
      "Awp0SkipActionTypeCmdPlacement": {
        "id": "Awp0SkipActionType",
        "uiAnchor": "aw_oneStep",
        "priority": -1,
        "parentGroupId": "Awp0ActionHandlerPasteGroup"
      },
      "Awp0SuspendActionTypeCmdPlacement": {
        "id": "Awp0SuspendActionType",
        "uiAnchor": "aw_oneStep",
        "priority": -1,
        "parentGroupId": "Awp0ActionHandlerPasteGroup"
      },
      "Awp0ResumeActionTypeCmdPlacement": {
        "id": "Awp0ResumeActionType",
        "uiAnchor": "aw_oneStep",
        "priority": -1,
        "parentGroupId": "Awp0ActionHandlerPasteGroup"
      },
      "Awp0AbortActionTypeCmdPlacement": {
        "id": "Awp0AbortActionType",
        "uiAnchor": "aw_oneStep",
        "priority": -1,
        "parentGroupId": "Awp0ActionHandlerPasteGroup"
      },
      "Awp0UndoActionTypeCmdPlacement": {
        "id": "Awp0UndoActionType",
        "uiAnchor": "aw_oneStep",
        "priority": -1,
        "parentGroupId": "Awp0ActionHandlerPasteGroup"
      },
      "Awp0ActionHandlerMoveUpCmdPlacement": {
        "id": "Awp0ActionHandlerMoveUp",
        "uiAnchor": "wd_ActionHandlerTableSectionCommands",
        "priority": 250
      },
      "Awp0ActionHandlerMoveDownCmdPlacement": {
        "id": "Awp0ActionHandlerMoveDown",
        "uiAnchor": "wd_ActionHandlerTableSectionCommands",
        "priority": 250
      },
      "Awp0RuleHandlerMoveUpCmdPlacement": {
        "id": "Awp0RuleHandlerMoveUp",
        "uiAnchor": "wd_RuleHandlerTableSectionCommands",
        "priority": 250
      },
      "Awp0RuleHandlerMoveDownCmdPlacement": {
        "id": "Awp0RuleHandlerMoveDown",
        "uiAnchor": "wd_RuleHandlerTableSectionCommands",
        "priority": 250
      },
      "Awp0RuleHandlerCutCmdPlacement": {
        "id": "Awp0RuleHandlerCut",
        "uiAnchor": "wd_RuleHandlerTableSectionCommands",
        "priority": 100
      },
      "Awp0RuleHandlerCopyCmdPlacement": {
        "id": "Awp0RuleHandlerCopy",
        "uiAnchor": "wd_RuleHandlerTableSectionCommands",
        "priority": 100
      },
      "Awp0RuleHandlerPasteGroupCmdPlacement": {
        "id": "Awp0RuleHandlerPasteGroup",
        "uiAnchor": "wd_RuleHandlerTableSectionCommands",
        "priority": 100,
        "showGroupSelected": false
      },
      "Awp0StartActionTypeForRuleCmdPlacement": {
        "id": "Awp0StartActionTypeForRule",
        "uiAnchor": "aw_oneStep",
        "priority": -1,
        "parentGroupId": "Awp0RuleHandlerPasteGroup"
      },
      "Awp0AssignActionTypeForRuleCmdPlacement": {
        "id": "Awp0AssignActionTypeForRule",
        "uiAnchor": "aw_oneStep",
        "priority": -1,
        "parentGroupId": "Awp0RuleHandlerPasteGroup"
      },
      "Awp0PerformActionTypeForRuleCmdPlacement": {
        "id": "Awp0PerformActionTypeForRule",
        "uiAnchor": "aw_oneStep",
        "priority": -1,
        "parentGroupId": "Awp0RuleHandlerPasteGroup"
      },
      "Awp0CompleteActionTypeForRuleCmdPlacement": {
        "id": "Awp0CompleteActionTypeForRule",
        "uiAnchor": "aw_oneStep",
        "priority": -1,
        "parentGroupId": "Awp0RuleHandlerPasteGroup"
      },
      "Awp0SkipActionTypeForRuleCmdPlacement": {
        "id": "Awp0SkipActionTypeForRule",
        "uiAnchor": "aw_oneStep",
        "priority": -1,
        "parentGroupId": "Awp0RuleHandlerPasteGroup"
      },
      "Awp0SuspendActionTypeForRuleCmdPlacement": {
        "id": "Awp0SuspendActionTypeForRule",
        "uiAnchor": "aw_oneStep",
        "priority": -1,
        "parentGroupId": "Awp0RuleHandlerPasteGroup"
      },
      "Awp0ResumeActionTypeForRuleCmdPlacement": {
        "id": "Awp0ResumeActionTypeForRule",
        "uiAnchor": "aw_oneStep",
        "priority": -1,
        "parentGroupId": "Awp0RuleHandlerPasteGroup"
      },
      "Awp0AbortActionTypeForRuleCmdPlacement": {
        "id": "Awp0AbortActionTypeForRule",
        "uiAnchor": "aw_oneStep",
        "priority": -1,
        "parentGroupId": "Awp0RuleHandlerPasteGroup"
      },
      "Awp0UndoActionTypeForRuleCmdPlacement": {
        "id": "Awp0UndoActionTypeForRule",
        "uiAnchor": "aw_oneStep",
        "priority": -1,
        "parentGroupId": "Awp0RuleHandlerPasteGroup"
      },
      "Awp0RuleHandlerTableAddCmdPlacement": {
        "id": "Awp0RuleHandlerTableAdd",
        "uiAnchor": "wd_RuleHandlerTableSectionCommands",
        "priority": 1
      },
      "Awp0RemoveRuleHandlerCmdPlacement": {
        "id": "Awp0RemoveRuleHandler",
        "uiAnchor": "wd_RuleHandlerTableSectionCommands",
        "priority": 300
      },
      "Awp0StartRuleHandlerInfoCmdPlacement": {
        "id": "Awp0StartRuleHandlerInfo",
        "uiAnchor": "wd_RuleHandlerTableSectionCommands",
        "priority": 1
      },
      "Awp0StartRuleHandlerEditCmdPlacement": {
        "id": "Awp0StartRuleHandlerEdit",
        "uiAnchor": "wd_RuleHandlerTableSectionCommands",
        "priority": 1
      },
      "Awp0AddHandlerArgumentPanelCmdPlacement": {
        "id": "Awp0AddHandlerArgumentPanel",
        "uiAnchor": "aw_HandlerArgumentPanelSectionCommands",
        "priority": 1
      },
      "Awp0RemoveHandlerArgumentPanelCmdPlacement": {
        "id": "Awp0RemoveHandlerArgumentPanel",
        "uiAnchor": "aw_HandlerArgumentPanelSectionCommands",
        "priority": 1
      },
      "Awp0StartArgumentEditCmdPlacement": {
        "id": "Awp0StartArgumentEdit",
        "uiAnchor": "aw_HandlerArgumentPanelSectionCommands",
        "priority": 1
      },
      "Awp0TemplateAddAssignmentCmdPlacement": {
        "id": "Awp0TemplateAddAssignmentHandler",
        "uiAnchor": "aw_workflowAssignmentsAnchor",
        "priority": 1
      },
      "Awp0TemplateShowAssignmentHandlerInfoCmdPlacement": {
        "id": "Awp0TemplateShowAssignmentHandlerInfo",
        "uiAnchor": "aw_workflowAssignmentsAnchor",
        "priority": 1
      },
      "Awp0TemplateEditAssignmentHandlerInfoCmdPlacement": {
        "id": "Awp0TemplateEditAssignmentHandlerInfo",
        "uiAnchor": "aw_workflowAssignmentsAnchor",
        "priority": 1
      },
      "Awp0TemplateShowProfileInfoCmdPlacement": {
        "id": "Awp0TemplateShowProfileInfo",
        "uiAnchor": "aw_workflowAssignmentsAnchor",
        "priority": 1
      },
      "Awp0TemplateEditProfileInfoCmdPlacement": {
        "id": "Awp0TemplateEditProfileInfo",
        "uiAnchor": "aw_workflowAssignmentsAnchor",
        "priority": 1
      },
      "Awp0TemplateRemoveSignoffProfileCmdPlacement": {
        "id": "Awp0TemplateRemoveSignoffProfile",
        "uiAnchor": "aw_workflowAssignmentsAnchor",
        "priority": 2
      },
      "Awp0TemplateRemoveAssignmentHandlerCmdPlacement": {
        "id": "Awp0TemplateRemoveAssignmentHandler",
        "uiAnchor": "aw_workflowAssignmentsAnchor",
        "priority": 2
      },
      "Awp0TemplateAddFormCmdPlacement": {
        "id": "Awp0TemplateAddFormHandler",
        "uiAnchor": "aw_workflowFormsAnchor",
        "priority": 1
      },
      "Awp0TemplateShowFormHandlerInfoCmdPlacement": {
        "id": "Awp0TemplateShowFormHandlerInfo",
        "uiAnchor": "aw_workflowFormsAnchor",
        "priority": 1
      },
      "Awp0TemplateEditFormHandlerInfoCmdPlacement": {
        "id": "Awp0TemplateEditFormHandlerInfo",
        "uiAnchor": "aw_workflowFormsAnchor",
        "priority": 1
      },
      "Awp0TemplateRemoveFormCmdPlacement": {
        "id": "Awp0TemplateRemoveFormHandler",
        "uiAnchor": "aw_workflowFormsAnchor",
        "priority": 2
      },
      "Awp0WorkflowGraphLegendPanelCmdPlacement": {
        "id": "Awp0WorkflowGraphLegendPanel",
        "uiAnchor": "aw_workflowDesigner",
        "priority": 5
      },
      "Awp0SaveGraphPositionsCmdPlacement": {
        "id": "Awp0SaveGraphPositions",
        "uiAnchor": "aw_workflowDesigner",
        "priority": 6
      },
      "Awp0ShowFixedLayoutCmdPlacement": {
        "id": "Awp0ShowFixedLayout",
        "uiAnchor": "aw_workflowDesigner",
        "priority": 7
      },
      "Awp0ShowAutoLayoutCmdPlacement": {
        "id": "Awp0ShowAutoLayout",
        "uiAnchor": "aw_workflowDesigner",
        "priority": 8
      },
      "Awp0RuleHandlerHelpCmdPlacement": {
        "id": "Awp0RuleHandlerHelp",
        "uiAnchor": "aw_RuleHandlerHelpCommandAnchor",
        "priority": 1
      },
      "Awp0ActionHandlerHelpCmdPlacement": {
        "id": "Awp0ActionHandlerHelp",
        "uiAnchor": "aw_ActionHandlerHelpCommandAnchor",
        "priority": 1
      },
      "Awp0WorkflowDesignerAutoLayoutTopToBottomOneStep": {
        "id": "Awp0WorkflowAutoLayoutTopToBottom",
        "uiAnchor": "aw_oneStep",
        "priority": -1,
        "parentGroupId": "GcLayoutCommandGroup"
      },
      "Awp0WorkflowDesignerAutoLayoutRightToLeftOneStep": {
        "id": "Awp0WorkflowAutoLayoutRightToLeft",
        "uiAnchor": "aw_oneStep",
        "priority": -1,
        "parentGroupId": "GcLayoutCommandGroup"
      },
      "Awp0WorkflowDesignerAutoLayoutLeftToRightOneStep": {
        "id": "Awp0WorkflowAutoLayoutLeftToRight",
        "uiAnchor": "aw_oneStep",
        "priority": -1,
        "parentGroupId": "GcLayoutCommandGroup"
      },
      "Awp0WorkflowDesignerFixedLayoutOneStep": {
        "id": "Awp0WorkflowFixedLayout",
        "uiAnchor": "aw_oneStep",
        "priority": -1,
        "parentGroupId": "GcLayoutCommandGroup"
      },
      "Awp0ImportPALCmdPlacement": {
        "id": "Awp0ImportPAL",
        "uiAnchor": "aw_rightWall",
        "priority": 2,
        "parentGroupId": "Awp0NewGroup"
      },
      "Awp0ExportPALCmdPlacement": {
        "id": "Awp0ExportPAL",
        "uiAnchor": "aw_rightWall",
        "priority": 1,
        "parentGroupId": "Awp0ShareGroup"
      },
      "Awp0TemplateAssignmentProfileCellCommandPlacement": {
        "id": "Awp0TemplateAssignmentProfileCellCommand",
        "uiAnchor": "aw_templateProfileCellCommand",
        "priority": 10,
        "cellDisplay": {
          "hover": true,
          "position": "TOP_RIGHT",
          "selected": true
        }
      },
      "Awp0AddTemplateUserAssignmentCmdPlacement": {
        "id": "Awp0AddTemplateUserAssignmentCmd",
        "uiAnchor": "awp0_templateAssignmentPanelAnchor",
        "priority": 1
      },
      "Awp0RemoveTemplateUsersAssignmentCmdPlacement": {
        "id": "Awp0RemoveTemplateUsersAssignmentCmd",
        "uiAnchor": "awp0_templateAssignmentPanelAnchor",
        "priority": 2
      },
      "Awp0StartEditTemplateAssignmentCmdPlacement": {
        "id": "Awp0StartEditTemplateAssignment",
        "uiAnchor": "aw_rightWall",
        "priority": 1,
        "parentGroupId": "Awp0EditGroup"
      },
      "Awp0SaveTemplateAssignmentCmdPlacement": {
        "id": "Awp0SaveTemplateAssignment",
        "uiAnchor": "aw_rightWall",
        "priority": 2,
        "parentGroupId": "Awp0EditGroup"
      },
      "Awp0CancelTemplateAssignmentCmdPlacement": {
        "id": "Awp0CancelTemplateAssignment",
        "uiAnchor": "aw_rightWall",
        "priority": 3,
        "parentGroupId": "Awp0EditGroup"
      },
      "Awp0CreateProcessAssignmentListCmdPlacement": {
        "id": "Awp0CreateProcessAssignmentList",
        "uiAnchor": "aw_rightWall",
        "priority": 1,
        "parentGroupId": "Awp0NewGroup"
      },
      "Awp0RemovePALCmdPlacement": {
        "id": "Awp0RemovePAL",
        "uiAnchor": "aw_rightWall",
        "priority": 4,
        "parentGroupId": "Awp0EditGroup"
      },
      "Awp0PALAssignUsersCtxCmdPlacement": {
        "id": "Awp0PALAssignUsersCtx",
        "uiAnchor": "aw_palTaskAssignmentTreeTableContextMenu",
        "priority": 0
      }
    },
    "actions": {
      "workflowShowDelegatedObject": {
        "actionType": "Navigate",
        "navigateTo": "com_siemens_splm_clientfx_tcui_xrt_showObject",
        "navigationParams": {
          "uid": "{{ctx.selected.uid}}"
        },
        "events": {
          "success": [
            {
              "name": "inbox.markAsRead"
            }
          ]
        }
      },
      "markAsReadAction": {
        "actionType": "JSFunction",
        "method": "setViewedByMeIfNeeded",
        "deps": "js/aw.inbox.service",
        "inputData": {
          "mo": "{{ctx.selected}}"
        }
      },
      "awp0PromoteTaskCommandAction": {
        "actionType": "JSFunction",
        "method": "activateCommandPanel",
        "deps": "js/commandPanel.service",
        "inputData": {
          "commandId": "Awp0PromoteTask",
          "location": "aw_toolsAndInfo"
        }
      },
      "awp0OutOfOfficeCommandAction": {
        "actionType": "JSFunction",
        "method": "activateCommandPanel",
        "deps": "js/commandPanel.service",
        "inputData": {
          "commandId": "Awp0OutOfOffice",
          "location": "aw_toolsAndInfo"
        }
      },
      "awp0OpenInboxLocationCommandAction": {
        "actionType": "TcSoaService",
        "serviceName": "Internal-AWS2-2019-06-Finder",
        "method": "performSearchViewModel4",
        "inputData": {
          "searchInput": {
            "maxToLoad": 50,
            "maxToReturn": 50,
            "providerName": "Awp0InboxProvider",
            "searchCriteria": {
              "searchString": "",
              "searchInboxContentType": "myTasks",
              "userId": "{{ctx.user.props.user_id.dbValue}}"
            },
            "searchFilterFieldSortType": "Priority",
            "searchFilterMap6": {},
            "searchSortCriteria": [],
            "startIndex": 0
          }
        },
        "outputData": {
          "searchResults": "searchResultsJSON",
          "totalFound": "totalFound"
        },
        "events": {
          "success": [
            {
              "name": "navigateToInboxEvent"
            }
          ]
        }
      },
      "navigateToInboxAction": {
        "actionType": "JSFunction",
        "method": "navigate",
        "deps": "js/aw.inbox.service"
      },
      "awp0InboxFiltersCommandAction": {
        "actionType": "JSFunction",
        "method": "activateCommandPanel",
        "deps": "js/commandPanel.service",
        "inputData": {
          "commandId": "Awp0InboxFilters",
          "location": "aw_navigation"
        }
      },
      "awp0InboxUserTabSubPanelAction": {
        "actionType": "Event",
        "method": "Event",
        "inputData": {
          "events": [
            {
              "name": "awPanel.navigate",
              "eventData": {
                "destPanelId": "UserTabSub",
                "title": "{{i18n.surrogateAdd}}",
                "supportGoBack": true
              }
            }
          ]
        }
      },
      "Awp0UserAssignmentShowDelegatedObject": {
        "actionType": "Navigate",
        "navigateTo": "com_siemens_splm_clientfx_tcui_xrt_showObject",
        "navigationParams": {
          "uid": {
            "$adapt": "{{ctx.selected}}",
            "path": "dbValue"
          }
        }
      },
      "addReviewProfileSignoffCellCommand": {
        "actionType": "JSFunction",
        "method": "execute",
        "deps": "js/Awp0AddSignoffCommandHandler",
        "inputData": {
          "selectedCell": "{{commandContext.vmo}}",
          "signoffAction": "SOA_EPM_Review",
          "originType": "SOA_EPM_SIGNOFF_ORIGIN_PROFILE"
        }
      },
      "addReviewAdhocSignoffCommand": {
        "actionType": "JSFunction",
        "method": "execute",
        "deps": "js/Awp0AddSignoffCommandHandler",
        "inputData": {
          "selectedCell": "",
          "signoffAction": "SOA_EPM_Review",
          "originType": "SOA_EPM_SIGNOFF_ORIGIN_PROFILE"
        }
      },
      "removeReviewProfileSignoffCommand": {
        "actionType": "Event",
        "method": "Event",
        "inputData": {
          "events": [
            {
              "name": "Awp0ReviewProfileSignoff.removeSignoffData"
            }
          ]
        }
      },
      "removeReviewAdhocSignoffCommand": {
        "actionType": "Event",
        "method": "Event",
        "inputData": {
          "events": [
            {
              "name": "Awp0ReviewAdhocSignoff.removeSignoffData"
            }
          ]
        }
      },
      "createPresenterForAddSurrogate": {
        "actionType": "JSFunction",
        "method": "activateCommandPanel",
        "deps": "js/commandPanel.service",
        "inputData": {
          "commandId": "Awp0AddSurrogate",
          "location": "aw_toolsAndInfo"
        }
      },
      "AddResourcePoolCommand": {
        "actionType": "JSFunction",
        "method": "activateCommandPanel",
        "deps": "js/commandPanel.service",
        "inputData": {
          "commandId": "Awp0AddResourcePool",
          "location": "aw_toolsAndInfo"
        }
      },
      "removeSubscribedResourcePools": {
        "actionType": "JSFunction",
        "method": "removeSubscribedResourcePools",
        "inputData": {
          "data": "{{data}}",
          "ctx": "{{ctx}}"
        },
        "outputData": {
          "deleteInput": ""
        },
        "events": {
          "success": [
            {
              "name": "deleteRelationInboxes"
            }
          ]
        },
        "deps": "js/Awp0AddResourcePool"
      },
      "deleteRelationInboxes": {
        "actionType": "TcSoaService",
        "serviceName": "Core-2006-03-DataManagement",
        "method": "deleteRelations",
        "inputData": {
          "input": "{{data.deleteInput}}"
        },
        "events": {
          "success": [
            {
              "name": "cdm.relatedModified",
              "eventData": {
                "refreshLocationFlag": true,
                "relatedModified": [
                  "{{ctx.locationContext.modelObject}}"
                ]
              }
            }
          ]
        }
      },
      "getAwp0UserSubInboxProperty": {
        "actionType": "TcSoaService",
        "serviceName": "Core-2006-03-DataManagement",
        "method": "getProperties",
        "inputData": {
          "objects": [
            "{{ctx.user}}"
          ],
          "attributes": [
            "subscribed_inboxes",
            "userinbox"
          ]
        },
        "policy": {
          "types": [
            {
              "name": "User",
              "properties": [
                {
                  "name": "subscribed_inboxes",
                  "modifiers": [
                    {
                      "name": "withProperties",
                      "Value": "true"
                    }
                  ]
                },
                {
                  "name": "userinbox",
                  "modifiers": [
                    {
                      "name": "withProperties",
                      "Value": "true"
                    }
                  ]
                }
              ]
            },
            {
              "name": "User_Inbox",
              "properties": [
                {
                  "name": "owning_user"
                }
              ]
            },
            {
              "name": "TaskInbox",
              "properties": [
                {
                  "name": "owner",
                  "modifiers": [
                    {
                      "name": "withProperties",
                      "Value": "true"
                    }
                  ]
                }
              ]
            }
          ]
        },
        "outputData": {
          "objectsWithProjectList": ""
        },
        "events": {
          "success": [
            {
              "name": "removeSubscribedResourcePools",
              "eventData": {
                "removeResPoolResponse": "{{data.objectsWithProjectList}}"
              }
            }
          ]
        }
      },
      "Awp0UserAssignmentShowObjectCell": {
        "actionType": "Navigate",
        "navigateTo": "com_siemens_splm_clientfx_tcui_xrt_showObject",
        "navigationParams": {
          "uid": "{{commandContext.vmo.props.awp0User.dbValues[0]}}"
        }
      },
      "addAcknowledgeAdhocSignoffCommand": {
        "actionType": "JSFunction",
        "method": "execute",
        "deps": "js/Awp0AddSignoffCommandHandler",
        "inputData": {
          "selectedCell": "",
          "signoffAction": "SOA_EPM_Acknowledge",
          "originType": "SOA_EPM_ORIGIN_UNDEFINED"
        }
      },
      "removeAcknowledgeAdhocSignoffCommand": {
        "actionType": "Event",
        "method": "Event",
        "inputData": {
          "events": [
            {
              "name": "Awp0AcknowledgeAdhocSignoff.removeSignoffData"
            }
          ]
        }
      },
      "addNotifyAdhocSignoffCommand": {
        "actionType": "JSFunction",
        "method": "execute",
        "deps": "js/Awp0AddSignoffCommandHandler",
        "inputData": {
          "selectedCell": "",
          "signoffAction": "SOA_EPM_Notify",
          "originType": "SOA_EPM_ORIGIN_UNDEFINED"
        }
      },
      "removeNotifyAdhocSignoffCommand": {
        "actionType": "Event",
        "method": "Event",
        "inputData": {
          "events": [
            {
              "name": "Awp0NotifyAdhocSignoff.removeSignoffData"
            }
          ]
        }
      },
      "reassignTaskAction": {
        "actionType": "JSFunction",
        "method": "updateCtx",
        "deps": "js/appCtxService",
        "inputData": {
          "name": "workflow",
          "value": {
            "loadProjectData": true
          }
        },
        "events": {
          "success": [
            {
              "name": "reassignTask.OpenReassignPanel",
              "condition": "ctx.mselected.length > 1 || ctx.selected.modelType.typeHierarchyArray.indexOf('Signoff') <= -1 "
            },
            {
              "name": "reassignTask.loadSignoffProperties",
              "condition": "ctx.mselected.length === 1 && ctx.selected.modelType.typeHierarchyArray.indexOf('Signoff') > -1 "
            }
          ]
        }
      },
      "openReassignTaskPanel": {
        "actionType": "JSFunction",
        "method": "activateCommandPanel",
        "deps": "js/commandPanel.service",
        "inputData": {
          "commandId": "Awp0ReassignTask",
          "location": "aw_toolsAndInfo"
        },
        "events": {
          "success": [
            {
              "name": "reassignTask.launchComponentsPanel",
              "condition": "conditions.IsWorkFlowHostingEnabled"
            }
          ]
        }
      },
      "loadSignoffProperties": {
        "actionType": "TcSoaService",
        "serviceName": "Core-2006-03-DataManagement",
        "method": "getProperties",
        "inputData": {
          "objects": [
            "{{ctx.selected}}"
          ],
          "attributes": [
            "origin"
          ]
        },
        "policy": {
          "types": [
            {
              "name": "EPMSignoffProfile",
              "properties": [
                {
                  "name": "number_of_signoffs"
                },
                {
                  "name": "allow_subgroups"
                },
                {
                  "name": "group",
                  "modifiers": [
                    {
                      "name": "withProperties",
                      "Value": "true"
                    }
                  ]
                },
                {
                  "name": "role",
                  "modifiers": [
                    {
                      "name": "withProperties",
                      "Value": "true"
                    }
                  ]
                }
              ]
            },
            {
              "name": "Role",
              "properties": [
                {
                  "name": "role_name"
                }
              ]
            },
            {
              "name": "Group",
              "properties": [
                {
                  "name": "object_full_name"
                }
              ]
            },
            {
              "name": "Signoff",
              "properties": [
                {
                  "name": "origin",
                  "modifiers": [
                    {
                      "name": "withProperties",
                      "Value": "true"
                    }
                  ]
                },
                {
                  "name": "fnd0ParentTask"
                }
              ]
            }
          ]
        },
        "events": {
          "success": [
            {
              "name": "reassignTask.OpenReassignPanel"
            }
          ]
        }
      },
      "releaseCommandAction": {
        "actionType": "TcSoaService",
        "serviceName": "Workflow-2014-06-Workflow",
        "method": "setActiveSurrogate",
        "inputData": {
          "input": [
            {
              "taskOrSignoffTag": "{{ctx.selected}}",
              "releaseStandIn": true,
              "transferCheckouts": true
            }
          ]
        },
        "policy": {
          "types": [
            {
              "name": "EPMTask",
              "properties": [
                {
                  "name": "awp0PerformableByMeBehavior"
                }
              ]
            },
            {
              "name": "Signoff",
              "properties": [
                {
                  "name": "awp0PerformableByMeBehavior"
                }
              ]
            }
          ]
        },
        "events": {
          "success": [
            {
              "condition": "ctx.locationContext['ActiveWorkspace:Location'] === 'com.siemens.splm.clientfx.tcui.xrt.showObjectLocation'",
              "name": "cdm.relatedModified",
              "eventData": {
                "refreshLocationFlag": true,
                "relatedModified": [
                  "{{ctx.locationContext.modelObject}}"
                ]
              }
            },
            {
              "condition": "ctx.locationContext['ActiveWorkspace:Location'] === 'com.siemens.splm.client.inbox.tasksLocation' && ctx.xrtSummaryContextObject && ( ctx.xrtPageContext.secondaryXrtPageID === 'tc_xrt_Overview' || ctx.xrtPageContext.secondaryXrtPageID === 'tc_xrt_Workflow')",
              "name": "cdm.relatedModified",
              "eventData": {
                "refreshLocationFlag": true,
                "relatedModified": [
                  "{{ctx.xrtSummaryContextObject}}"
                ]
              }
            }
          ]
        }
      },
      "copyUserAssignment": {
        "actionType": "JSFunction",
        "method": "execute",
        "deps": "js/Awp0CopyUserAssignment",
        "inputData": {
          "objectToCopy": "{{ctx.mselected}}"
        },
        "actionMessages": {
          "success": [
            {
              "condition": "(ctx.mselected && ctx.mselected.length === 1)",
              "message": "copyUserSingleSuccessful"
            },
            {
              "condition": "(ctx.mselected && ctx.mselected.length > 1)",
              "message": "copyUserMultipleSuccessful"
            }
          ]
        }
      },
      "performStandInAction": {
        "actionType": "TcSoaService",
        "serviceName": "Workflow-2014-06-Workflow",
        "method": "setActiveSurrogate",
        "inputData": {
          "input": [
            {
              "taskOrSignoffTag": "{{ctx.selected}}",
              "releaseStandIn": false,
              "transferCheckouts": true
            }
          ]
        },
        "policy": {
          "types": [
            {
              "name": "EPMTask",
              "properties": [
                {
                  "name": "awp0PerformableByMeBehavior"
                }
              ]
            },
            {
              "name": "Signoff",
              "properties": [
                {
                  "name": "awp0PerformableByMeBehavior"
                }
              ]
            }
          ]
        },
        "events": {
          "success": [
            {
              "condition": "ctx.locationContext['ActiveWorkspace:Location'] === 'com.siemens.splm.clientfx.tcui.xrt.showObjectLocation'",
              "name": "cdm.relatedModified",
              "eventData": {
                "refreshLocationFlag": true,
                "relatedModified": [
                  "{{ctx.locationContext.modelObject}}"
                ]
              }
            },
            {
              "condition": "ctx.locationContext['ActiveWorkspace:Location'] === 'com.siemens.splm.client.inbox.tasksLocation' && ctx.xrtSummaryContextObject && ( ctx.xrtPageContext.secondaryXrtPageID === 'tc_xrt_Overview' || ctx.xrtPageContext.secondaryXrtPageID === 'tc_xrt_Workflow')",
              "name": "cdm.relatedModified",
              "eventData": {
                "refreshLocationFlag": true,
                "relatedModified": [
                  "{{ctx.xrtSummaryContextObject}}"
                ]
              }
            }
          ]
        }
      },
      "setContextVariableForAddReviewer": {
        "actionType": "JSFunction",
        "method": "setContextVariableForAddReviewer",
        "deps": "js/Awp0AddReviewer",
        "inputData": {
          "ctx": "{{ctx}}"
        }
      },
      "removeSurrogateAction": {
        "actionType": "TcSoaService",
        "serviceName": "Workflow-2014-06-Workflow",
        "method": "setSurrogate",
        "inputData": {
          "requests": [
            {
              "unset": true,
              "fromResource": "{{ctx.pselected}}",
              "toResource": {
                "type": "User",
                "uid": "{{ctx.selected.props.awp0User.dbValues[0]}}"
              },
              "startDate": "",
              "endDate": ""
            }
          ]
        },
        "events": {
          "success": [
            {
              "name": "cdm.relatedModified",
              "eventData": {
                "relatedModified": [
                  "{{ctx.pselected}}"
                ]
              }
            }
          ]
        }
      },
      "getAwp0UserProperty": {
        "actionType": "TcSoaService",
        "serviceName": "Core-2006-03-DataManagement",
        "method": "getProperties",
        "inputData": {
          "objects": [
            "{{ctx.selected}}"
          ],
          "attributes": [
            "awp0User"
          ]
        },
        "events": {
          "success": [
            {
              "name": "inbox.removeSurrogateEvent"
            }
          ]
        }
      },
      "validationAndActivatePerformTaskPanel": {
        "actionType": "JSFunction",
        "method": "validationAndActivatePerformTaskPanel",
        "inputData": {
          "data": "{{data}}"
        },
        "deps": "js/Awp0PerformTaskCommandHandler"
      },
      "isPerformTaskCommandClicked": {
        "actionType": "JSFunction",
        "method": "performTaskCommandClicked",
        "deps": "js/Awp0PerformTaskCommandHandler",
        "events": {
          "success": [
            {
              "name": "inbox.invokePerformTaskCommandHandler"
            }
          ]
        }
      },
      "ClaimTask": {
        "actionType": "TcSoaService",
        "serviceName": "Workflow-2014-06-Workflow",
        "method": "performAction3",
        "inputData": {
          "input": [
            {
              "actionableObject": "{{function:getActionableObject}}",
              "action": "SOA_EPM_claim_action",
              "password": "",
              "supportingValue": "",
              "supportingObject": "{{function:getClaimSupportingObject}}",
              "propertyNameValues": {}
            }
          ]
        },
        "deps": "js/Awp0ClaimTask",
        "events": {
          "success": [
            {
              "name": "primaryWorkarea.reset",
              "condition": "ctx.locationContext['ActiveWorkspace:Location'] !== 'com.siemens.splm.clientfx.tcui.xrt.showObjectLocation'"
            },
            {
              "condition": "ctx.locationContext['ActiveWorkspace:Location'] === 'com.siemens.splm.clientfx.tcui.xrt.showObjectLocation'",
              "name": "cdm.relatedModified",
              "eventData": {
                "refreshLocationFlag": true,
                "relatedModified": [
                  "{{ctx.locationContext.modelObject}}"
                ]
              }
            }
          ],
          "failure": [
            {
              "name": "primaryWorkarea.reset",
              "condition": "ctx.locationContext['ActiveWorkspace:Location'] !== 'com.siemens.splm.clientfx.tcui.xrt.showObjectLocation' && errorCode.code === 33321"
            },
            {
              "condition": "ctx.locationContext['ActiveWorkspace:Location'] === 'com.siemens.splm.clientfx.tcui.xrt.showObjectLocation' && errorCode.code === 33321",
              "name": "cdm.relatedModified",
              "eventData": {
                "refreshLocationFlag": true,
                "relatedModified": [
                  "{{ctx.locationContext.modelObject}}"
                ]
              }
            }
          ]
        },
        "actionMessages": {
          "failure": [
            {
              "message": "inboxServerError"
            }
          ]
        }
      },
      "claimSignoffObject": {
        "actionType": "TcSoaService",
        "serviceName": "Core-2006-03-DataManagement",
        "method": "getProperties",
        "inputData": {
          "objects": [
            "{{ctx.selected}}"
          ],
          "attributes": [
            "fnd0ParentTask"
          ]
        },
        "events": {
          "success": [
            {
              "name": "claimSignoffObject.propertiesLoaded"
            }
          ]
        }
      },
      "openEPMTaskOrSignoffCommandAction": {
        "actionType": "Navigate",
        "navigateTo": "com_siemens_splm_clientfx_tcui_xrt_showObject",
        "navigationParams": {
          "uid": "{{commandContext.vmo.uid}}"
        },
        "events": {
          "success": [
            {
              "name": "inbox.openTaskMarkAsRead"
            }
          ]
        }
      },
      "openTaskMarkAsReadAction": {
        "actionType": "JSFunction",
        "method": "setViewedByMeIfNeeded",
        "deps": "js/aw.inbox.service",
        "inputData": {
          "mo": "{{commandContext.vmo}}"
        }
      },
      "Awp0AbortTaskActivatePanel": {
        "actionType": "JSFunction",
        "method": "activateCommandPanel",
        "deps": "js/commandPanel.service",
        "inputData": {
          "commandId": "Awp0AbortTask",
          "location": "aw_toolsAndInfo"
        }
      },
      "showInbox": {
        "actionType": "Navigate",
        "navigateTo": "myTasks",
        "navigationParams": {}
      },
      "awp0DemoteTaskCommandAction": {
        "actionType": "JSFunction",
        "method": "activateCommandPanel",
        "deps": "js/commandPanel.service",
        "inputData": {
          "commandId": "Awp0DemoteTask",
          "location": "aw_toolsAndInfo"
        }
      },
      "awp0SuspendTaskCommandAction": {
        "actionType": "JSFunction",
        "method": "activateCommandPanel",
        "deps": "js/commandPanel.service",
        "inputData": {
          "commandId": "Awp0SuspendTask",
          "location": "aw_toolsAndInfo"
        }
      },
      "awp0ResumeTaskCommandAction": {
        "actionType": "JSFunction",
        "method": "activateCommandPanel",
        "deps": "js/commandPanel.service",
        "inputData": {
          "commandId": "Awp0ResumeTask",
          "location": "aw_toolsAndInfo"
        }
      },
      "submitToHostAction": {
        "actionType": "JSFunction",
        "method": "sendEventToHost",
        "inputData": {
          "data": "{{data}}"
        },
        "deps": "js/Awp0hostInboxUtils"
      },
      "deleteTaskAction": {
        "actionType": "JSFunctionAsync",
        "method": "getTaskObjectsToDelete",
        "deps": "js/Awp0InboxUtils",
        "inputData": {
          "selectedObjects": {
            "$adapt": "{{ctx.mselected}}"
          }
        },
        "outputData": {
          "deletedTaskObjects": ""
        },
        "events": {
          "success": [
            {
              "name": "workflow.initiateTaskDeleteAction",
              "condition": "data.deletedTaskObjects && data.deletedTaskObjects.length > 0"
            }
          ]
        }
      },
      "initiateTaskDeleteAction": {
        "actionType": "Event",
        "method": "Event",
        "inputData": {
          "events": [
            {
              "name": "confirmTaskDeleteEvent",
              "condition": "( data.deletedTaskObjects && data.deletedTaskObjects.length === 1 && data.deletedTaskObjects[0] )"
            },
            {
              "name": "confirmMultipleTaskDeleteEvent",
              "condition": "(data.deletedTaskObjects && data.deletedTaskObjects.length > 1)"
            }
          ]
        }
      },
      "performTaskDelete": {
        "actionType": "TcSoaService",
        "serviceName": "Core-2006-03-DataManagement",
        "method": "deleteObjects",
        "deps": "js/Awp0InboxUtils",
        "inputData": {
          "objects": {
            "$adapt": "{{data.deletedTaskObjects}}"
          }
        },
        "outputData": {
          "deleteObjectsPartialErrors": "partialErrors",
          "objectsFailedToDelete": "partialErrors.length"
        },
        "events": {
          "success": [
            {
              "name": "primaryWorkarea.reset"
            },
            {
              "name": "cdm.relatedModified",
              "condition": "ctx.locationContext['ActiveWorkspace:Location'] !== 'com.siemens.splm.client.inbox.tasksLocation' && ctx.xrtSummaryContextObject !== undefined && ( ctx.xrtPageContext.secondaryXrtPageID ==='tc_xrt_Workflow' || ctx.xrtPageContext.primaryXrtPageID === 'tc_xrt_Workflow' ) ",
              "eventData": {
                "refreshLocationFlag": true,
                "relatedModified": [
                  "{{ctx.xrtSummaryContextObject}}"
                ]
              }
            }
          ]
        },
        "actionMessages": {
          "failure": [
            {
              "condition": "(data.deletedTaskObjects && data.deletedTaskObjects.length === 1)",
              "message": "deleteTaskObjectsSingleFailureMessage"
            },
            {
              "condition": "(data.deletedTaskObjects && data.deletedTaskObjects.length > 1)",
              "message": "deleteTaskObjectsMultipleFailureMessage"
            }
          ]
        }
      },
      "openAddRemoteInboxPanel": {
        "actionType": "JSFunction",
        "method": "activateCommandPanel",
        "deps": "js/commandPanel.service",
        "inputData": {
          "commandId": "Awp0AddRemoteInbox",
          "location": "aw_toolsAndInfo",
          "context": "{{commandContext.dataProvider.viewModelCollection.loadedVMObjects}}"
        }
      },
      "removeRemoteInboxSubscription": {
        "actionType": "TcSoaService",
        "serviceName": "Core-2006-03-DataManagement",
        "method": "getProperties",
        "inputData": {
          "objects": [
            "{{ctx.locationContext.modelObject}}"
          ],
          "attributes": [
            "remote_inboxes"
          ]
        },
        "policy": {
          "types": [
            {
              "name": "User",
              "properties": [
                {
                  "name": "remote_inboxes",
                  "modifiers": [
                    {
                      "name": "withProperties",
                      "Value": "true"
                    }
                  ]
                }
              ]
            }
          ]
        },
        "events": {
          "success": [
            {
              "name": "remoteInbox.removeSubscribedInboxes"
            }
          ]
        }
      },
      "removeSubscribedInboxesInternal": {
        "actionType": "TcSoaService",
        "serviceName": "Core-2010-09-DataManagement",
        "method": "setProperties",
        "inputData": {
          "info": "{{function:getSubscribeInboxPropertyInput}}"
        },
        "outputData": {
          "serviceData": ""
        },
        "events": {
          "success": [
            {
              "name": "cdm.relatedModified",
              "eventData": {
                "refreshLocationFlag": false,
                "relatedModified": [
                  "{{ctx.locationContext.modelObject}}"
                ]
              }
            },
            {
              "name": "cutToAwClipboard"
            }
          ]
        },
        "deps": "js/Awp0RemoteInboxService"
      },
      "actionMessages": {
        "failure": [
          {
            "message": "inboxServerError"
          }
        ]
      },
      "openRemoteInboxObject": {
        "actionType": "JSFunction",
        "method": "openRemoteInboxObject",
        "deps": "js/Awp0RemoteInboxService",
        "inputData": {
          "commandContext": "{{commandContext.vmo}}"
        }
      },
      "openContextRemoteInboxObject": {
        "actionType": "JSFunction",
        "method": "openRemoteInboxObject",
        "deps": "js/Awp0RemoteInboxService",
        "inputData": {
          "commandContext": "{{ctx.selected}}"
        }
      },
      "awp0ReplaceMultipleParticipantsCommandAction": {
        "actionType": "JSFunction",
        "method": "validateAndActivateCommandPanel",
        "deps": "js/Awp0ReplaceMultipleParticipantCommandHandler",
        "inputData": {
          "data": "{{data}}",
          "ctx": "{{ctx}}",
          "selections": "{{ctx.mselected}}"
        }
      },
      "expandChildren": {
        "actionType": "JSFunction",
        "method": "expandChildren",
        "deps": "js/Awp0WorkflowViewerGraphService",
        "inputData": {
          "graphModel": "{{ctx.graph.graphModel}}",
          "node": "{{ctx.graph.commandContextItem}}",
          "data": "{{data}}"
        }
      },
      "expandSubProcess": {
        "actionType": "JSFunction",
        "method": "expandSubProcess",
        "deps": "js/Awp0WorkflowViewerGraphService",
        "inputData": {
          "node": "{{ctx.graph.commandContextItem}}",
          "popupData": {
            "declView": "Awp0MySubProcessPopup",
            "options": {
              "reference": "",
              "width": 320,
              "height": 150,
              "isModal": false,
              "placement": "right-start",
              "clickOutsideToClose": true
            }
          }
        }
      },
      "openProcessInViewerCommandAction": {
        "actionType": "Event",
        "method": "Event",
        "inputData": {
          "events": [
            {
              "name": "OpenProcessInViewerEvent",
              "eventData": {
                "handlerId": "OpenProcessInViewer",
                "layoutString": ""
              }
            }
          ]
        }
      },
      "Awp0FromSectionAddCmdAction": {
        "actionType": "Event",
        "method": "Event",
        "inputData": {
          "events": [
            {
              "name": "Awp0FromSectionAddCmdEvent"
            }
          ]
        }
      },
      "Awp0ToSectionAddCmdAction": {
        "actionType": "Event",
        "method": "Event",
        "inputData": {
          "events": [
            {
              "name": "Awp0ToSectionAddCmdEvent"
            }
          ]
        }
      },
      "getSubmitToWorkflowInputs": {
        "actionType": "JSFunctionAsync",
        "method": "getAdaptedObjects",
        "inputData": {
          "sourceObjects": "{{ctx.mselected}}"
        },
        "outputData": {
          "submitWorkflowInput": ""
        },
        "events": {
          "success": [
            {
              "name": "submitWorkflow.adaptedInputs"
            },
            {
              "name": "workflow.collapseFutureTaskTable"
            }
          ]
        },
        "deps": "js/adapterService"
      },
      "getPropsForSubmitToWorkflow": {
        "actionType": "TcSoaService",
        "serviceName": "Core-2006-03-DataManagement",
        "method": "getProperties",
        "inputData": {
          "objects": "{{data.submitWorkflowInput}}",
          "attributes": [
            "owning_site",
            "checked_out_user"
          ]
        },
        "events": {
          "success": [
            {
              "name": "workflow.getSelectedBOTypeName"
            }
          ]
        }
      },
      "getSelectedBOTypeName": {
        "actionType": "JSFunction",
        "method": "getTheBOType",
        "deps": "js/Awp0NewWorkflowProcessCommandHandler",
        "inputData": {
          "selections": "{{ctx.mselected}}",
          "data": "{{data}}"
        },
        "events": {
          "success": [
            {
              "name": "workflow.getTypesFromBO"
            }
          ]
        }
      },
      "getTypeFromBOConstant": {
        "actionType": "TcSoaService",
        "serviceName": "BusinessModeler-2007-06-Constants",
        "method": "getTypeConstantValues",
        "inputData": {
          "keys": "{{data.inputForGetTypeConstantValues}}"
        },
        "outputData": {
          "applicableTypes": "constantValues"
        },
        "events": {
          "success": [
            {
              "name": "workflow.validateForCreatingWorkflowPresenterEvent"
            }
          ]
        }
      },
      "validateForCreatingWorkflowPresenterAction": {
        "actionType": "JSFunction",
        "method": "populateErrorMessage",
        "deps": "js/Awp0NewWorkflowProcessCommandHandler",
        "inputData": {
          "selections": "{{ctx.mselected}}",
          "data": "{{data}}",
          "ctx": "{{ctx}}"
        }
      },
      "Awp0AddParticipantCommandAction": {
        "actionType": "JSFunction",
        "method": "getAdaptedObjects",
        "inputData": {
          "sourceObjects": [
            "{{ctx.selected}}"
          ]
        },
        "outputData": {
          "selectedItemRevisions": ""
        },
        "events": {
          "success": [
            {
              "name": "getDesiredPropertiesforAddParticipants"
            }
          ]
        },
        "deps": "js/adapterService"
      },
      "getItemRevisionObjectForAdd": {
        "actionType": "JSFunction",
        "method": "getItemRevisionObject",
        "deps": "js/Awp0ParticipantService",
        "inputData": {
          "selectedObject": "{{data.selectedItemRevisions[0]}}",
          "data": "{{data}}"
        },
        "events": {
          "success": [
            {
              "name": "addParticipants"
            }
          ]
        }
      },
      "Awp0AddTaskParticipantCommandAction": {
        "actionType": "TcSoaService",
        "serviceName": "Core-2006-03-DataManagement",
        "method": "getProperties",
        "inputData": {
          "objects": [
            "{{ctx.selected}}"
          ],
          "attributes": [
            "fnd0ParentTask",
            "parent_process"
          ]
        },
        "events": {
          "success": [
            {
              "name": "addParticipantsTasks"
            }
          ]
        },
        "policy": {
          "types": [
            {
              "name": "EPMTask",
              "properties": [
                {
                  "name": "parent_process"
                }
              ]
            },
            {
              "name": "Signoff",
              "properties": [
                {
                  "name": "fnd0ParentTask",
                  "modifiers": [
                    {
                      "name": "withProperties",
                      "Value": "true"
                    }
                  ]
                }
              ]
            }
          ]
        }
      },
      "addParticipants": {
        "actionType": "JSFunction",
        "method": "addParticipants",
        "deps": "js/Awp0ParticipantService",
        "inputData": {
          "selectedItemRevision": "{{data.selectedItemRevisions[0]}}",
          "commandContext": "{{commandContext}}",
          "ctx": "{{ctx}}"
        }
      },
      "addParticipantsTasks": {
        "actionType": "JSFunction",
        "method": "addParticipants",
        "deps": "js/Awp0ParticipantService",
        "inputData": {
          "selectedItemRevision": "{{ctx.selected}}",
          "commandContext": "{{commandContext}}",
          "ctx": "{{ctx}}"
        }
      },
      "Awp0ReplaceParticipantCommandAction": {
        "actionType": "JSFunction",
        "method": "getAdaptedObjects",
        "inputData": {
          "sourceObjects": [
            "{{ctx.pselected}}"
          ]
        },
        "outputData": {
          "selectedItemRevisions": ""
        },
        "events": {
          "success": [
            {
              "name": "replaceParticipantsInternal"
            }
          ]
        },
        "deps": "js/adapterService"
      },
      "Awp0ReplaceTaskParticipantCommandAction": {
        "actionType": "JSFunction",
        "method": "getAdaptedObjects",
        "inputData": {
          "sourceObjects": [
            "{{ctx.pselected}}"
          ]
        },
        "outputData": {
          "selectedItemRevisions": ""
        },
        "events": {
          "success": [
            {
              "name": "openReplaceParticipantPanel"
            }
          ]
        },
        "deps": "js/adapterService"
      },
      "replaceParticipantsInternal": {
        "actionType": "JSFunction",
        "method": "canRemoveOrReplaceParticipant",
        "inputData": {
          "selectedItemRevision": "{{data.selectedItemRevisions[0]}}",
          "selectedParticipants": [
            "{{ctx.selected}}"
          ],
          "isReplaceCase": true
        },
        "events": {
          "success": [
            {
              "name": "openReplaceParticipantPanel"
            }
          ]
        },
        "deps": "js/Awp0ParticipantService",
        "actionMessages": {
          "failure": [
            {
              "message": "serverError"
            }
          ]
        }
      },
      "openReplaceParticipantPanel": {
        "actionType": "JSFunction",
        "method": "replaceParticipants",
        "deps": "js/Awp0ParticipantService",
        "inputData": {
          "selectedItemRevision": "{{data.selectedItemRevisions[0]}}",
          "commandContext": "{{commandContext}}",
          "selParticipantObject": "{{ctx.selected}}",
          "ctx": "{{ctx}}"
        }
      },
      "Awp0RemoveParticipantCommandAction": {
        "actionType": "JSFunction",
        "method": "getAdaptedObjects",
        "inputData": {
          "sourceObjects": [
            "{{ctx.pselected}}"
          ]
        },
        "outputData": {
          "selectedObject": ""
        },
        "events": {
          "success": [
            {
              "condition": "data.selectedObject[0] && data.selectedObject[0].modelType.typeHierarchyArray.indexOf( 'ItemRevision' ) > -1",
              "name": "isOktoRemoveItemRevisionParticipant"
            },
            {
              "condition": "data.selectedObject[0] && ( data.selectedObject[0].modelType.typeHierarchyArray.indexOf( 'EPMTask' ) > -1 || data.selectedObject[0].modelType.typeHierarchyArray.indexOf( 'Signoff' ) > -1 )",
              "name": "removeTaskParticipants"
            }
          ]
        },
        "deps": "js/adapterService"
      },
      "isOktoRemoveItemRevisionParticipant": {
        "actionType": "JSFunction",
        "method": "canRemoveOrReplaceParticipant",
        "inputData": {
          "selectedItemRevision": "{{data.selectedObject[0]}}",
          "selectedParticipants": "{{ctx.mselected}}"
        },
        "events": {
          "success": [
            {
              "name": "removeParticipants"
            }
          ]
        },
        "deps": "js/Awp0ParticipantService",
        "actionMessages": {
          "failure": [
            {
              "message": "serverError"
            }
          ]
        }
      },
      "removeParticipants": {
        "actionType": "TcSoaService",
        "serviceName": "Core-2008-06-DataManagement",
        "method": "removeParticipants",
        "inputData": {
          "participants": [
            {
              "itemRev": "{{data.selectedObject[0]}}",
              "participant": "{{ctx.mselected}}"
            }
          ]
        },
        "outputData": {
          "isParticipantPageRefresh": "{{function:getRemoveParticipantPageRefreshNeeded}}"
        },
        "deps": "js/Awp0ParticipantService",
        "events": {
          "success": [
            {
              "name": "cdm.relatedModified",
              "condition": "!ctx.participantCtx.isParticipantTable || ctx.xrtPageContext.secondaryXrtPageID === 'tc_xrt_Participants' || ctx.xrtPageContext.secondaryXrtPageID === 'tc_xrt_Participants'",
              "eventData": {
                "refreshLocationFlag": "{{data.isParticipantPageRefresh}}",
                "relatedModified": [
                  "{{data.selectedObject[0]}}"
                ]
              }
            },
            {
              "name": "cdm.relatedModified",
              "condition": "ctx.participantCtx.isParticipantTable",
              "eventData": {
                "relatedModified": [
                  "{{data.selectedObject[0]}}"
                ]
              }
            },
            {
              "name": "workflow.resetParticipantTable",
              "excludeLocalDataCtx": true,
              "condition": "ctx.participantCtx.isParticipantTable"
            }
          ]
        },
        "policy": {
          "types": [
            {
              "name": "ItemRevision",
              "properties": [
                {
                  "name": "awp0RequiredParticipants"
                }
              ]
            }
          ]
        },
        "actionMessages": {
          "failure": [
            {
              "message": "serverError"
            }
          ]
        }
      },
      "removeTaskParticipants": {
        "actionType": "TcSoaService",
        "serviceName": "Core-2006-03-DataManagement",
        "method": "getProperties",
        "inputData": {
          "objects": [
            "{{ctx.pselected}}"
          ],
          "attributes": [
            "parent_process",
            "fnd0StoreParticipantsOnJob",
            "root_target_attachments",
            "fnd0ParentTask"
          ]
        },
        "events": {
          "success": [
            {
              "name": "removeTaskParticipantsInternal"
            }
          ]
        },
        "policy": {
          "types": [
            {
              "name": "EPMTask",
              "properties": [
                {
                  "name": "parent_process"
                },
                {
                  "name": "root_target_attachments"
                },
                {
                  "name": "fnd0StoreParticipantsOnJob"
                }
              ]
            },
            {
              "name": "Signoff",
              "properties": [
                {
                  "name": "fnd0ParentTask",
                  "modifiers": [
                    {
                      "name": "withProperties",
                      "Value": "true"
                    }
                  ]
                },
                {
                  "name": "fnd0StoreParticipantsOnJob"
                },
                {
                  "name": "root_target_attachments"
                }
              ]
            }
          ]
        },
        "actionMessages": {
          "failure": [
            {
              "message": "serverError"
            }
          ]
        }
      },
      "removeTaskParticipantsInternal": {
        "actionType": "TcSoaService",
        "serviceName": "Participant-2018-11-Participant",
        "method": "removeParticipants",
        "inputData": {
          "input": [
            {
              "clientId": "",
              "wso": "{{function:getWsoList}}",
              "participants": "{{function:getTaskParticipantsToremove}}",
              "additionalData": {
                "SampleStringKey": []
              }
            }
          ]
        },
        "events": {
          "success": [
            {
              "name": "cdm.relatedModified",
              "eventData": {
                "refreshLocationFlag": true,
                "relations": "",
                "relatedModified": [
                  "{{ctx.pselected}}"
                ]
              }
            }
          ]
        },
        "deps": "js/Awp0ReplaceParticipant",
        "actionMessages": {
          "failure": [
            {
              "message": "serverError"
            }
          ]
        }
      },
      "awp0ProcessAssignmentAction": {
        "actionType": "JSFunction",
        "method": "openUserPanel",
        "inputData": {
          "value": "{{commandContext}}",
          "data": "{{data}}",
          "ctx": "{{ctx}}"
        },
        "events": {
          "success": [
            {
              "name": "awPanel.navigate",
              "eventData": {
                "destPanelId": "Users",
                "title": "{{i18n.Add_Title}} {{commandContext.typeDisplayName}}",
                "supportGoBack": true,
                "recreatePanel": true
              }
            }
          ]
        },
        "deps": "js/Awp0WorkflowAssignmentPanelService"
      },
      "removeParticipantAssignments": {
        "actionType": "JSFunction",
        "method": "removeParticipantAssignments",
        "inputData": {
          "data": "{{data}}",
          "commandContext": "{{commandContext}}"
        },
        "deps": "js/Awp0ProcessAssignment"
      },
      "awp0AddTasksAssignmentAction": {
        "actionType": "JSFunction",
        "method": "openUserPanel",
        "inputData": {
          "value": "{{commandContext}}",
          "data": "{{data}}",
          "ctx": "{{ctx}}"
        },
        "events": {
          "success": [
            {
              "name": "awPanel.navigate",
              "eventData": {
                "destPanelId": "Users",
                "title": "{{i18n.Add_Title}}",
                "supportGoBack": true,
                "recreatePanel": true
              }
            }
          ]
        },
        "deps": "js/Awp0WorkflowAssignmentPanelService"
      },
      "awp0RemoveTaskAssignmentAction": {
        "actionType": "JSFunction",
        "method": "removeUsersTaskAssignment",
        "inputData": {
          "commandContext": "{{commandContext}}",
          "selected": "{{commandContext.selectedObjects}}"
        },
        "deps": "js/Awp0WorkflowAssignmentPanelService"
      },
      "getDesiredPropertiesforAddParticipants": {
        "actionType": "TcSoaService",
        "serviceName": "Core-2006-03-DataManagement",
        "method": "getProperties",
        "inputData": {
          "objects": [
            "{{ctx.selected}}"
          ],
          "attributes": [
            "root_target_attachments"
          ]
        },
        "policy": {
          "types": [
            {
              "name": "EPMTask",
              "properties": [
                {
                  "name": "root_target_attachments"
                }
              ]
            }
          ]
        },
        "events": {
          "success": [
            {
              "name": "getItemRevisionObjectForAdd"
            }
          ]
        }
      },
      "setWorkflowViewerActiveLayoutAsTopToBottom": {
        "actionType": "JSFunction",
        "method": "enableAutoLayout",
        "deps": "js/Awp0WorkflowViewerAutoLayoutHandler",
        "inputData": {
          "ctx": "{{ctx}}",
          "layoutOption": "GcTopToBottomLayout"
        },
        "events": {
          "success": [
            {
              "name": "workflowViewer.AutoLayoutToggled",
              "condition": "!ctx.workflowViewerCtx.diagram.isSwitchingBetweenAutoLayout"
            },
            {
              "name": "workflowViewer.AutoLayoutAlreadyToggled",
              "condition": "ctx.workflowViewerCtx.diagram.isSwitchingBetweenAutoLayout"
            }
          ]
        }
      },
      "setWorkflowViewerActiveLayoutAsRightToLeft": {
        "actionType": "JSFunction",
        "method": "enableAutoLayout",
        "deps": "js/Awp0WorkflowViewerAutoLayoutHandler",
        "inputData": {
          "ctx": "{{ctx}}",
          "layoutOption": "GcRightToLeftLayout"
        },
        "events": {
          "success": [
            {
              "name": "workflowViewer.AutoLayoutToggled",
              "condition": "!ctx.workflowViewerCtx.diagram.isSwitchingBetweenAutoLayout"
            },
            {
              "name": "workflowViewer.AutoLayoutAlreadyToggled",
              "condition": "ctx.workflowViewerCtx.diagram.isSwitchingBetweenAutoLayout"
            }
          ]
        }
      },
      "setWorkflowViewerActiveLayoutAsLeftToRight": {
        "actionType": "JSFunction",
        "method": "enableAutoLayout",
        "deps": "js/Awp0WorkflowViewerAutoLayoutHandler",
        "inputData": {
          "ctx": "{{ctx}}",
          "layoutOption": "GcLeftToRightLayout"
        },
        "events": {
          "success": [
            {
              "name": "workflowViewer.AutoLayoutToggled",
              "condition": "!ctx.workflowViewerCtx.diagram.isSwitchingBetweenAutoLayout"
            },
            {
              "name": "workflowViewer.AutoLayoutAlreadyToggled",
              "condition": "ctx.workflowViewerCtx.diagram.isSwitchingBetweenAutoLayout"
            }
          ]
        }
      },
      "setWorkflowViewerActiveLayoutAsFixed": {
        "actionType": "JSFunction",
        "method": "disableAutoLayout",
        "deps": "js/Awp0WorkflowViewerAutoLayoutHandler",
        "inputData": {
          "ctx": "{{ctx}}",
          "layoutOption": "FixedLayout"
        },
        "events": {
          "success": [
            {
              "name": "workflowViewer.AutoLayoutToggled",
              "condition": "!ctx.workflowViewerCtx.diagram.isSwitchingBetweenAutoLayout"
            },
            {
              "name": "workflowViewer.AutoLayoutAlreadyToggled",
              "condition": "ctx.workflowViewerCtx.diagram.isSwitchingBetweenAutoLayout"
            }
          ]
        }
      },
      "applySelectedAutoLayoutOnViewer": {
        "actionType": "JSFunction",
        "method": "setActiveLayout",
        "deps": "js/awGraphService",
        "inputData": {
          "graphModel": "{{ctx.graph.graphModel}}",
          "layoutOption": "{{ctx.workflowViewerCtx.diagram.layoutOption}}"
        }
      },
      "saveEditsInboxPWA": {
        "actionType": "JSFunctionAsync",
        "method": "saveEdits",
        "deps": "js/editHandlerService",
        "inputData": {
          "editContext": "TABLE_CONTEXT"
        },
        "events": {
          "success": [
            {
              "name": "updateURLParam"
            }
          ]
        }
      },
      "isDirtyInboxOnCancelEditsPWA": {
        "actionType": "JSFunction",
        "method": "setActiveEditHandlerContext",
        "deps": "js/editHandlerService",
        "inputData": {
          "editContext": "TABLE_CONTEXT"
        },
        "events": {
          "success": [
            {
              "name": "inboxPWA.cancelEdits"
            }
          ]
        }
      },
      "inboxPWACancelEdits": {
        "actionType": "JSFunctionAsync",
        "method": "isDirty",
        "outputData": {
          "dirty": "isDirty"
        },
        "events": {
          "success": [
            {
              "condition": "!data.dirty",
              "name": "cancelEdits"
            },
            {
              "condition": "data.dirty",
              "name": "cancelEditsPreferenceCheck"
            }
          ]
        },
        "deps": "js/editHandlerService"
      },
      "inboxPWASaveEditsAndReset": {
        "actionType": "JSFunctionAsync",
        "method": "saveEdits",
        "deps": "js/editHandlerService",
        "inputData": {
          "editContext": "TABLE_CONTEXT"
        },
        "events": {
          "success": [
            {
              "name": "updateURLParam"
            },
            {
              "name": "primaryWorkarea.reset"
            }
          ]
        }
      },
      "createWorkflowSubProcess": {
        "actionType": "TcSoaService",
        "serviceName": "Core-2006-03-DataManagement",
        "method": "getProperties",
        "inputData": {
          "objects": [
            "{{ctx.selected}}"
          ],
          "attributes": [
            "parent_process",
            "fnd0StoreParticipantsOnJob",
            "root_target_attachments",
            "fnd0ParentTask"
          ]
        },
        "events": {
          "success": [
            {
              "name": "workflow.collapseFutureTaskTable"
            },
            {
              "name": "workflow.openSubProcessPanel"
            }
          ]
        },
        "policy": {
          "types": [
            {
              "name": "EPMTask",
              "properties": [
                {
                  "name": "parent_process"
                },
                {
                  "name": "root_target_attachments"
                },
                {
                  "name": "fnd0StoreParticipantsOnJob"
                }
              ]
            },
            {
              "name": "Signoff",
              "properties": [
                {
                  "name": "fnd0ParentTask",
                  "modifiers": [
                    {
                      "name": "withProperties",
                      "Value": "true"
                    }
                  ]
                },
                {
                  "name": "fnd0StoreParticipantsOnJob"
                },
                {
                  "name": "root_target_attachments"
                }
              ]
            }
          ]
        }
      },
      "createWorkflowSubProcessInternal": {
        "actionType": "JSFunction",
        "method": "openCreateSubProcessCommandPanel",
        "deps": "js/Awp0NewWorkflowProcessCommandHandler",
        "inputData": {
          "selection": "{{ctx.selected}}",
          "data": "{{data}}",
          "ctx": "{{ctx}}"
        }
      },
      "removeWorkflowProcessTarget": {
        "actionType": "JSFunction",
        "method": "removeWorkflowProcessTargets",
        "deps": "js/Awp0NewWorkflowProcess",
        "inputData": {
          "context": "{{commandContext}}",
          "removeTargets": "{{commandContext.selectedObjects}}",
          "ctx": "{{ctx}}",
          "isRemoveAllCase": false,
          "targetReference": "Target"
        }
      },
      "removeWorkflowProcessReference": {
        "actionType": "JSFunction",
        "method": "removeWorkflowProcessTargets",
        "deps": "js/Awp0NewWorkflowProcess",
        "inputData": {
          "context": "{{commandContext}}",
          "removeTargets": "{{commandContext.selectedObjects}}",
          "ctx": "{{ctx}}",
          "isRemoveAllCase": false,
          "targetReference": "Reference"
        }
      },
      "closeAddTargetPanel": {
        "actionType": "JSFunction",
        "method": "closeAddPanel",
        "deps": "js/Awp0ReferenceInSubmitToWorkflow",
        "inputData": {
          "data": "{{data}}",
          "ctx": "{{ctx}}",
          "targetReference": "Target"
        }
      },
      "closeAddReferencePanel": {
        "actionType": "JSFunction",
        "method": "closeAddPanel",
        "deps": "js/Awp0ReferenceInSubmitToWorkflow",
        "inputData": {
          "data": "{{data}}",
          "ctx": "{{ctx}}",
          "targetReference": "Reference"
        }
      },
      "addWorkflowProcessTargets": {
        "actionType": "Event",
        "method": "Event",
        "inputData": {
          "events": [
            {
              "name": "workflow.loadSubmittableObjectTypes",
              "condition": "!ctx.submittableObjectTypes || ctx.submittableObjectTypes === ''"
            },
            {
              "name": "workflow.openProcessTargetPanel",
              "condition": "ctx.submittableObjectTypes && ctx.submittableObjectTypes !== ''"
            }
          ]
        }
      },
      "openAddTargetPanel": {
        "actionType": "Event",
        "method": "Event",
        "inputData": {
          "events": [
            {
              "condition": "!ctx.openAddTargetPanel",
              "name": "workflow.loadSubmittableObjectTypes"
            },
            {
              "condition": "ctx.openAddTargetPanel",
              "name": "closeAddTargetPanel"
            }
          ]
        }
      },
      "openAddReferencePanel": {
        "actionType": "Event",
        "method": "Event",
        "inputData": {
          "events": [
            {
              "name": "workflow.openAddReferencePanel",
              "condition": "!ctx.openAddReferencePanel"
            },
            {
              "name": "workflow.closeAddReferencePanel",
              "condition": "ctx.openAddReferencePanel"
            }
          ]
        }
      },
      "loadSubmittableObjectTypes": {
        "actionType": "TcSoaService",
        "serviceName": "Internal-AWS2-2019-06-Finder",
        "method": "performSearchViewModel4",
        "inputData": {
          "searchInput": {
            "maxToLoad": 1,
            "maxToReturn": 1,
            "providerName": "Awp0ResourceProvider",
            "searchCriteria": {
              "searchString": "",
              "resourceProviderContentType": "SubmittableWSOTypes"
            },
            "cursor": {
              "startIndex": 0
            },
            "attributesToInflate": [
              "fnd0InternalName"
            ],
            "searchFilterFieldSortType": "Alphabetical",
            "searchFilterMap6": {},
            "searchSortCriteria": []
          }
        },
        "policy": {
          "types": [
            {
              "name": "ImanType",
              "properties": [
                {
                  "name": "fnd0InternalName"
                },
                {
                  "name": "object_string"
                }
              ]
            }
          ]
        },
        "outputData": {
          "ctx.submittableObjectTypes": "searchFilterCategories[0].internalName"
        },
        "deps": "js/Awp0NewWorkflowProcess",
        "events": {
          "success": [
            {
              "name": "workflow.openProcessTargetPanel"
            },
            {
              "condition": "!ctx.openAddTargetPanel",
              "name": "openAddTarget"
            }
          ]
        }
      },
      "openProcessAttachmentPanel": {
        "actionType": "Event",
        "method": "Event",
        "inputData": {
          "events": [
            {
              "name": "awPanel.navigate",
              "eventData": {
                "destPanelId": "Awp0AddWorkflowProcessAttachmentSub",
                "title": "{{i18n.addProcessTargets}}",
                "recreatePanel": true,
                "isolateMode": true,
                "supportGoBack": true
              }
            }
          ]
        }
      },
      "selectAllWorkflowTargetAction": {
        "actionType": "JSFunction",
        "method": "selectAll",
        "deps": "js/dataProviderFactory",
        "inputData": {
          "dataProvider": "{{commandContext}}"
        }
      },
      "selectNoneWorkflowAction": {
        "actionType": "JSFunction",
        "method": "selectNone",
        "deps": "js/dataProviderFactory",
        "inputData": {
          "dataProvider": "{{commandContext}}"
        }
      },
      "addUsersTaskAssignmentAction": {
        "actionType": "JSFunction",
        "method": "openUserPanel",
        "inputData": {
          "value": "{{commandContext}}",
          "data": "{{data}}",
          "ctx": "{{ctx}}"
        },
        "events": {
          "success": [
            {
              "name": "awPanel.navigate",
              "eventData": {
                "destPanelId": "Users",
                "title": "{{i18n.Add_Title}}",
                "supportGoBack": true,
                "recreatePanel": true
              }
            }
          ]
        },
        "deps": "js/Awp0WorkflowAssignmentPanelService"
      },
      "addTaskParticipantAssignmentAfterSubmit": {
        "actionType": "JSFunction",
        "method": "openUserPanel",
        "inputData": {
          "value": "{{commandContext}}",
          "data": "{{data}}",
          "ctx": "{{ctx}}"
        },
        "events": {
          "success": [
            {
              "name": "awPanel.navigate",
              "eventData": {
                "destPanelId": "Users",
                "title": "{{i18n.Add_Title}}",
                "supportGoBack": true,
                "recreatePanel": true
              }
            }
          ]
        },
        "deps": "js/Awp0WorkflowAssignmentPanelService"
      },
      "removeTaskParticipantAssignemntAfterSubmit": {
        "actionType": "JSFunction",
        "method": "removeUsersTaskAssignment",
        "inputData": {
          "commandContext": "{{commandContext}}",
          "selected": "{{commandContext.selectedObjects}}"
        },
        "deps": "js/Awp0WorkflowAssignmentPanelService"
      },
      "removeTaskAssignemntAfterSubmit": {
        "actionType": "JSFunction",
        "method": "removeUsersTaskAssignment",
        "inputData": {
          "commandContext": "{{commandContext}}",
          "selected": "{{commandContext.selectedObjects}}"
        },
        "deps": "js/Awp0WorkflowAssignmentPanelService"
      },
      "startEditTaskAssignmentAction": {
        "actionType": "JSFunction",
        "method": "enableTaskAssignmentEdits",
        "inputData": {
          "taskAssignmentDataObject": "{{ctx.taskAssignmentCtx}}"
        },
        "deps": "js/Awp0WorkflowAssignmentService"
      },
      "removeTaskAssignment": {
        "actionType": "JSFunction",
        "method": "removeTaskAssignment",
        "inputData": {
          "context": "{{ctx.taskAssignmentCtx.treeDataProvider.selectedObjects[0]}}",
          "ctx": "{{ctx}}",
          "taskAssignmentDataObject": "{{ctx.taskAssignmentCtx}}"
        },
        "deps": "js/Awp0WorkflowAssignmentService"
      },
      "replaceTaskAssignments": {
        "actionType": "JSFunction",
        "method": "activateCommandPanel",
        "deps": "js/commandPanel.service",
        "inputData": {
          "commandId": "Awp0ReplaceTaskAssignment",
          "location": "aw_toolsAndInfo"
        }
      },
      "saveTaskAssignmentAction": {
        "actionType": "JSFunction",
        "method": "saveEdits",
        "inputData": {},
        "deps": "js/Awp0WorkflowAssignmentEditService",
        "events": {
          "success": [
            {
              "condition": "ctx.ViewModeContext.ViewModeContext !== 'TableSummaryView' && ( ctx.xrtPageContext.secondaryXrtPageID ==='tc_xrt_Assignments' || ctx.xrtPageContext.primaryXrtPageID === 'tc_xrt_Assignments' )",
              "name": "primaryWorkarea.reset"
            },
            {
              "condition": "ctx.ViewModeContext.ViewModeContext === 'TableSummaryView' && ctx.locationContext['ActiveWorkspace:Location'] === 'com.siemens.splm.client.inbox.tasksLocation' && ( ctx.xrtPageContext.secondaryXrtPageID ==='tc_xrt_Assignments' || ctx.xrtPageContext.primaryXrtPageID === 'tc_xrt_Assignments') ",
              "name": "inboxPWA.savelEditsAndReset"
            },
            {
              "name": "cdm.relatedModified",
              "condition": "ctx.xrtSummaryContextObject !== undefined && ( ctx.xrtPageContext.secondaryXrtPageID ==='tc_xrt_Workflow' || ctx.xrtPageContext.primaryXrtPageID === 'tc_xrt_Workflow' ) ",
              "eventData": {
                "refreshLocationFlag": true,
                "relatedModified": [
                  "{{ctx.xrtSummaryContextObject}}"
                ]
              }
            },
            {
              "condition": "ctx.taskAssignmentCtx.isNarrowViewMode",
              "name": "narrowSummaryLocationTitleClickEvent"
            }
          ]
        }
      },
      "cancelTaskAssignmentAction": {
        "actionType": "JSFunction",
        "method": "cancelTaskAssignments",
        "inputData": {
          "taskAssignmentCtx": "{{ctx.taskAssignmentCtx}}"
        },
        "deps": "js/Awp0WorkflowAssignmentService",
        "events": {
          "success": [
            {
              "name": "workflow.cancelTaskAssignments"
            }
          ]
        }
      },
      "workflowPopupPanelCloseAction": {
        "actionType": "Event",
        "method": "Event",
        "inputData": {
          "events": [
            {
              "name": "workflow.closePopupPanel"
            }
          ]
        }
      },
      "awp0PasteUsersAssignmentAction": {
        "actionType": "JSFunction",
        "method": "addUsersOnPanel",
        "inputData": {
          "selectedObjects": "{{ctx.taskAssignmentCtx.panelContext.selectedObjects}}",
          "commandContext": "{{commandContext}}"
        },
        "deps": "js/Awp0WorkflowAssignmentPanelService"
      },
      "assignTaskAction": {
        "actionType": "JSFunction",
        "method": "activateCommandPanel",
        "deps": "js/commandPanel.service",
        "inputData": {
          "commandId": "Awp0TaskAssignmentCommandPanel",
          "location": "aw_toolsAndInfo",
          "panelContext": "{{ctx.taskAssignmentCtx.panelContext}}"
        }
      },
      "workflowPanelSetPin": {
        "actionType": "Event",
        "method": "Event",
        "inputData": {
          "events": [
            {
              "name": "workflow.panelSetPin"
            }
          ]
        }
      },
      "workflowPanelSetUnPin": {
        "actionType": "Event",
        "method": "Event",
        "inputData": {
          "events": [
            {
              "name": "workflow.panelSetUnPin"
            }
          ]
        }
      },
      "openTaskAssignmentPanelAction": {
        "actionType": "Event",
        "method": "Event",
        "inputData": {
          "events": [
            {
              "name": "workflow.openTaskAssignmentPanel"
            }
          ]
        }
      },
      "awp0NewWorkflowProcessTemplateOpenPanel": {
        "actionType": "JSFunction",
        "method": "activateCommandPanel",
        "deps": "js/commandPanel.service",
        "inputData": {
          "commandId": "Awp0NewWorkflowProcessTemplate",
          "location": "aw_toolsAndInfo"
        }
      },
      "Awp0RuleHandlerHelpCommandAction": {
        "actionType": "JSFunction",
        "method": "navigateToHelpLink",
        "deps": "js/Awp0WorkflowDesignerUtils",
        "inputData": {
          "ctx": "{{ctx}}",
          "handlerType": "Rule"
        }
      },
      "Awp0ActionHandlerHelpCommandAction": {
        "actionType": "JSFunction",
        "method": "navigateToHelpLink",
        "deps": "js/Awp0WorkflowDesignerUtils",
        "inputData": {
          "ctx": "{{ctx}}",
          "handlerType": "Action"
        }
      },
      "removeProcessTemplateAction": {
        "actionType": "Event",
        "method": "Event",
        "inputData": {
          "events": [
            {
              "name": "confirmTemplateDeleteSummaryVisibleEvent",
              "condition": "ctx.xrtSummaryContextObject"
            },
            {
              "name": "confirmTemplateDeleteSummaryHiddenEvent",
              "condition": "!ctx.xrtSummaryContextObject && ctx.selected"
            }
          ]
        }
      },
      "startEditTemplateAction": {
        "actionType": "Event",
        "method": "Event",
        "inputData": {
          "events": [
            {
              "name": "confirmTemplateStartEditSummaryVisibleEvent",
              "condition": "ctx.xrtSummaryContextObject && ctx.xrtSummaryContextObject.props.stage.dbValues[0] === '2'"
            },
            {
              "name": "createTemplateSummaryVisibleEvent",
              "condition": "ctx.xrtSummaryContextObject && ctx.xrtSummaryContextObject.props.stage.dbValues[0] === '1'"
            },
            {
              "name": "confirmTemplateStartEditSummaryHiddenEvent",
              "condition": "!ctx.xrtSummaryContextObject && ctx.selected.props.stage.dbValues[0] === '2'"
            },
            {
              "name": "createTemplateSummaryHiddenEvent",
              "condition": "!ctx.xrtSummaryContextObject && ctx.selected.props.stage.dbValues[0] === '1'"
            }
          ]
        }
      },
      "deleteTemplateSummaryVisibleAction": {
        "actionType": "TcSoaService",
        "serviceName": "Core-2006-03-DataManagement",
        "method": "deleteObjects",
        "inputData": {
          "objects": [
            "{{ctx.xrtSummaryContextObject}}"
          ]
        },
        "events": {
          "success": [
            {
              "name": "primaryWorkarea.reset"
            }
          ]
        },
        "actionMessages": {
          "failure": [
            {
              "message": "deleteTemplateSummaryVisibleActionFailure"
            }
          ]
        }
      },
      "deleteTemplateSummaryHiddenAction": {
        "actionType": "TcSoaService",
        "serviceName": "Core-2006-03-DataManagement",
        "method": "deleteObjects",
        "inputData": {
          "objects": [
            "{{ctx.selected}}"
          ]
        },
        "events": {
          "success": [
            {
              "name": "primaryWorkarea.reset"
            }
          ]
        },
        "actionMessages": {
          "failure": [
            {
              "message": "deleteTemplateSummaryVisibleActionFailure"
            }
          ]
        }
      },
      "importWorkflowTemplate": {
        "actionType": "JSFunction",
        "method": "activateCommandPanel",
        "deps": "js/commandPanel.service",
        "inputData": {
          "commandId": "Awp0ImportWorkflowTemplate",
          "location": "aw_toolsAndInfo"
        }
      },
      "exportWorkflowTemplate": {
        "actionType": "JSFunction",
        "method": "activateCommandPanel",
        "deps": "js/commandPanel.service",
        "inputData": {
          "commandId": "Awp0ExportWorkflowTemplate",
          "location": "aw_toolsAndInfo"
        }
      },
      "expandTemplateChildren": {
        "actionType": "JSFunction",
        "method": "expandChildren",
        "deps": "js/Awp0WorkflowDesignerGraphService",
        "inputData": {
          "graphModel": "{{ctx.graph.graphModel}}",
          "node": "{{ctx.graph.commandContextItem}}",
          "data": "{{data}}"
        }
      },
      "activateWorkflowDesignerGridSettingsPanel": {
        "actionType": "JSFunction",
        "method": "activateCommandPanel",
        "deps": "js/commandPanel.service",
        "inputData": {
          "commandId": "Awp0WorkflowGraphGridSettings",
          "location": "aw_toolsAndInfo"
        }
      },
      "awp0TemplateFiltersCommandAction": {
        "actionType": "JSFunction",
        "method": "activateCommandPanel",
        "deps": "js/commandPanel.service",
        "inputData": {
          "commandId": "Awp0TemplateFilters",
          "location": "aw_navigation"
        }
      },
      "obsoleteAndCreateTemplateSummaryVisibleAction": {
        "actionType": "TcSoaService",
        "serviceName": "Workflow-2019-06-Workflow",
        "method": "createOrUpdateTemplate",
        "inputData": {
          "input": [
            {
              "clientID": "startEditTemplate",
              "templateToUpdate": "{{ctx.xrtSummaryContextObject.uid}}",
              "additionalData": {
                "modify_task_template": [
                  "false",
                  "false",
                  "false"
                ]
              }
            }
          ]
        },
        "outputData": {
          "editObject": "createdorUpdatedObjects['0'].templateObject"
        },
        "events": {
          "success": [
            {
              "name": "workflowDesigner.startEdit"
            },
            {
              "name": "workflowDesigner.selectEditContext",
              "condition": "ctx.locationContext['ActiveWorkspace:Location'] !== 'com.siemens.splm.clientfx.tcui.xrt.showObjectLocation'"
            },
            {
              "condition": "ctx.locationContext['ActiveWorkspace:Location'] === 'com.siemens.splm.clientfx.tcui.xrt.showObjectLocation'",
              "name": "openNewlyCreatedTemplateEvent"
            }
          ]
        }
      },
      "obsoleteAndCreateTemplateSummaryHiddenAction": {
        "actionType": "TcSoaService",
        "serviceName": "Workflow-2019-06-Workflow",
        "method": "createOrUpdateTemplate",
        "inputData": {
          "input": [
            {
              "clientID": "startEditTemplate",
              "templateToUpdate": "{{ctx.selected.uid}}",
              "additionalData": {
                "modify_task_template": [
                  "false",
                  "false",
                  "false"
                ]
              }
            }
          ]
        },
        "outputData": {
          "editObject": "createdorUpdatedObjects['0'].templateObject"
        },
        "events": {
          "success": [
            {
              "name": "workflowDesigner.startEdit"
            },
            {
              "name": "workflowDesigner.selectEditContext",
              "condition": "ctx.locationContext['ActiveWorkspace:Location'] !== 'com.siemens.splm.clientfx.tcui.xrt.showObjectLocation'"
            },
            {
              "condition": "ctx.locationContext['ActiveWorkspace:Location'] === 'com.siemens.splm.clientfx.tcui.xrt.showObjectLocation'",
              "name": "openNewlyCreatedTemplateEvent"
            }
          ]
        }
      },
      "createTemplateSummaryVisibleAction": {
        "actionType": "TcSoaService",
        "serviceName": "Workflow-2019-06-Workflow",
        "method": "createOrUpdateTemplate",
        "inputData": {
          "input": [
            {
              "clientID": "startEditTemplate",
              "templateToUpdate": "{{ctx.xrtSummaryContextObject.uid}}",
              "additionalData": {
                "modify_task_template": [
                  "true",
                  "false",
                  "false"
                ]
              }
            }
          ]
        },
        "outputData": {
          "editObject": "createdorUpdatedObjects['0'].templateObject"
        },
        "events": {
          "success": [
            {
              "name": "workflowDesigner.startEdit"
            },
            {
              "name": "workflowDesigner.selectEditContext",
              "condition": "ctx.locationContext['ActiveWorkspace:Location'] !== 'com.siemens.splm.clientfx.tcui.xrt.showObjectLocation'"
            },
            {
              "condition": "ctx.locationContext['ActiveWorkspace:Location'] === 'com.siemens.splm.clientfx.tcui.xrt.showObjectLocation'",
              "name": "openNewlyCreatedTemplateEvent"
            }
          ]
        }
      },
      "createTemplateSummaryHiddenAction": {
        "actionType": "TcSoaService",
        "serviceName": "Workflow-2019-06-Workflow",
        "method": "createOrUpdateTemplate",
        "inputData": {
          "input": [
            {
              "clientID": "startEditTemplate",
              "templateToUpdate": "{{ctx.selected.uid}}",
              "additionalData": {
                "modify_task_template": [
                  "true",
                  "false",
                  "false"
                ]
              }
            }
          ]
        },
        "outputData": {
          "editObject": "createdorUpdatedObjects['0'].templateObject"
        },
        "events": {
          "success": [
            {
              "name": "workflowDesigner.startEdit"
            },
            {
              "name": "workflowDesigner.selectEditContext",
              "condition": "ctx.locationContext['ActiveWorkspace:Location'] !== 'com.siemens.splm.clientfx.tcui.xrt.showObjectLocation'"
            },
            {
              "condition": "ctx.locationContext['ActiveWorkspace:Location'] === 'com.siemens.splm.clientfx.tcui.xrt.showObjectLocation'",
              "name": "openNewlyCreatedTemplateEvent"
            }
          ]
        }
      },
      "cutActionHandlerOpertaion": {
        "actionType": "TcSoaService",
        "serviceName": "Workflow-2019-06-Workflow",
        "method": "createOrUpdateHandler",
        "inputData": {
          "input": [
            {
              "clientID": "cutHandler",
              "taskTemplate": "{{ctx.selected.uid}}",
              "additionalData": {
                "handlerToCut": [
                  "{{ctx.handlerTableData.dataProviders.actionHandlerDataProvider.selectedObjects[0].uid}}"
                ]
              }
            }
          ]
        },
        "outputData": {
          "actionObject": "createdorUpdatedObjects['0'].handlerObject",
          "ctx.handlerToPaste": "createdorUpdatedObjects['0'].handlerObject"
        },
        "events": {
          "success": [
            {
              "name": "refreshActionHandlerTable"
            }
          ]
        },
        "policy": {
          "types": [
            {
              "name": "EPMHandler",
              "properties": [
                {
                  "name": "parent_action_type"
                }
              ]
            }
          ]
        }
      },
      "cutRuleHandlerOpertaion": {
        "actionType": "TcSoaService",
        "serviceName": "Workflow-2019-06-Workflow",
        "method": "createOrUpdateHandler",
        "inputData": {
          "input": [
            {
              "clientID": "cutHandler",
              "taskTemplate": "{{ctx.selected.uid}}",
              "additionalData": {
                "handlerToCut": [
                  "{{ctx.handlerTableData.dataProviders.ruleHandlerDataProvider.selectedObjects[0].uid}}"
                ]
              }
            }
          ]
        },
        "outputData": {
          "actionObject": "createdorUpdatedObjects['0'].handlerObject",
          "ctx.handlerToPaste": "createdorUpdatedObjects['0'].handlerObject"
        },
        "events": {
          "success": [
            {
              "name": "refreshRuleHandlerTable"
            }
          ]
        }
      },
      "copyActionHandlerOpertaion": {
        "actionType": "JSFunction",
        "method": "registerCtx",
        "inputData": {
          "name": "handlerToPaste",
          "value": "{{ctx.handlerTableData.dataProviders.actionHandlerDataProvider.selectedObjects[0]}}"
        },
        "deps": "js/appCtxService",
        "actionMessages": {
          "success": [
            {
              "message": "copyActionHandlerSuccessfulMsg"
            }
          ]
        }
      },
      "copyRuleHandlerOpertaion": {
        "actionType": "JSFunction",
        "method": "registerCtx",
        "inputData": {
          "name": "handlerToPaste",
          "value": "{{ctx.handlerTableData.dataProviders.ruleHandlerDataProvider.selectedObjects[0]}}"
        },
        "deps": "js/appCtxService",
        "actionMessages": {
          "success": [
            {
              "message": "copyRuleHandlerSuccessfulMsg"
            }
          ]
        }
      },
      "pasteHandlerToStarted": {
        "actionType": "TcSoaService",
        "serviceName": "Workflow-2019-06-Workflow",
        "method": "createOrUpdateHandler",
        "inputData": {
          "input": [
            {
              "clientID": "pasteHandler",
              "taskTemplate": "{{ctx.selected.uid}}",
              "action": 2,
              "additionalData": {
                "handlerToPaste": [
                  "{{ctx.handlerToPaste.uid}}"
                ]
              }
            }
          ]
        },
        "events": {
          "success": [
            {
              "name": "refreshActionTable",
              "condition": "ctx.handlerToPaste.type === 'EPMHandler'"
            },
            {
              "name": "refreshRuleTable",
              "condition": "ctx.handlerToPaste.type === 'EPMBRHandler'"
            }
          ]
        },
        "policy": {
          "types": [
            {
              "name": "EPMHandler",
              "properties": [
                {
                  "name": "parent_action_type"
                },
                {
                  "name": "arguments"
                }
              ]
            },
            {
              "name": "EPMBRHandler",
              "properties": [
                {
                  "name": "arguments"
                }
              ]
            }
          ]
        }
      },
      "pasteHandlerToAssigned": {
        "actionType": "TcSoaService",
        "serviceName": "Workflow-2019-06-Workflow",
        "method": "createOrUpdateHandler",
        "inputData": {
          "input": [
            {
              "clientID": "pasteHandler",
              "taskTemplate": "{{ctx.selected.uid}}",
              "action": 1,
              "additionalData": {
                "handlerToPaste": [
                  "{{ctx.handlerToPaste.uid}}"
                ]
              }
            }
          ]
        },
        "events": {
          "success": [
            {
              "name": "refreshActionTable",
              "condition": "ctx.handlerToPaste.type === 'EPMHandler'"
            },
            {
              "name": "refreshRuleTable",
              "condition": "ctx.handlerToPaste.type === 'EPMBRHandler'"
            }
          ]
        },
        "policy": {
          "types": [
            {
              "name": "EPMHandler",
              "properties": [
                {
                  "name": "parent_action_type"
                },
                {
                  "name": "arguments"
                }
              ]
            },
            {
              "name": "EPMBRHandler",
              "properties": [
                {
                  "name": "arguments"
                }
              ]
            }
          ]
        }
      },
      "pasteHandlerToPerformed": {
        "actionType": "TcSoaService",
        "serviceName": "Workflow-2019-06-Workflow",
        "method": "createOrUpdateHandler",
        "inputData": {
          "input": [
            {
              "clientID": "pasteHandler",
              "taskTemplate": "{{ctx.selected.uid}}",
              "action": 100,
              "additionalData": {
                "handlerToPaste": [
                  "{{ctx.handlerToPaste.uid}}"
                ]
              }
            }
          ]
        },
        "events": {
          "success": [
            {
              "name": "refreshActionTable",
              "condition": "ctx.handlerToPaste.type === 'EPMHandler'"
            },
            {
              "name": "refreshRuleTable",
              "condition": "ctx.handlerToPaste.type === 'EPMBRHandler'"
            }
          ]
        },
        "policy": {
          "types": [
            {
              "name": "EPMHandler",
              "properties": [
                {
                  "name": "parent_action_type"
                },
                {
                  "name": "arguments"
                }
              ]
            },
            {
              "name": "EPMBRHandler",
              "properties": [
                {
                  "name": "arguments"
                }
              ]
            }
          ]
        }
      },
      "pasteHandlerToCompleted": {
        "actionType": "TcSoaService",
        "serviceName": "Workflow-2019-06-Workflow",
        "method": "createOrUpdateHandler",
        "inputData": {
          "input": [
            {
              "clientID": "pasteHandler",
              "taskTemplate": "{{ctx.selected.uid}}",
              "action": 4,
              "additionalData": {
                "handlerToPaste": [
                  "{{ctx.handlerToPaste.uid}}"
                ]
              }
            }
          ]
        },
        "events": {
          "success": [
            {
              "name": "refreshActionTable",
              "condition": "ctx.handlerToPaste.type === 'EPMHandler'"
            },
            {
              "name": "refreshRuleTable",
              "condition": "ctx.handlerToPaste.type === 'EPMBRHandler'"
            }
          ]
        },
        "policy": {
          "types": [
            {
              "name": "EPMHandler",
              "properties": [
                {
                  "name": "parent_action_type"
                },
                {
                  "name": "arguments"
                }
              ]
            },
            {
              "name": "EPMBRHandler",
              "properties": [
                {
                  "name": "arguments"
                }
              ]
            }
          ]
        }
      },
      "pasteHandlerToSkipped": {
        "actionType": "TcSoaService",
        "serviceName": "Workflow-2019-06-Workflow",
        "method": "createOrUpdateHandler",
        "inputData": {
          "input": [
            {
              "clientID": "pasteHandler",
              "taskTemplate": "{{ctx.selected.uid}}",
              "action": 5,
              "additionalData": {
                "handlerToPaste": [
                  "{{ctx.handlerToPaste.uid}}"
                ]
              }
            }
          ]
        },
        "events": {
          "success": [
            {
              "name": "refreshActionTable",
              "condition": "ctx.handlerToPaste.type === 'EPMHandler'"
            },
            {
              "name": "refreshRuleTable",
              "condition": "ctx.handlerToPaste.type === 'EPMBRHandler'"
            }
          ]
        },
        "policy": {
          "types": [
            {
              "name": "EPMHandler",
              "properties": [
                {
                  "name": "parent_action_type"
                },
                {
                  "name": "arguments"
                }
              ]
            },
            {
              "name": "EPMBRHandler",
              "properties": [
                {
                  "name": "arguments"
                }
              ]
            }
          ]
        }
      },
      "pasteHandlerToSuspended": {
        "actionType": "TcSoaService",
        "serviceName": "Workflow-2019-06-Workflow",
        "method": "createOrUpdateHandler",
        "inputData": {
          "input": [
            {
              "clientID": "pasteHandler",
              "taskTemplate": "{{ctx.selected.uid}}",
              "action": 6,
              "additionalData": {
                "handlerToPaste": [
                  "{{ctx.handlerToPaste.uid}}"
                ]
              }
            }
          ]
        },
        "events": {
          "success": [
            {
              "name": "refreshActionTable",
              "condition": "ctx.handlerToPaste.type === 'EPMHandler'"
            },
            {
              "name": "refreshRuleTable",
              "condition": "ctx.handlerToPaste.type === 'EPMBRHandler'"
            }
          ]
        },
        "policy": {
          "types": [
            {
              "name": "EPMHandler",
              "properties": [
                {
                  "name": "parent_action_type"
                },
                {
                  "name": "arguments"
                }
              ]
            },
            {
              "name": "EPMBRHandler",
              "properties": [
                {
                  "name": "arguments"
                }
              ]
            }
          ]
        }
      },
      "pasteHandlerToResumed": {
        "actionType": "TcSoaService",
        "serviceName": "Workflow-2019-06-Workflow",
        "method": "createOrUpdateHandler",
        "inputData": {
          "input": [
            {
              "clientID": "pasteHandler",
              "taskTemplate": "{{ctx.selected.uid}}",
              "action": 7,
              "additionalData": {
                "handlerToPaste": [
                  "{{ctx.handlerToPaste.uid}}"
                ]
              }
            }
          ]
        },
        "events": {
          "success": [
            {
              "name": "refreshActionTable",
              "condition": "ctx.handlerToPaste.type === 'EPMHandler'"
            },
            {
              "name": "refreshRuleTable",
              "condition": "ctx.handlerToPaste.type === 'EPMBRHandler'"
            }
          ]
        },
        "policy": {
          "types": [
            {
              "name": "EPMHandler",
              "properties": [
                {
                  "name": "parent_action_type"
                },
                {
                  "name": "arguments"
                }
              ]
            },
            {
              "name": "EPMBRHandler",
              "properties": [
                {
                  "name": "arguments"
                }
              ]
            }
          ]
        }
      },
      "pasteHandlerToAborted": {
        "actionType": "TcSoaService",
        "serviceName": "Workflow-2019-06-Workflow",
        "method": "createOrUpdateHandler",
        "inputData": {
          "input": [
            {
              "clientID": "pasteHandler",
              "taskTemplate": "{{ctx.selected.uid}}",
              "action": 9,
              "additionalData": {
                "handlerToPaste": [
                  "{{ctx.handlerToPaste.uid}}"
                ]
              }
            }
          ]
        },
        "events": {
          "success": [
            {
              "name": "refreshActionTable",
              "condition": "ctx.handlerToPaste.type === 'EPMHandler'"
            },
            {
              "name": "refreshRuleTable",
              "condition": "ctx.handlerToPaste.type === 'EPMBRHandler'"
            }
          ]
        },
        "policy": {
          "types": [
            {
              "name": "EPMHandler",
              "properties": [
                {
                  "name": "parent_action_type"
                },
                {
                  "name": "arguments"
                }
              ]
            },
            {
              "name": "EPMBRHandler",
              "properties": [
                {
                  "name": "arguments"
                }
              ]
            }
          ]
        }
      },
      "pasteHandlerToUndo": {
        "actionType": "TcSoaService",
        "serviceName": "Workflow-2019-06-Workflow",
        "method": "createOrUpdateHandler",
        "inputData": {
          "input": [
            {
              "clientID": "pasteHandler",
              "taskTemplate": "{{ctx.selected.uid}}",
              "action": 8,
              "additionalData": {
                "handlerToPaste": [
                  "{{ctx.handlerToPaste.uid}}"
                ]
              }
            }
          ]
        },
        "events": {
          "success": [
            {
              "name": "refreshActionTable",
              "condition": "ctx.handlerToPaste.type === 'EPMHandler'"
            },
            {
              "name": "refreshRuleTable",
              "condition": "ctx.handlerToPaste.type === 'EPMBRHandler'"
            }
          ]
        },
        "policy": {
          "types": [
            {
              "name": "EPMHandler",
              "properties": [
                {
                  "name": "parent_action_type"
                },
                {
                  "name": "arguments"
                }
              ]
            },
            {
              "name": "EPMBRHandler",
              "properties": [
                {
                  "name": "arguments"
                }
              ]
            }
          ]
        }
      },
      "moveUpActionHandler": {
        "actionType": "TcSoaService",
        "serviceName": "Workflow-2019-06-Workflow",
        "method": "createOrUpdateHandler",
        "inputData": {
          "input": [
            {
              "clientID": "moveUpHandler",
              "handlerToUpdate": "{{ctx.handlerTableData.dataProviders.actionHandlerDataProvider.selectedObjects[0].uid}}",
              "changeExecutionOrder": -1
            }
          ]
        },
        "events": {
          "success": [
            {
              "name": "refreshActionTable"
            }
          ]
        }
      },
      "moveDownActionHandler": {
        "actionType": "TcSoaService",
        "serviceName": "Workflow-2019-06-Workflow",
        "method": "createOrUpdateHandler",
        "inputData": {
          "input": [
            {
              "clientID": "moveDownHandler",
              "handlerToUpdate": "{{ctx.handlerTableData.dataProviders.actionHandlerDataProvider.selectedObjects[0].uid}}",
              "changeExecutionOrder": 1
            }
          ]
        },
        "events": {
          "success": [
            {
              "name": "refreshActionTable"
            }
          ]
        }
      },
      "moveUpRuleHandler": {
        "actionType": "TcSoaService",
        "serviceName": "Workflow-2019-06-Workflow",
        "method": "createOrUpdateHandler",
        "inputData": {
          "input": [
            {
              "clientID": "moveUpHandler",
              "handlerToUpdate": "{{ctx.handlerTableData.dataProviders.ruleHandlerDataProvider.selectedObjects[0].buisnessRuleObject.uid}}",
              "changeExecutionOrder": -1
            }
          ]
        },
        "events": {
          "success": [
            {
              "name": "refreshRuleTable"
            }
          ]
        }
      },
      "moveDownRuleHandler": {
        "actionType": "TcSoaService",
        "serviceName": "Workflow-2019-06-Workflow",
        "method": "createOrUpdateHandler",
        "inputData": {
          "input": [
            {
              "clientID": "moveDownHandler",
              "handlerToUpdate": "{{ctx.handlerTableData.dataProviders.ruleHandlerDataProvider.selectedObjects[0].buisnessRuleObject.uid}}",
              "changeExecutionOrder": 1
            }
          ]
        },
        "events": {
          "success": [
            {
              "name": "refreshRuleTable"
            }
          ]
        }
      },
      "openNewlyCreatedTemplateAction": {
        "actionType": "Navigate",
        "navigateTo": "com_siemens_splm_clientfx_tcui_xrt_showObject",
        "navigationParams": {
          "uid": "{{data.editObject.uid}}"
        }
      },
      "registerEditObjectContext": {
        "actionType": "JSFunction",
        "method": "registerCtx",
        "deps": "js/appCtxService",
        "inputData": {
          "name": "newlyCreatedTemplateObjUid",
          "value": "{{data.editObject.uid}}"
        },
        "events": {
          "success": [
            {
              "name": "primaryWorkarea.reset"
            }
          ]
        }
      },
      "updateCtxEditInfo": {
        "actionType": "JSFunction",
        "method": "updateWorkflowEditCtx",
        "deps": "js/Awp0WorkflowDesignerUtils",
        "inputData": {
          "name": "workflowDgmEditCtx",
          "editObjectUid": "{{data.editObject.uid}}",
          "isEditMode": true
        }
      },
      "updateCtxLayoutInfo": {
        "actionType": "JSFunction",
        "method": "registerCtx",
        "deps": "js/appCtxService",
        "inputData": {
          "name": "startEditGraphLayout",
          "editObjectUid": "{{ctx.workflowDgmCtx.diagram.layoutOption}}"
        }
      },
      "resetCtxEditInfo": {
        "actionType": "JSFunction",
        "method": "updateWorkflowEditCtx",
        "deps": "js/Awp0WorkflowDesignerUtils",
        "inputData": {
          "name": "workflowDgmEditCtx",
          "editObjectUid": "{{data.editObject.uid}}",
          "isEditMode": false
        }
      },
      "saveTemplateAction": {
        "actionType": "Event",
        "method": "Event",
        "inputData": {
          "events": [
            {
              "name": "saveTemplateSummaryVisibleEvent",
              "condition": "(ctx.xrtSummaryContextObject && data.preferences && data.preferences.EPM_enable_apply_template_changes[0] === 'NONE') || (data.preferences && data.preferences.EPM_enable_apply_template_changes[0] !== 'NONE' && ctx.tcSessionData.tcMajorVersion === 12 && ctx.tcSessionData.tcMinorVersion === 3)"
            },
            {
              "name": "saveTemplateSummaryHiddenEvent",
              "condition": "(!ctx.xrtSummaryContextObject && ctx.selected && data.preferences && data.preferences.EPM_enable_apply_template_changes[0] === 'NONE') || (data.preferences.EPM_enable_apply_template_changes[0] !== 'NONE' && ctx.tcSessionData.tcMajorVersion === 12 && ctx.tcSessionData.tcMinorVersion === 3)"
            },
            {
              "name": "saveTemplateAndApplyToProcessSummaryVisibleEvent",
              "condition": "ctx.xrtSummaryContextObject && data.preferences && data.preferences.EPM_enable_apply_template_changes[0] === 'AUTOMATIC' && (ctx.tcSessionData.tcMajorVersion > 12 || (ctx.tcSessionData.tcMajorVersion === 12 && ctx.tcSessionData.tcMinorVersion > 3 ) )"
            },
            {
              "name": "saveTemplateAndApplyToProcessInBackgroundHiddenEvent",
              "condition": "!ctx.xrtSummaryContextObject && ctx.selected && data.preferences && data.preferences.EPM_enable_apply_template_changes[0] === 'AUTOMATIC' && (ctx.tcSessionData.tcMajorVersion > 12 || (ctx.tcSessionData.tcMajorVersion === 12 && ctx.tcSessionData.tcMinorVersion > 3 ) )"
            },
            {
              "name": "applyTemplateToProcessesOptionVisibleEvent",
              "condition": "ctx.xrtSummaryContextObject && data.preferences && data.preferences.EPM_enable_apply_template_changes[0] === 'OPTIONAL' && data.preferences.DISPATCHER_CLIENT_INSTALLED[0] === 'true' && (ctx.tcSessionData.tcMajorVersion > 12 || (ctx.tcSessionData.tcMajorVersion === 12 && ctx.tcSessionData.tcMinorVersion > 3 ) )"
            },
            {
              "name": "applyTemplateToProcessesOptionHiddenEvent",
              "condition": "!ctx.xrtSummaryContextObject && ctx.selected && data.preferences && data.preferences.EPM_enable_apply_template_changes[0] === 'OPTIONAL' && data.preferences.DISPATCHER_CLIENT_INSTALLED[0] === 'true' && (ctx.tcSessionData.tcMajorVersion > 12 || (ctx.tcSessionData.tcMajorVersion === 12 && ctx.tcSessionData.tcMinorVersion > 3 ) )"
            },
            {
              "name": "applyTemplateToProcessesOptionInForegroundVisibleEvent",
              "condition": "ctx.xrtSummaryContextObject && data.preferences && data.preferences.EPM_enable_apply_template_changes[0] === 'OPTIONAL' && data.preferences.DISPATCHER_CLIENT_INSTALLED[0] === 'false' && (ctx.tcSessionData.tcMajorVersion > 12 || (ctx.tcSessionData.tcMajorVersion === 12 && ctx.tcSessionData.tcMinorVersion > 3 ) )"
            },
            {
              "name": "applyTemplateToProcessesOptionInForegroundHiddenEvent",
              "condition": "!ctx.xrtSummaryContextObject && ctx.selected && data.preferences && data.preferences.EPM_enable_apply_template_changes[0] === 'OPTIONAL' && data.preferences.DISPATCHER_CLIENT_INSTALLED[0] === 'false' && (ctx.tcSessionData.tcMajorVersion > 12 || (ctx.tcSessionData.tcMajorVersion === 12 && ctx.tcSessionData.tcMinorVersion > 3 ) )"
            }
          ]
        }
      },
      "saveTemplateSummaryVisibleAction": {
        "actionType": "TcSoaService",
        "serviceName": "Workflow-2019-06-Workflow",
        "method": "createOrUpdateTemplate",
        "inputData": {
          "input": [
            {
              "clientID": "saveEditTemplate",
              "templateToUpdate": "{{ctx.xrtSummaryContextObject.uid}}",
              "additionalData": {
                "template_stage": [
                  "2"
                ]
              }
            }
          ]
        },
        "outputData": {
          "editObject": "createdorUpdatedObjects['0'].templateObject"
        },
        "events": {
          "success": [
            {
              "name": "workflowDesigner.endEdit"
            },
            {
              "name": "workflowDesigner.saveEdit"
            },
            {
              "name": "workflowDesigner.selectEditContext",
              "condition": "ctx.locationContext['ActiveWorkspace:Location'] !== 'com.siemens.splm.clientfx.tcui.xrt.showObjectLocation'"
            },
            {
              "name": "primaryWorkarea.reset",
              "condition": "ctx.locationContext['ActiveWorkspace:Location'] === 'com.siemens.splm.clientfx.tcui.xrt.showObjectLocation'"
            }
          ]
        }
      },
      "saveTemplateSummaryHiddenAction": {
        "actionType": "TcSoaService",
        "serviceName": "Workflow-2019-06-Workflow",
        "method": "createOrUpdateTemplate",
        "inputData": {
          "input": [
            {
              "clientID": "saveEditTemplate",
              "templateToUpdate": "{{ctx.selected.uid}}",
              "additionalData": {
                "template_stage": [
                  "2"
                ]
              }
            }
          ]
        },
        "outputData": {
          "editObject": "createdorUpdatedObjects['0'].templateObject"
        },
        "events": {
          "success": [
            {
              "name": "workflowDesigner.endEdit"
            },
            {
              "name": "workflowDesigner.saveEdit"
            },
            {
              "name": "workflowDesigner.selectEditContext",
              "condition": "ctx.locationContext['ActiveWorkspace:Location'] !== 'com.siemens.splm.clientfx.tcui.xrt.showObjectLocation'"
            },
            {
              "name": "primaryWorkarea.reset",
              "condition": "ctx.locationContext['ActiveWorkspace:Location'] === 'com.siemens.splm.clientfx.tcui.xrt.showObjectLocation'"
            }
          ]
        }
      },
      "saveTemplateAndApplyToProcessSummaryVisibleAction": {
        "actionType": "TcSoaService",
        "serviceName": "Workflow-2019-06-Workflow",
        "method": "createOrUpdateTemplate",
        "inputData": {
          "input": [
            {
              "clientID": "saveEditTemplate",
              "templateToUpdate": "{{ctx.xrtSummaryContextObject.uid}}",
              "additionalData": {
                "template_stage": [
                  "2"
                ]
              }
            }
          ]
        },
        "outputData": {
          "editObject": "createdorUpdatedObjects['0'].templateObject"
        },
        "events": {
          "success": [
            {
              "name": "workflowDesigner.endEdit"
            },
            {
              "name": "workflowDesigner.saveEdit"
            },
            {
              "name": "workflowDesigner.selectEditContext",
              "condition": "ctx.locationContext['ActiveWorkspace:Location'] !== 'com.siemens.splm.clientfx.tcui.xrt.showObjectLocation'"
            },
            {
              "name": "automaticApplyTemplateToProcessesInBackgroundVisibleEvent",
              "condition": "data.preferences && data.preferences.DISPATCHER_CLIENT_INSTALLED[0] === 'true'"
            },
            {
              "name": "automaticApplyTemplateToProcessesInForegroundVisibleEvent",
              "condition": "data.preferences && data.preferences.DISPATCHER_CLIENT_INSTALLED[0] === 'false'"
            }
          ]
        }
      },
      "saveTemplateAndApplyToProcessSummaryHiddenAction": {
        "actionType": "TcSoaService",
        "serviceName": "Workflow-2019-06-Workflow",
        "method": "createOrUpdateTemplate",
        "inputData": {
          "input": [
            {
              "clientID": "saveEditTemplate",
              "templateToUpdate": "{{ctx.selected.uid}}",
              "additionalData": {
                "template_stage": [
                  "2"
                ]
              }
            }
          ]
        },
        "outputData": {
          "editObject": "createdorUpdatedObjects['0'].templateObject"
        },
        "events": {
          "success": [
            {
              "name": "workflowDesigner.endEdit"
            },
            {
              "name": "workflowDesigner.saveEdit"
            },
            {
              "name": "workflowDesigner.selectEditContext",
              "condition": "ctx.locationContext['ActiveWorkspace:Location'] !== 'com.siemens.splm.clientfx.tcui.xrt.showObjectLocation'"
            },
            {
              "name": "automaticApplyTemplateToProcessesInBackgroundHiddenEvent",
              "condition": "data.preferences && data.preferences.DISPATCHER_CLIENT_INSTALLED[0] === 'true'"
            },
            {
              "name": "automaticApplyTemplateToProcessesInForegroundHiddenEvent",
              "condition": "data.preferences && data.preferences.DISPATCHER_CLIENT_INSTALLED[0] === 'false'"
            }
          ]
        }
      },
      "toggleShowTaskRelatedInfo": {
        "actionType": "JSFunction",
        "method": "showTaskRelatedInfoPanel",
        "inputData": {
          "tabIdToShow": "{{ctx.state.params.ttab_name}}",
          "toggleCase": true
        },
        "deps": "js/Awp0WorkflowDesignerGraphService"
      },
      "removeTaskTemplateAction": {
        "actionType": "Event",
        "method": "Event",
        "inputData": {
          "events": [
            {
              "name": "workflowDesigner.removeTaskTemplateNode",
              "condition": "ctx.workflowDgmCtx.selectedNodes && ctx.workflowDgmCtx.selectedNodes.length > 0 &&  ctx.workflowDgmCtx.selectedEdges && ctx.workflowDgmCtx.selectedEdges.length <= 0"
            },
            {
              "name": "workflowDesigner.removeTaskTemplateEdge",
              "condition": "ctx.workflowDgmCtx.selectedNodes && ctx.workflowDgmCtx.selectedNodes.length <= 0 && ctx.workflowDgmCtx.selectedEdges && ctx.workflowDgmCtx.selectedEdges.length > 0"
            },
            {
              "name": "workflowDesigner.removeTaskTemplateNodeAndEdges",
              "condition": "ctx.workflowDgmCtx.selectedNodes && ctx.workflowDgmCtx.selectedNodes.length > 0 && ctx.workflowDgmCtx.selectedEdges && ctx.workflowDgmCtx.selectedEdges.length > 0"
            }
          ]
        }
      },
      "removeTaskTemplateNodeAction": {
        "actionType": "TcSoaService",
        "serviceName": "Core-2006-03-DataManagement",
        "method": "deleteObjects",
        "inputData": {
          "objects": "{{function:getRemoveNodeInput}}"
        },
        "events": {
          "success": [
            {
              "name": "workflowDesigner.removeGraphNode"
            }
          ]
        },
        "actionMessages": {
          "failure": [
            {
              "message": "deleteTemplateSummaryVisibleActionFailure"
            }
          ]
        },
        "deps": "js/Awp0WorkflowRemoveTemplateService"
      },
      "removeGraphNode": {
        "actionType": "JSFunction",
        "method": "removeGraphElements",
        "deps": "js/Awp0WorkflowRemoveTemplateService",
        "inputData": {
          "removeObjects": "{{ctx.workflowDgmCtx.removeGraphItems}}"
        }
      },
      "removeTaskTemplateEdgeAction": {
        "actionType": "TcSoaService",
        "serviceName": "Workflow-2019-06-Workflow",
        "method": "createOrUpdateTemplate",
        "inputData": {
          "input": "{{function:getRemoveEdgeInput}}"
        },
        "events": {
          "success": [
            {
              "name": "workflowDesigner.removeGraphEdge"
            }
          ]
        },
        "actionMessages": {
          "failure": [
            {
              "message": "deleteTemplateSummaryVisibleActionFailure"
            }
          ]
        },
        "deps": "js/Awp0WorkflowRemoveTemplateService"
      },
      "removeGraphEdge": {
        "actionType": "JSFunction",
        "method": "removeGraphElements",
        "deps": "js/Awp0WorkflowRemoveTemplateService",
        "inputData": {
          "removeObjects": "{{ctx.workflowDgmCtx.removeGraphItems}}"
        }
      },
      "removeTaskTemplateNodeEdgeAction": {
        "actionType": "JSFunction",
        "method": "removeGraphNodeEdges",
        "deps": "js/Awp0WorkflowRemoveTemplateService",
        "inputData": {
          "selectedNodes": "{{ctx.workflowDgmCtx.selectedNodes}}",
          "selectedEdges": "{{ctx.workflowDgmCtx.selectedEdges}}"
        }
      },
      "convertToParentTemplateAction": {
        "actionType": "JSFunction",
        "method": "convertToParent",
        "deps": "js/Awp0WorkflowDesignerGraphService"
      },
      "addNotificationHandlerAction": {
        "actionType": "JSFunction",
        "method": "activateCommandPanel",
        "deps": "js/commandPanel.service",
        "inputData": {
          "commandId": "Awp0WorkflowAddNotificationHandler",
          "location": "aw_toolsAndInfo",
          "context": "{{commandContext}}"
        },
        "events": {
          "success": [
            {
              "name": "workflowDesigner.updateNotificationTabContextAddCase",
              "eventData": {
                "context": "{{commandContext}}"
              }
            }
          ]
        }
      },
      "showNotificationHandlerInfoAction": {
        "actionType": "JSFunction",
        "method": "activateCommandPanel",
        "deps": "js/commandPanel.service",
        "inputData": {
          "commandId": "Awp0WorkflowShowNotificationHandler",
          "location": "aw_toolsAndInfo",
          "context": "{{commandContext}}"
        },
        "events": {
          "success": [
            {
              "name": "workflowDesigner.updateNotificationTabContextUpdateCase",
              "eventData": {
                "context": "{{commandContext}}"
              }
            }
          ]
        }
      },
      "editNotificationHandlerInfoAction": {
        "actionType": "JSFunction",
        "method": "activateCommandPanel",
        "deps": "js/commandPanel.service",
        "inputData": {
          "commandId": "Awp0WorkflowEditNotificationHandler",
          "location": "aw_toolsAndInfo",
          "context": "{{commandContext}}"
        },
        "events": {
          "success": [
            {
              "name": "workflowDesigner.updateNotificationTabContextUpdateCase",
              "eventData": {
                "context": "{{commandContext}}"
              }
            }
          ]
        }
      },
      "removeNotificationHandlerAction": {
        "actionType": "TcSoaService",
        "serviceName": "Core-2006-03-DataManagement",
        "method": "deleteObjects",
        "inputData": {
          "objects": [
            "{{commandContext.selectedObjects[0].handlerObject}}"
          ]
        },
        "events": {
          "success": [
            {
              "name": "workflowDesigner.tabReload"
            }
          ]
        }
      },
      "updateNotificationTabContextAddCase": {
        "actionType": "JSFunction",
        "method": "updateNotificationContext",
        "inputData": {
          "handlerObject": null,
          "dataProvider": "{{data.eventMap['workflowDesigner.updateNotificationTabContextAddCase'].context}}"
        },
        "deps": "js/Awp0WorkflowTemplateNotificationService"
      },
      "updateNotificationTabContextUpdateCase": {
        "actionType": "JSFunction",
        "method": "updateNotificationContext",
        "inputData": {
          "handlerObject": "{{data.eventMap['workflowDesigner.updateNotificationTabContextUpdateCase'].context.selectedObjects[0]}}",
          "dataProvider": "{{data.eventMap['workflowDesigner.updateNotificationTabContextUpdateCase'].context}}"
        },
        "deps": "js/Awp0WorkflowTemplateNotificationService"
      },
      "addKeyRoleArguments": {
        "actionType": "Event",
        "method": "Event",
        "inputData": {
          "events": [
            {
              "name": "addKeyRoleArgumentsEvent"
            }
          ]
        },
        "events": {
          "success": [
            {
              "name": "awPanel.navigate",
              "eventData": {
                "destPanelId": "Awp0WorkflowUsers",
                "title": "{{i18n.Add_Title}}",
                "supportGoBack": true,
                "recreatePanel": true
              }
            }
          ]
        }
      },
      "removeKeyRoleArguments": {
        "actionType": "Event",
        "method": "Event",
        "inputData": {
          "events": [
            {
              "name": "removeKeyRoleArgumentsEvent"
            }
          ]
        }
      },
      "createActionHandlerPanel": {
        "actionType": "JSFunction",
        "method": "activateCommandPanel",
        "deps": "js/commandPanel.service",
        "inputData": {
          "commandId": "Awp0CreateOrUpdateActionHandler",
          "location": "aw_toolsAndInfo",
          "context": null,
          "push": false,
          "closeWhenCommandHidden": false,
          "config": {
            "width": "WIDE"
          }
        }
      },
      "createRuleHandlerPanel": {
        "actionType": "JSFunction",
        "method": "activateCommandPanel",
        "deps": "js/commandPanel.service",
        "inputData": {
          "commandId": "Awp0CreateOrUpdateRuleHandler",
          "location": "aw_toolsAndInfo",
          "context": null,
          "push": false,
          "closeWhenCommandHidden": false,
          "config": {
            "width": "WIDE"
          }
        }
      },
      "Awp0AddHandlerArgumentPanelSection": {
        "actionType": "Event",
        "method": "Event",
        "inputData": {
          "events": [
            {
              "name": "awPanel.navigate",
              "eventData": {
                "destPanelId": "Awp0ArgumentsValue",
                "title": "{{i18n.addArguments}}",
                "supportGoBack": true,
                "recreatePanel": true
              }
            }
          ]
        },
        "events": {
          "success": [
            {
              "name": "populateArgumentNameslist",
              "condition": "ctx.argumentsPanelData.argumentNames || ctx.argumentsPanelData.argumentNameTextBox"
            }
          ]
        }
      },
      "Awp0EditArgument": {
        "actionType": "Event",
        "method": "Event",
        "inputData": {
          "events": [
            {
              "name": "awPanel.navigate",
              "eventData": {
                "destPanelId": "Awp0ArgumentsValue",
                "title": "{{i18n.editArguments}}",
                "supportGoBack": true,
                "recreatePanel": true
              }
            }
          ]
        },
        "events": {
          "success": [
            {
              "name": "populateArgumentNameAndValues",
              "condition": "ctx.argumentsPanelData.readOnlyArgumentName"
            }
          ]
        }
      },
      "Awp0RemoveHandlerArgumentPanelSection": {
        "actionType": "JSFunction",
        "method": "awp0RemoveHandlerArgumentPanelSection",
        "deps": "js/Awp0CreateOrUpdateTaskHandlers",
        "inputData": {
          "ctx": "{{ctx}}"
        }
      },
      "RemoveActionHandler": {
        "actionType": "TcSoaService",
        "serviceName": "Core-2006-03-DataManagement",
        "method": "deleteObjects",
        "inputData": {
          "objects": [
            "{{ctx.handlerTableData.dataProviders.actionHandlerDataProvider.selectedObjects[0]}}"
          ]
        },
        "events": {
          "success": [
            {
              "name": "refreshActionHandlerTable"
            },
            {
              "name": "unregisterPasteHandlerContext",
              "condition": "ctx.handlerTableData.dataProviders.actionHandlerDataProvider.selectedObjects[0].uid === ctx.handlerToPaste.uid"
            }
          ]
        }
      },
      "RemoveRuleHandler": {
        "actionType": "TcSoaService",
        "serviceName": "Core-2006-03-DataManagement",
        "method": "deleteObjects",
        "inputData": {
          "objects": [
            "{{ctx.handlerTableData.dataProviders.ruleHandlerDataProvider.selectedObjects[0]}}"
          ]
        },
        "events": {
          "success": [
            {
              "name": "refreshRuleHandlerTable"
            },
            {
              "name": "unregisterPasteHandlerContext",
              "condition": "ctx.handlerTableData.dataProviders.ruleHandlerDataProvider.selectedObjects[0].uid === ctx.handlerToPaste.uid"
            }
          ]
        }
      },
      "openActionHandlerInfoPanel": {
        "actionType": "JSFunction",
        "method": "openHandlerPanel",
        "deps": "js/Awp0CreateOrUpdateTaskHandlers",
        "inputData": {
          "ctx": "{{ctx}}",
          "selectedHandler": "{{ctx.handlerTableData.dataProviders.actionHandlerDataProvider.selectedObjects[0]}}",
          "panelId": "Awp0TemplateShowHandlerInfo"
        }
      },
      "openRuleHandlerInfoPanel": {
        "actionType": "JSFunction",
        "method": "openHandlerPanel",
        "deps": "js/Awp0CreateOrUpdateTaskHandlers",
        "inputData": {
          "ctx": "{{ctx}}",
          "selectedHandler": "{{ctx.handlerTableData.dataProviders.ruleHandlerDataProvider.selectedObjects[0]}}",
          "panelId": "Awp0TemplateShowHandlerInfo"
        }
      },
      "openActionHandlerEditPanel": {
        "actionType": "JSFunction",
        "method": "openHandlerPanel",
        "deps": "js/Awp0CreateOrUpdateTaskHandlers",
        "inputData": {
          "ctx": "{{ctx}}",
          "selectedHandler": "{{ctx.handlerTableData.dataProviders.actionHandlerDataProvider.selectedObjects[0]}}",
          "panelId": "Awp0TemplateEditHandlerInfo"
        }
      },
      "openRuleHandlerEditPanel": {
        "actionType": "JSFunction",
        "method": "openHandlerPanel",
        "deps": "js/Awp0CreateOrUpdateTaskHandlers",
        "inputData": {
          "ctx": "{{ctx}}",
          "selectedHandler": "{{ctx.handlerTableData.dataProviders.ruleHandlerDataProvider.selectedObjects[0]}}",
          "panelId": "Awp0TemplateEditHandlerInfo"
        }
      },
      "populateArgumentNameslist": {
        "actionType": "JSFunction",
        "method": "populateArgumentNameslist",
        "inputData": {
          "data": "{{ctx.argumentsPanelData}}"
        },
        "deps": "js/Awp0CreateOrUpdateTaskHandlers"
      },
      "populateArgumentNameAndValues": {
        "actionType": "JSFunction",
        "method": "populateArgumentValueslist",
        "inputData": {
          "data": "{{ctx.argumentsPanelData}}"
        },
        "deps": "js/Awp0CreateOrUpdateTaskHandlers",
        "events": {
          "success": [
            {
              "name": "emptyValueTextBox"
            }
          ]
        }
      },
      "refreshActionHandlerTable": {
        "actionType": "JSFunction",
        "method": "refreshActionHandlerTable",
        "inputData": {
          "data": "{{ctx.handlerTableData}}",
          "ctx": "{{ctx}}"
        },
        "deps": "js/Awp0CreateOrUpdateTaskHandlers"
      },
      "refreshRuleHandlerTable": {
        "actionType": "JSFunction",
        "method": "refreshRuleHandlerTable",
        "inputData": {
          "data": "{{ctx.handlerTableData}}"
        },
        "deps": "js/Awp0CreateOrUpdateTaskHandlers"
      },
      "refreshActionTable": {
        "actionType": "JSFunction",
        "method": "populateActionHandlerData",
        "inputData": {
          "data": "{{ctx.handlerTableData}}",
          "ctx": "{{ctx}}"
        },
        "outputData": {
          "totalFound": "totalFound",
          "searchResults": "searchResults"
        },
        "events": {
          "success": [
            {
              "name": "getUpdatedActionHandlerTable"
            }
          ]
        },
        "deps": "js/Awp0CreateOrUpdateTaskHandlers"
      },
      "refreshRuleTable": {
        "actionType": "JSFunction",
        "method": "populateRuleHandlerData",
        "inputData": {
          "data": "{{ctx.handlerTableData}}",
          "ctx": "{{ctx}}"
        },
        "outputData": {
          "totalFound": "totalFound",
          "searchResults": "searchResults"
        },
        "events": {
          "success": [
            {
              "name": "getUpdatedRuleHandlerTable"
            }
          ]
        },
        "deps": "js/Awp0CreateOrUpdateTaskHandlers"
      },
      "getIndexOfSelectedActionHandler": {
        "actionType": "JSFunction",
        "method": "getIndexOfSelectedActionHandler",
        "inputData": {
          "ctx": "{{ctx}}",
          "changedIndex": true
        },
        "deps": "js/Awp0CreateOrUpdateTaskHandlers"
      },
      "getIndexOfSelectedRuleHandler": {
        "actionType": "JSFunction",
        "method": "getIndexOfSelectedRuleHandler",
        "inputData": {
          "ctx": "{{ctx}}",
          "changedIndex": true
        },
        "deps": "js/Awp0CreateOrUpdateTaskHandlers"
      },
      "addAssignmentHandlerAction": {
        "actionType": "JSFunction",
        "method": "activateCommandPanel",
        "deps": "js/commandPanel.service",
        "inputData": {
          "commandId": "Awp0WorkflowAddAssignmentHandler",
          "location": "aw_toolsAndInfo",
          "context": "{{commandContext}}"
        },
        "events": {
          "success": [
            {
              "name": "workflowDesigner.updateAssignmentTabContextAddCase",
              "eventData": {
                "context": "{{commandContext}}"
              }
            }
          ]
        }
      },
      "updateAssignmentTabContextAddCase": {
        "actionType": "JSFunction",
        "method": "updateAssignmentContext",
        "inputData": {
          "handlerObject": null,
          "dataProvider": "{{data.eventMap['workflowDesigner.updateAssignmentTabContextAddCase'].context}}"
        },
        "deps": "js/Awp0WorkflowTemplateAssignmentService"
      },
      "showProfileInfoAction": {
        "actionType": "JSFunction",
        "method": "activateCommandPanel",
        "deps": "js/commandPanel.service",
        "inputData": {
          "commandId": "Awp0TemplateShowProfileInfo",
          "location": "aw_toolsAndInfo",
          "context": "{{commandContext}}"
        },
        "events": {
          "success": [
            {
              "name": "workflowDesigner.updateAssignmentTabContextUpdateCase",
              "eventData": {
                "context": "{{commandContext}}"
              }
            }
          ]
        }
      },
      "editProfileInfoAction": {
        "actionType": "JSFunction",
        "method": "activateCommandPanel",
        "deps": "js/commandPanel.service",
        "inputData": {
          "commandId": "Awp0TemplateEditProfileInfo",
          "location": "aw_toolsAndInfo",
          "context": "{{commandContext}}"
        },
        "events": {
          "success": [
            {
              "name": "workflowDesigner.updateAssignmentTabContextUpdateCase",
              "eventData": {
                "context": "{{commandContext}}"
              }
            }
          ]
        }
      },
      "showAssignmentHandlerInfoAction": {
        "actionType": "JSFunction",
        "method": "activateCommandPanel",
        "deps": "js/commandPanel.service",
        "inputData": {
          "commandId": "Awp0WorkflowShowAssignmentHandler",
          "location": "aw_toolsAndInfo",
          "context": "{{commandContext}}"
        },
        "events": {
          "success": [
            {
              "name": "workflowDesigner.updateAssignmentTabContextUpdateCase",
              "eventData": {
                "context": "{{commandContext}}"
              }
            }
          ]
        }
      },
      "editAssignmentHandlerInfoAction": {
        "actionType": "JSFunction",
        "method": "activateCommandPanel",
        "deps": "js/commandPanel.service",
        "inputData": {
          "commandId": "Awp0WorkflowEditAssignmentHandler",
          "location": "aw_toolsAndInfo",
          "context": "{{commandContext}}"
        },
        "events": {
          "success": [
            {
              "name": "workflowDesigner.updateAssignmentTabContextUpdateCase",
              "eventData": {
                "context": "{{commandContext}}"
              }
            }
          ]
        }
      },
      "updateAssignmentTabContextUpdateCase": {
        "actionType": "JSFunction",
        "method": "updateAssignmentContext",
        "inputData": {
          "handlerObject": "{{data.eventMap['workflowDesigner.updateAssignmentTabContextUpdateCase'].context.selectedObjects[0]}}",
          "dataProvider": "{{data.eventMap['workflowDesigner.updateAssignmentTabContextUpdateCase'].context}}"
        },
        "deps": "js/Awp0WorkflowTemplateAssignmentService"
      },
      "removeSignoffProfileAction": {
        "actionType": "TcSoaService",
        "serviceName": "Core-2006-03-DataManagement",
        "method": "deleteObjects",
        "inputData": {
          "objects": [
            "{{commandContext.selectedObjects[0]}}"
          ]
        },
        "events": {
          "success": [
            {
              "name": "workflowDesigner.tabReload"
            }
          ]
        }
      },
      "removeAssignmentHandlerAction": {
        "actionType": "JSFunction",
        "method": "removeAssignmentHandlerAction",
        "inputData": {
          "data": "{{data}}",
          "handlerObject": "{{commandContext.selectedObjects[0]}}"
        },
        "deps": "js/Awp0WorkflowTemplateAssignmentService"
      },
      "addFormHandlerAction": {
        "actionType": "JSFunction",
        "method": "activateCommandPanel",
        "deps": "js/commandPanel.service",
        "inputData": {
          "commandId": "Awp0WorkflowAddFormHandler",
          "location": "aw_toolsAndInfo",
          "context": "{{commandContext}}"
        },
        "events": {
          "success": [
            {
              "name": "workflowDesigner.updateNotificationTabContextAddCase",
              "eventData": {
                "context": "{{commandContext}}"
              }
            }
          ]
        }
      },
      "removeFormHandlerAction": {
        "actionType": "TcSoaService",
        "serviceName": "Core-2006-03-DataManagement",
        "method": "deleteObjects",
        "inputData": {
          "objects": "{{function:getRemoveFormHandlerObjects}}"
        },
        "events": {
          "success": [
            {
              "name": "workflowDesigner.tabReload"
            }
          ]
        },
        "deps": "js/Awp0WorkflowTemplateFormService"
      },
      "showFormHandlerInfoAction": {
        "actionType": "JSFunction",
        "method": "activateCommandPanel",
        "deps": "js/commandPanel.service",
        "inputData": {
          "commandId": "Awp0WorkflowShowFormHandler",
          "location": "aw_toolsAndInfo",
          "context": "{{commandContext}}"
        },
        "events": {
          "success": [
            {
              "name": "workflowDesigner.updateFormTabContextUpdateCase",
              "eventData": {
                "context": "{{commandContext}}"
              }
            }
          ]
        }
      },
      "editFormHandlerInfoAction": {
        "actionType": "JSFunction",
        "method": "activateCommandPanel",
        "deps": "js/commandPanel.service",
        "inputData": {
          "commandId": "Awp0WorkflowEditFormHandler",
          "location": "aw_toolsAndInfo",
          "context": "{{commandContext}}"
        },
        "events": {
          "success": [
            {
              "name": "workflowDesigner.updateFormTabContextUpdateCase",
              "eventData": {
                "context": "{{commandContext}}"
              }
            }
          ]
        }
      },
      "updateFormTabContextUpdateCase": {
        "actionType": "JSFunction",
        "method": "updateFormHandlerContext",
        "inputData": {
          "handlerObject": "{{data.eventMap['workflowDesigner.updateFormTabContextUpdateCase'].context.selectedObjects[0]}}",
          "dataProvider": "{{data.eventMap['workflowDesigner.updateFormTabContextUpdateCase'].context}}"
        },
        "deps": "js/Awp0WorkflowTemplateFormService"
      },
      "endEditsTemplateAction": {
        "actionType": "Event",
        "method": "Event",
        "inputData": {
          "events": [
            {
              "name": "endEditSummaryVisibleEvent",
              "condition": "ctx.xrtSummaryContextObject"
            },
            {
              "name": "endEditSummaryHiddenEvent",
              "condition": "!ctx.xrtSummaryContextObject && ctx.selected"
            }
          ]
        }
      },
      "endEditSummaryVisibleAction": {
        "actionType": "JSFunction",
        "method": "updateWorkflowEditCtx",
        "deps": "js/Awp0WorkflowDesignerUtils",
        "inputData": {
          "name": "workflowDgmEditCtx",
          "editObjectUid": "{{ctx.xrtSummaryContextObject.uid}}",
          "isEditMode": false
        },
        "events": {
          "success": [
            {
              "name": "workflowDesigner.saveEdit"
            }
          ]
        }
      },
      "endEditSummaryHiddenAction": {
        "actionType": "JSFunction",
        "method": "updateWorkflowEditCtx",
        "deps": "js/Awp0WorkflowDesignerUtils",
        "inputData": {
          "name": "workflowDgmEditCtx",
          "editObjectUid": "{{ctx.selected.uid}}",
          "isEditMode": false
        }
      },
      "showWorkflowGraphLegendPanel": {
        "actionType": "JSFunction",
        "method": "showTaskLegendPalettePanel",
        "deps": "js/Awp0WorkflowDesignerGraphService",
        "inputData": {
          "diagramCtx": "{{ctx.workflowDgmCtx}}",
          "graphModel": "{{ctx.graph.graphModel}}",
          "legendState": "{{ctx.graph.legendState}}"
        }
      },
      "saveGraphPositions": {
        "actionType": "Event",
        "method": "Event",
        "inputData": {
          "events": [
            {
              "name": "confirmSaveTemplatePositionEvent"
            }
          ]
        }
      },
      "saveGraphPositionsAction": {
        "actionType": "JSFunction",
        "method": "saveGraphPositions",
        "deps": "js/Awp0WorkflowDesignerGraphSaveService",
        "inputData": {}
      },
      "showFixedLayout": {
        "actionType": "JSFunction",
        "method": "disableAutoLayout",
        "deps": "js/Awp0WorkflowDesignerAutoLayoutHandler",
        "inputData": {
          "ctx": "{{ctx}}"
        },
        "events": {
          "success": [
            {
              "name": "workflowDesigner.AutoLayoutToggled"
            }
          ]
        }
      },
      "showAutoLayout": {
        "actionType": "JSFunction",
        "method": "enableAutoLayout",
        "deps": "js/Awp0WorkflowDesignerAutoLayoutHandler",
        "inputData": {
          "ctx": "{{ctx}}"
        },
        "events": {
          "success": [
            {
              "name": "workflowDesigner.AutoLayoutToggled"
            }
          ]
        }
      },
      "emptyValueTextBox": {
        "actionType": "JSFunction",
        "method": "emptyValueTextBox",
        "deps": "js/Awp0CreateOrUpdateTaskHandlers",
        "inputData": {
          "ctx": "{{ctx}}"
        }
      },
      "unregisterPasteHandlerContext": {
        "actionType": "JSFunction",
        "method": "unRegisterCtx",
        "deps": "js/appCtxService",
        "inputData": {
          "name": "handlerToPaste"
        }
      },
      "automaticApplyTemplateToProcessesInBackground": {
        "actionType": "TcSoaService",
        "serviceName": "Workflow-2010-09-Workflow",
        "method": "applyTemplateToProcesses",
        "inputData": {
          "applyTemplateInput": [
            {
              "clientId": "applyTemplateToProcesses",
              "processTemplate": "{{ctx.xrtSummaryContextObject}}"
            }
          ],
          "processingMode": 1
        },
        "outputData": {
          "ctx.updatedProcesses": "applyTemplateOutput['0'].updatedProcesses",
          "ctx.failedProcesses": "applyTemplateOutput['0'].failedProcesses"
        },
        "events": {
          "success": [
            {
              "name": "primaryWorkarea.reset",
              "condition": "ctx.locationContext['ActiveWorkspace:Location'] === 'com.siemens.splm.clientfx.tcui.xrt.showObjectLocation'"
            },
            {
              "name": "applyTemplateToProcessPartialSuccessfulMsgEvent",
              "condition": "ctx.updatedProcesses && ctx.updatedProcesses.length > 0 && ctx.failedProcesses && ctx.failedProcesses.length > 0"
            }
          ]
        },
        "actionMessages": {
          "success": [
            {
              "message": "applyTemplateToProcessSuccessfulMsg",
              "condition": "ctx.updatedProcesses && ctx.updatedProcesses.length > 0 && !ctx.failedProcesses"
            }
          ]
        }
      },
      "automaticApplyTemplateToProcessesInBackgroundHidden": {
        "actionType": "TcSoaService",
        "serviceName": "Workflow-2010-09-Workflow",
        "method": "applyTemplateToProcesses",
        "inputData": {
          "applyTemplateInput": [
            {
              "clientID": "applyTemplateToProcesses",
              "processTemplate": "{{ctx.selected}}"
            }
          ],
          "processingMode": 1
        },
        "outputData": {
          "ctx.updatedProcesses": "applyTemplateOutput['0'].updatedProcesses",
          "ctx.failedProcesses": "applyTemplateOutput['0'].failedProcesses"
        },
        "events": {
          "success": [
            {
              "name": "primaryWorkarea.reset",
              "condition": "ctx.locationContext['ActiveWorkspace:Location'] === 'com.siemens.splm.clientfx.tcui.xrt.showObjectLocation'"
            },
            {
              "name": "applyTemplateToProcessPartialSuccessfulMsgEvent",
              "condition": "ctx.updatedProcesses && ctx.updatedProcesses.length > 0 && ctx.failedProcesses && ctx.failedProcesses.length > 0"
            }
          ]
        },
        "actionMessages": {
          "success": [
            {
              "message": "applyTemplateToProcessSuccessfulMsg",
              "condition": "ctx.updatedProcesses && ctx.updatedProcesses.length > 0 && !ctx.failedProcesses"
            }
          ]
        }
      },
      "automaticApplyTemplateToProcessesInForeground": {
        "actionType": "TcSoaService",
        "serviceName": "Workflow-2010-09-Workflow",
        "method": "applyTemplateToProcesses",
        "inputData": {
          "applyTemplateInput": [
            {
              "clientId": "applyTemplateToProcesses",
              "processTemplate": "{{ctx.xrtSummaryContextObject}}"
            }
          ],
          "processingMode": 0
        },
        "outputData": {
          "ctx.updatedProcesses": "applyTemplateOutput['0'].updatedProcesses",
          "ctx.failedProcesses": "applyTemplateOutput['0'].failedProcesses"
        },
        "events": {
          "success": [
            {
              "name": "primaryWorkarea.reset",
              "condition": "ctx.locationContext['ActiveWorkspace:Location'] === 'com.siemens.splm.clientfx.tcui.xrt.showObjectLocation'"
            },
            {
              "name": "applyTemplateToProcessPartialSuccessfulMsgEvent",
              "condition": "ctx.updatedProcesses && ctx.updatedProcesses.length > 0 && ctx.failedProcesses && ctx.failedProcesses.length > 0"
            }
          ]
        },
        "actionMessages": {
          "success": [
            {
              "message": "applyTemplateToProcessSuccessfulMsg",
              "condition": "ctx.updatedProcesses && ctx.updatedProcesses.length > 0 && !ctx.failedProcesses"
            }
          ]
        }
      },
      "automaticApplyTemplateToProcessesInForegroundHidden": {
        "actionType": "TcSoaService",
        "serviceName": "Workflow-2010-09-Workflow",
        "method": "applyTemplateToProcesses",
        "inputData": {
          "applyTemplateInput": [
            {
              "clientID": "applyTemplateToProcesses",
              "processTemplate": "{{ctx.selected}}"
            }
          ],
          "processingMode": 0
        },
        "outputData": {
          "ctx.updatedProcesses": "applyTemplateOutput['0'].updatedProcesses",
          "ctx.failedProcesses": "applyTemplateOutput['0'].failedProcesses"
        },
        "events": {
          "success": [
            {
              "name": "primaryWorkarea.reset",
              "condition": "ctx.locationContext['ActiveWorkspace:Location'] === 'com.siemens.splm.clientfx.tcui.xrt.showObjectLocation'"
            },
            {
              "name": "applyTemplateToProcessPartialSuccessfulMsgEvent",
              "condition": "ctx.updatedProcesses && ctx.updatedProcesses.length > 0 && ctx.failedProcesses && ctx.failedProcesses.length > 0"
            }
          ]
        },
        "actionMessages": {
          "success": [
            {
              "message": "applyTemplateToProcessSuccessfulMsg",
              "condition": "ctx.updatedProcesses && ctx.updatedProcesses.length > 0 && !ctx.failedProcesses"
            }
          ]
        }
      },
      "resetCtxEditInfoAfterApplyTemplateToProcess": {
        "actionType": "JSFunction",
        "method": "updateWorkflowEditCtx",
        "deps": "js/Awp0WorkflowDesignerUtils",
        "inputData": {
          "name": "workflowDgmEditCtx",
          "editObjectUid": "{{ctx.xrtSummaryContextObject.uid}}",
          "isEditMode": false
        }
      },
      "applyTemplateToProcessPartialSuccessfulMsgAction": {
        "actionType": "JSFunction",
        "method": "applyTemplateToProcessPartialSuccessfulMsgAction",
        "deps": "js/Awp0WorkflowDesignerUtils",
        "inputData": {
          "data": "{{data}}",
          "updatedProcesses": "{{ctx.updatedProcesses}}",
          "failedProcesses": "{{ctx.failedProcesses}}"
        }
      },
      "setWorkflowDesignerActiveLayoutAsTopToBottom": {
        "actionType": "JSFunction",
        "method": "enableAutoLayout",
        "deps": "js/Awp0WorkflowDesignerAutoLayoutHandler",
        "inputData": {
          "ctx": "{{ctx}}",
          "layoutOption": "GcTopToBottomLayout"
        },
        "events": {
          "success": [
            {
              "name": "workflowDesigner.AutoLayoutToggled",
              "condition": "!ctx.workflowDgmCtx.diagram.isSwitchingBetweenAutoLayout"
            },
            {
              "name": "workflowDesigner.AutoLayoutAlreadyToggled",
              "condition": "ctx.workflowDgmCtx.diagram.isSwitchingBetweenAutoLayout"
            },
            {
              "name": "workflowDesigner.resetConnectionMode",
              "condition": "!ctx.workflowDgmCtx.diagram.isSwitchingBetweenAutoLayout"
            }
          ]
        }
      },
      "setWorkflowDesignerActiveLayoutAsRightToLeft": {
        "actionType": "JSFunction",
        "method": "enableAutoLayout",
        "deps": "js/Awp0WorkflowDesignerAutoLayoutHandler",
        "inputData": {
          "ctx": "{{ctx}}",
          "layoutOption": "GcRightToLeftLayout"
        },
        "events": {
          "success": [
            {
              "name": "workflowDesigner.AutoLayoutToggled",
              "condition": "!ctx.workflowDgmCtx.diagram.isSwitchingBetweenAutoLayout"
            },
            {
              "name": "workflowDesigner.AutoLayoutAlreadyToggled",
              "condition": "ctx.workflowDgmCtx.diagram.isSwitchingBetweenAutoLayout"
            },
            {
              "name": "workflowDesigner.resetConnectionMode",
              "condition": "!ctx.workflowDgmCtx.diagram.isSwitchingBetweenAutoLayout"
            }
          ]
        }
      },
      "setWorkflowDesignerActiveLayoutAsLeftToRight": {
        "actionType": "JSFunction",
        "method": "enableAutoLayout",
        "deps": "js/Awp0WorkflowDesignerAutoLayoutHandler",
        "inputData": {
          "ctx": "{{ctx}}",
          "layoutOption": "GcLeftToRightLayout"
        },
        "events": {
          "success": [
            {
              "name": "workflowDesigner.AutoLayoutToggled",
              "condition": "!ctx.workflowDgmCtx.diagram.isSwitchingBetweenAutoLayout"
            },
            {
              "name": "workflowDesigner.AutoLayoutAlreadyToggled",
              "condition": "ctx.workflowDgmCtx.diagram.isSwitchingBetweenAutoLayout"
            },
            {
              "name": "workflowDesigner.resetConnectionMode",
              "condition": "!ctx.workflowDgmCtx.diagram.isSwitchingBetweenAutoLayout"
            }
          ]
        }
      },
      "setWorkflowDesignerActiveLayoutAsFixed": {
        "actionType": "JSFunction",
        "method": "disableAutoLayout",
        "deps": "js/Awp0WorkflowDesignerAutoLayoutHandler",
        "inputData": {
          "ctx": "{{ctx}}",
          "layoutOption": "FixedLayout"
        },
        "events": {
          "success": [
            {
              "name": "workflowDesigner.AutoLayoutToggled",
              "condition": "!ctx.workflowDgmCtx.diagram.isSwitchingBetweenAutoLayout"
            },
            {
              "name": "workflowDesigner.AutoLayoutAlreadyToggled",
              "condition": "ctx.workflowDgmCtx.diagram.isSwitchingBetweenAutoLayout"
            },
            {
              "name": "workflowDesigner.resetConnectionMode",
              "condition": "!ctx.workflowDgmCtx.diagram.isSwitchingBetweenAutoLayout"
            }
          ]
        }
      },
      "applySelectedAutoLayoutOnDesigner": {
        "actionType": "JSFunction",
        "method": "setActiveLayout",
        "deps": "js/awGraphService",
        "inputData": {
          "graphModel": "{{ctx.graph.graphModel}}",
          "layoutOption": "{{ctx.workflowDgmCtx.diagram.layoutOption}}"
        }
      },
      "openTaskPALAssignmentPanelAction": {
        "actionType": "Event",
        "method": "Event",
        "inputData": {
          "events": [
            {
              "name": "workflow.openTaskAssignmentPanel"
            }
          ]
        }
      },
      "actionImportPAL": {
        "actionType": "JSFunction",
        "method": "activateCommandPanel",
        "deps": "js/commandPanel.service",
        "inputData": {
          "commandId": "Awp0PALImport",
          "location": "aw_toolsAndInfo"
        }
      },
      "actionExportPAL": {
        "actionType": "JSFunction",
        "method": "activateCommandPanel",
        "deps": "js/commandPanel.service",
        "inputData": {
          "commandId": "Awp0PALExport",
          "location": "aw_toolsAndInfo"
        }
      },
      "addUsersTemplateAssignmentAction": {
        "actionType": "JSFunction",
        "method": "openUserPanel",
        "inputData": {
          "value": "{{commandContext}}"
        },
        "events": {
          "success": [
            {
              "name": "awPanel.navigate",
              "eventData": {
                "destPanelId": "Users",
                "title": "{{i18n.Add_Title}}",
                "supportGoBack": true,
                "recreatePanel": true
              }
            }
          ]
        },
        "deps": "js/Awp0TemplateAssignmentPanelService"
      },
      "removeUsersTemplateAssignmentAction": {
        "actionType": "JSFunction",
        "method": "removeUsersTemplateAssignment",
        "inputData": {
          "commandContext": "{{commandContext}}",
          "selected": "{{commandContext.selectedObjects}}"
        },
        "deps": "js/Awp0TemplateAssignmentPanelService"
      },
      "cancelTemplateAssignmentAction": {
        "actionType": "JSFunction",
        "method": "cancelTemplateAssignments",
        "inputData": {},
        "deps": "js/Awp0TemplateAssignment"
      },
      "createProcessAssignmentListAction": {
        "actionType": "JSFunction",
        "method": "activateCommandPanel",
        "deps": "js/commandPanel.service",
        "inputData": {
          "commandId": "Awp0CreateAssignmentList",
          "location": "aw_toolsAndInfo"
        }
      },
      "startEditTemplateAssignment": {
        "actionType": "JSFunction",
        "method": "startEditTemplateAssignment",
        "inputData": {},
        "deps": "js/Awp0TemplateAssignment"
      },
      "saveTemplateAssignmentAction": {
        "actionType": "JSFunction",
        "method": "saveEdits",
        "inputData": {},
        "deps": "js/Awp0WorkflowAssignmentEditService"
      },
      "deletePALAction": {
        "actionType": "TcSoaService",
        "serviceName": "Core-2006-03-DataManagement",
        "method": "deleteObjects",
        "inputData": {
          "objects": [
            "{{function:getPALObjectToDelete}}"
          ]
        },
        "events": {
          "success": [
            {
              "name": "primaryWorkarea.reset"
            }
          ]
        },
        "actionMessages": {
          "failure": [
            {
              "message": "soaFailureMessage"
            }
          ]
        },
        "deps": "js/Awp0PalMgmtService"
      },
      "removePALAction": {
        "actionType": "Event",
        "method": "Event",
        "inputData": {
          "events": [
            {
              "name": "confirmPALDeleteEvent"
            }
          ]
        }
      }
    },
    "functions": {
      "getActionableObject": {
        "functionName": "getActionableObject",
        "parameters": [
          "{{ctx}}"
        ]
      },
      "getClaimSupportingObject": {
        "functionName": "getClaimSupportingObject",
        "parameters": [
          "{{ctx}}"
        ]
      },
      "getSubscribeInboxPropertyInput": {
        "functionName": "getSubscribeInboxPropertyInput",
        "parameters": [
          "{{ctx.locationContext.modelObject}}",
          "{{ctx.mselected}}"
        ]
      },
      "getTaskParticipantsToremove": {
        "functionName": "getTaskParticipantsToremove",
        "parameters": [
          "{{ctx.mselected}}"
        ]
      },
      "getWsoList": {
        "functionName": "getWsoList",
        "parameters": [
          "{{ctx.pselected}}"
        ]
      },
      "getRemoveParticipantPageRefreshNeeded": {
        "functionName": "getRemoveParticipantPageRefreshNeeded",
        "parameters": [
          "{{data.selectedObject[0]}}",
          "{{ctx.mselected}}"
        ]
      },
      "getRemoveEdgeInput": {
        "functionName": "getRemoveEdgeInput",
        "parameters": [
          "{{ctx}}",
          "{{ctx.workflowDgmCtx.selectedEdges}}",
          "{{ctx.xrtSummaryContextObject}}"
        ]
      },
      "getRemoveNodeInput": {
        "functionName": "getRemoveNodeInput",
        "parameters": [
          "{{ctx}}",
          "{{ctx.workflowDgmCtx.selectedNodes}}",
          "{{ctx.xrtSummaryContextObject}}"
        ]
      },
      "getTemplateUpdateUid": {
        "functionName": "getValidTemplateObjectUid",
        "parameters": [
          "{{ctx.selected}}",
          "EPMSelectSignoffTaskTemplate"
        ]
      },
      "getRemoveFormHandlerObjects": {
        "functionName": "getRemoveFormHandlerObjects",
        "parameters": [
          "{{commandContext.selectedObjects[0]}}"
        ]
      },
      "updatePalInputStructure": {
        "functionName": "updatePalInputStructure",
        "parameters": [
          "{{ctx.workflowPalData.palDataMap}}",
          "{{ctx.workflowPalData.processTemplateObject}}",
          "{{ctx.xrtSummaryContextObject}}",
          "{{ctx.workflowPalData.isShared}}"
        ]
      },
      "getPALObjectToDelete": {
        "functionName": "getPALObjectToDelete",
        "parameters": [
          "{{ctx}}"
        ]
      }
    },
    "preferences": [
      "WRKFLW_Hide_Perform_Task_Command_ToolAndInfo",
      "WRKFLW_use_fixed_position",
      "WRKFLW_save_node_positions",
      "EPM_enable_apply_template_changes",
      "EPM_ARG_target_user_group_list_separator",
      "DISPATCHER_CLIENT_INSTALLED"
    ],
    "onEvent": [
      {
        "eventId": "navigateToInboxEvent",
        "action": "navigateToInboxAction"
      },
      {
        "eventId": "inbox.markAsRead",
        "action": "markAsReadAction"
      },
      {
        "eventId": "inbox.removeSurrogateEvent",
        "action": "removeSurrogateAction"
      },
      {
        "eventId": "inbox.openTaskMarkAsRead",
        "action": "openTaskMarkAsReadAction"
      },
      {
        "eventId": "reassignTask.OpenReassignPanel",
        "action": "openReassignTaskPanel"
      },
      {
        "eventId": "inbox.invokePerformTaskCommandHandler",
        "action": "validationAndActivatePerformTaskPanel"
      },
      {
        "eventId": "removeSubscribedResourcePools",
        "action": "removeSubscribedResourcePools"
      },
      {
        "eventId": "deleteRelationInboxes",
        "action": "deleteRelationInboxes"
      },
      {
        "eventId": "reassignTask.loadSignoffProperties",
        "action": "loadSignoffProperties"
      },
      {
        "eventId": "claimSignoffObject.propertiesLoaded",
        "action": "ClaimTask"
      },
      {
        "eventId": "reassignTask.launchComponentsPanel",
        "action": "submitToHostAction"
      },
      {
        "eventId": "confirmTaskDeleteEvent",
        "message": "singleTaskDeleteConfirmationMessage"
      },
      {
        "eventId": "confirmMultipleTaskDeleteEvent",
        "message": "multipleTaskDeleteConfirmationMessage"
      },
      {
        "eventId": "workflow.initiateTaskDeleteAction",
        "action": "initiateTaskDeleteAction"
      },
      {
        "eventId": "remoteInbox.removeSubscribedInboxes",
        "action": "removeSubscribedInboxesInternal"
      },
      {
        "eventId": "submitWorkflow.adaptedInputs",
        "action": "getPropsForSubmitToWorkflow"
      },
      {
        "eventId": "workflow.validateForCreatingWorkflowPresenterEvent",
        "action": "validateForCreatingWorkflowPresenterAction"
      },
      {
        "eventId": "workflow.getTypesFromBO",
        "action": "getTypeFromBOConstant"
      },
      {
        "eventId": "workflow.getSelectedBOTypeName",
        "action": "getSelectedBOTypeName"
      },
      {
        "eventId": "isOktoRemoveItemRevisionParticipant",
        "action": "isOktoRemoveItemRevisionParticipant"
      },
      {
        "eventId": "removeParticipants",
        "action": "removeParticipants"
      },
      {
        "eventId": "removeTaskParticipants",
        "action": "removeTaskParticipants"
      },
      {
        "eventId": "removeTaskParticipantsInternal",
        "action": "removeTaskParticipantsInternal"
      },
      {
        "eventId": "replaceParticipantsInternal",
        "action": "replaceParticipantsInternal"
      },
      {
        "eventId": "openReplaceParticipantPanel",
        "action": "openReplaceParticipantPanel"
      },
      {
        "eventId": "addParticipants",
        "action": "addParticipants"
      },
      {
        "eventId": "getItemRevisionObjectForAdd",
        "action": "getItemRevisionObjectForAdd"
      },
      {
        "eventId": "getDesiredPropertiesforAddParticipants",
        "action": "getDesiredPropertiesforAddParticipants"
      },
      {
        "eventId": "addParticipantsTasks",
        "action": "addParticipantsTasks"
      },
      {
        "eventId": "workflowViewer.AutoLayoutAlreadyToggled",
        "action": "applySelectedAutoLayoutOnViewer"
      },
      {
        "eventId": "inboxPWA.cancelEdits",
        "action": "inboxPWACancelEdits"
      },
      {
        "eventId": "inboxPWA.savelEditsAndReset",
        "action": "inboxPWASaveEditsAndReset"
      },
      {
        "eventId": "workflow.openSubProcessPanel",
        "action": "createWorkflowSubProcessInternal"
      },
      {
        "eventId": "workflow.loadSubmittableObjectTypes",
        "action": "loadSubmittableObjectTypes"
      },
      {
        "eventId": "workflow.openProcessTargetPanel",
        "action": "openProcessAttachmentPanel"
      },
      {
        "eventId": "closeAddTargetPanel",
        "action": "closeAddTargetPanel"
      },
      {
        "eventId": "workflow.closeAddReferencePanel",
        "action": "closeAddReferencePanel"
      },
      {
        "eventId": "confirmTemplateDeleteSummaryVisibleEvent",
        "message": "deleteTemplateConfirmationSummaryVisibleMessage"
      },
      {
        "eventId": "confirmTemplateDeleteSummaryHiddenEvent",
        "message": "deleteTemplateConfirmationSummaryHiddenMessage"
      },
      {
        "eventId": "confirmTemplateStartEditSummaryVisibleEvent",
        "message": "startEditTemplateSummaryVisibleConfirmationMessage"
      },
      {
        "eventId": "confirmSaveTemplatePositionEvent",
        "message": "saveTemplatePositionConfirmationMessage"
      },
      {
        "eventId": "confirmTemplateStartEditSummaryHiddenEvent",
        "message": "startEditTemplateSummaryHiddenConfirmationMessage"
      },
      {
        "eventId": "createTemplateSummaryVisibleEvent",
        "action": "createTemplateSummaryVisibleAction"
      },
      {
        "eventId": "createTemplateSummaryHiddenEvent",
        "action": "createTemplateSummaryHiddenAction"
      },
      {
        "eventId": "saveTemplateSummaryVisibleEvent",
        "action": "saveTemplateSummaryVisibleAction"
      },
      {
        "eventId": "saveTemplateSummaryHiddenEvent",
        "action": "saveTemplateSummaryHiddenAction"
      },
      {
        "eventId": "workflowDesigner.selectEditContext",
        "action": "registerEditObjectContext"
      },
      {
        "eventId": "workflowDesigner.startEdit",
        "condition": "ctx.xrtSummaryContextObject && ctx.workflowDgmCtx && ctx.workflowDgmCtx.diagram && ctx.workflowDgmCtx.diagram.layoutOption",
        "action": "updateCtxLayoutInfo"
      },
      {
        "eventId": "workflowDesigner.startEdit",
        "action": "updateCtxEditInfo"
      },
      {
        "eventId": "workflowDesigner.endEdit",
        "action": "resetCtxEditInfo"
      },
      {
        "eventId": "workflowDesigner.removeTaskTemplateNode",
        "action": "removeTaskTemplateNodeAction"
      },
      {
        "eventId": "workflowDesigner.removeGraphNode",
        "action": "removeGraphNode"
      },
      {
        "eventId": "workflowDesigner.removeTaskTemplateEdge",
        "action": "removeTaskTemplateEdgeAction"
      },
      {
        "eventId": "workflowDesigner.removeGraphEdge",
        "action": "removeGraphEdge"
      },
      {
        "eventId": "workflowDesigner.removeTaskTemplateNodeAndEdges",
        "action": "removeTaskTemplateNodeEdgeAction"
      },
      {
        "eventId": "openNewlyCreatedTemplateEvent",
        "action": "openNewlyCreatedTemplateAction"
      },
      {
        "eventId": "workflowDesigner.updateNotificationTabContextAddCase",
        "action": "updateNotificationTabContextAddCase",
        "cacheEventData": true
      },
      {
        "eventId": "workflowDesigner.updateNotificationTabContextUpdateCase",
        "action": "updateNotificationTabContextUpdateCase",
        "cacheEventData": true
      },
      {
        "eventId": "populateArgumentNameslist",
        "action": "populateArgumentNameslist"
      },
      {
        "eventId": "populateArgumentNameAndValues",
        "action": "populateArgumentNameAndValues"
      },
      {
        "eventId": "refreshActionHandlerTable",
        "action": "refreshActionHandlerTable"
      },
      {
        "eventId": "refreshRuleHandlerTable",
        "action": "refreshRuleHandlerTable"
      },
      {
        "eventId": "refreshRuleTable",
        "action": "refreshRuleTable"
      },
      {
        "eventId": "refreshActionTable",
        "action": "refreshActionTable"
      },
      {
        "eventId": "getUpdatedActionHandlerTable",
        "action": "getIndexOfSelectedActionHandler"
      },
      {
        "eventId": "getUpdatedRuleHandlerTable",
        "action": "getIndexOfSelectedRuleHandler"
      },
      {
        "eventId": "workflowDesigner.updateAssignmentTabContextAddCase",
        "action": "updateAssignmentTabContextAddCase",
        "cacheEventData": true
      },
      {
        "eventId": "workflowDesigner.updateAssignmentTabContextUpdateCase",
        "action": "updateAssignmentTabContextUpdateCase",
        "cacheEventData": true
      },
      {
        "eventId": "workflowDesigner.updateFormTabContextUpdateCase",
        "action": "updateFormTabContextUpdateCase",
        "cacheEventData": true
      },
      {
        "eventId": "workflowDesigner.templateOnline",
        "action": "saveTemplateAction"
      },
      {
        "eventId": "endEditSummaryVisibleEvent",
        "action": "endEditSummaryVisibleAction"
      },
      {
        "eventId": "endEditSummaryHiddenEvent",
        "action": "endEditSummaryHiddenAction"
      },
      {
        "eventId": "emptyValueTextBox",
        "action": "emptyValueTextBox"
      },
      {
        "eventId": "unregisterPasteHandlerContext",
        "action": "unregisterPasteHandlerContext"
      },
      {
        "eventId": "automaticApplyTemplateToProcessesInBackgroundVisibleEvent",
        "action": "automaticApplyTemplateToProcessesInBackground"
      },
      {
        "eventId": "automaticApplyTemplateToProcessesInBackgroundHiddenEvent",
        "action": "automaticApplyTemplateToProcessesInBackgroundHidden"
      },
      {
        "eventId": "applyTemplateToProcessesOptionHiddenEvent",
        "message": "applyTemplateToProcessesOptionMessageForHidden"
      },
      {
        "eventId": "applyTemplateToProcessesOptionVisibleEvent",
        "message": "applyTemplateToProcessesOptionMessageForVisible"
      },
      {
        "eventId": "workflowDesigner.endEditAfterApplyTemplateToProcess",
        "action": "resetCtxEditInfoAfterApplyTemplateToProcess"
      },
      {
        "eventId": "saveTemplateAndApplyToProcessSummaryVisibleEvent",
        "action": "saveTemplateAndApplyToProcessSummaryVisibleAction"
      },
      {
        "eventId": "saveTemplateAndApplyToProcessInBackgroundHiddenEvent",
        "action": "saveTemplateAndApplyToProcessSummaryHiddenAction"
      },
      {
        "eventId": "applyTemplateToProcessPartialSuccessfulMsgEvent",
        "action": "applyTemplateToProcessPartialSuccessfulMsgAction"
      },
      {
        "eventId": "workflowDesigner.AutoLayoutAlreadyToggled",
        "action": "applySelectedAutoLayoutOnDesigner"
      },
      {
        "eventId": "applyTemplateToProcessesOptionInForegroundHiddenEvent",
        "message": "applyTemplateToProcessesOptionInForegroundHidden"
      },
      {
        "eventId": "applyTemplateToProcessesOptionInForegroundVisibleEvent",
        "message": "applyTemplateToProcessesOptionInForegroundVisible"
      },
      {
        "eventId": "automaticApplyTemplateToProcessesInForegroundVisibleEvent",
        "action": "automaticApplyTemplateToProcessesInForeground"
      },
      {
        "eventId": "automaticApplyTemplateToProcessesInForegroundHiddenEvent",
        "action": "automaticApplyTemplateToProcessesInForegroundHidden"
      },
      {
        "eventId": "confirmPALDeleteEvent",
        "condition": "!ctx.xrtSummaryContextObject && ctx.selected",
        "message": "deletePALConfirmationMessage"
      },
      {
        "eventId": "confirmPALDeleteEvent",
        "condition": "ctx.xrtSummaryContextObject",
        "message": "deletePALXRTConfirmationMessage"
      }
    ],
    "messages": {
      "copyUserSingleSuccessful": {
        "messageType": "INFO",
        "messageText": "{{i18n.copySuccessful}}",
        "messageTextParams": [
          "{{ctx.mselected[0].props.awp0User.uiValue}}"
        ]
      },
      "copyUserMultipleSuccessful": {
        "messageType": "INFO",
        "messageText": "{{i18n.copyMultipleSuccessful}}",
        "messageTextParams": [
          "{{ctx.mselected.length}}"
        ]
      },
      "singleTaskDeleteConfirmationMessage": {
        "messageType": "WARNING",
        "messageText": "{{i18n.singleWorkflowDeleteConfirmationMessage}}",
        "messageTextParams": [
          "{{data.deletedTaskObjects[0].props.object_string.uiValues[0]}}"
        ],
        "navigationOptions": [
          {
            "option": "Cancel",
            "text": "{{i18n.cancel}}"
          },
          {
            "option": "Delete",
            "text": "{{i18n.delete}}",
            "action": "performTaskDelete"
          }
        ]
      },
      "multipleTaskDeleteConfirmationMessage": {
        "messageType": "WARNING",
        "messageText": "{{i18n.multiWorkflowDeleteConfirmationMessage}}",
        "messageTextParams": [
          "{{data.deletedTaskObjects.length}}"
        ],
        "navigationOptions": [
          {
            "option": "Cancel",
            "text": "{{i18n.cancel}}"
          },
          {
            "option": "Delete",
            "text": "{{i18n.delete}}",
            "action": "performTaskDelete"
          }
        ]
      },
      "deleteTaskObjectsSingleFailureMessage": {
        "messageType": "ERROR",
        "messageText": "{{i18n.deleteSingleFailureMessage}}",
        "messageTextParams": [
          "{{data.deletedTaskObjects[0].props.object_string.uiValues[0]}}",
          "{{data.deleteObjectsPartialErrors[0].errorValues[0].message}}"
        ]
      },
      "deleteTaskObjectsMultipleFailureMessage": {
        "expression": {
          "failureCount": "objectsFailedToDelete"
        },
        "messageType": "ERROR",
        "messageKey": "deleteObjectsNotyError",
        "messageTextParams": [
          "{{expression.failureCount}}",
          "{{ctx.mselected.length}}"
        ],
        "messageData": {
          "partialErrors": "{{data.deleteObjectsPartialErrors}}"
        }
      },
      "inboxServerError": {
        "messageType": "ERROR",
        "messageText": "{{errorCode}}"
      },
      "serverError": {
        "messageType": "ERROR",
        "messageText": "{{errorCode}}"
      },
      "deleteTemplateSummaryVisibleActionFailure": {
        "messageType": "ERROR",
        "messageText": "{{errorCode}}"
      },
      "deleteTemplateConfirmationSummaryVisibleMessage": {
        "messageType": "WARNING",
        "messageText": "{{i18n.deletePALConfirmationMessage}}",
        "messageTextParams": [
          "{{ctx.xrtSummaryContextObject}}"
        ],
        "navigationOptions": [
          {
            "option": "Cancel",
            "text": "{{i18n.cancel}}"
          },
          {
            "option": "Delete",
            "text": "{{i18n.delete}}",
            "action": "deleteTemplateSummaryVisibleAction"
          }
        ]
      },
      "deleteTemplateConfirmationSummaryHiddenMessage": {
        "messageType": "WARNING",
        "messageText": "{{i18n.deletePALConfirmationMessage}}",
        "messageTextParams": [
          "{{ctx.selected}}"
        ],
        "navigationOptions": [
          {
            "option": "Cancel",
            "text": "{{i18n.cancel}}"
          },
          {
            "option": "Delete",
            "text": "{{i18n.delete}}",
            "action": "deleteTemplateSummaryHiddenAction"
          }
        ]
      },
      "startEditTemplateSummaryVisibleConfirmationMessage": {
        "messageType": "WARNING",
        "messageText": "{{i18n.processTemplateOfflineConfirmation}}",
        "navigationOptions": [
          {
            "option": "Cancel",
            "text": "{{i18n.cancel}}"
          },
          {
            "option": "Offline",
            "text": "{{i18n.offlineOption}}",
            "action": "obsoleteAndCreateTemplateSummaryVisibleAction"
          },
          {
            "option": "Online",
            "text": "{{i18n.onlineOption}}",
            "action": "createTemplateSummaryVisibleAction"
          }
        ]
      },
      "startEditTemplateSummaryHiddenConfirmationMessage": {
        "messageType": "WARNING",
        "messageText": "{{i18n.processTemplateOfflineConfirmation}}",
        "navigationOptions": [
          {
            "option": "Cancel",
            "text": "{{i18n.cancel}}"
          },
          {
            "option": "Offline",
            "text": "{{i18n.offlineOption}}",
            "action": "obsoleteAndCreateTemplateSummaryHiddenAction"
          },
          {
            "option": "Online",
            "text": "{{i18n.onlineOption}}",
            "action": "createTemplateSummaryHiddenAction"
          }
        ]
      },
      "saveTemplatePositionConfirmationMessage": {
        "messageType": "WARNING",
        "messageText": "{{i18n.saveTemplatePositionConfirmation}}",
        "navigationOptions": [
          {
            "option": "Cancel",
            "text": "{{i18n.cancel}}"
          },
          {
            "option": "Save",
            "text": "{{i18n.save}}",
            "action": "saveGraphPositionsAction"
          }
        ]
      },
      "applyTemplateToProcessesOptionMessageForVisible": {
        "messageType": "WARNING",
        "messageText": "{{i18n.applyTemplateToProcessesConfirmation}}",
        "navigationOptions": [
          {
            "option": "Cancel",
            "text": "{{i18n.cancel}}"
          },
          {
            "option": "No",
            "text": "{{i18n.no}}",
            "action": "saveTemplateSummaryVisibleAction"
          },
          {
            "option": "Yes",
            "text": "{{i18n.yes}}",
            "action": "saveTemplateAndApplyToProcessSummaryVisibleAction"
          }
        ]
      },
      "applyTemplateToProcessesOptionMessageForHidden": {
        "messageType": "WARNING",
        "messageText": "{{i18n.applyTemplateToProcessesConfirmation}}",
        "navigationOptions": [
          {
            "option": "Cancel",
            "text": "{{i18n.cancel}}"
          },
          {
            "option": "No",
            "text": "{{i18n.no}}",
            "action": "saveTemplateSummaryHiddenAction"
          },
          {
            "option": "Yes",
            "text": "{{i18n.yes}}",
            "action": "saveTemplateAndApplyToProcessSummaryHiddenAction"
          }
        ]
      },
      "copyActionHandlerSuccessfulMsg": {
        "messageType": "INFO",
        "messageText": "{{i18n.classificationCopySuccess}}",
        "messageTextParams": [
          "{{ctx.handlerTableData.dataProviders.actionHandlerDataProvider.selectedObjects[0]}}"
        ]
      },
      "copyRuleHandlerSuccessfulMsg": {
        "messageType": "INFO",
        "messageText": "{{i18n.classificationCopySuccess}}",
        "messageTextParams": [
          "{{ctx.handlerTableData.dataProviders.ruleHandlerDataProvider.selectedObjects[0]}}"
        ]
      },
      "applyTemplateToProcessSuccessfulMsg": {
        "messageType": "INFO",
        "messageText": "{{i18n.applyTemplateToProcessSuccessfulMsg}}",
        "messageTextParams": [
          "{{ctx.updatedProcesses.length}}"
        ]
      },
      "noProcessFoundToApplyTemplateChanges": {
        "messageType": "INFO",
        "messageText": "{{i18n.noProcessFoundToApplyTemplateChanges}}"
      },
      "applyTemplateToProcessesOptionInForegroundVisible": {
        "messageType": "WARNING",
        "messageText": "{{i18n.applyTemplateToProcessesForegroundConfirmation}}",
        "navigationOptions": [
          {
            "option": "Cancel",
            "text": "{{i18n.cancel}}"
          },
          {
            "option": "No",
            "text": "{{i18n.no}}",
            "action": "saveTemplateSummaryVisibleAction"
          },
          {
            "option": "Yes",
            "text": "{{i18n.yes}}",
            "action": "saveTemplateAndApplyToProcessSummaryVisibleAction"
          }
        ]
      },
      "applyTemplateToProcessesOptionInForegroundHidden": {
        "messageType": "WARNING",
        "messageText": "{{i18n.applyTemplateToProcessesForegroundConfirmation}}",
        "navigationOptions": [
          {
            "option": "Cancel",
            "text": "{{i18n.cancel}}"
          },
          {
            "option": "No",
            "text": "{{i18n.no}}",
            "action": "saveTemplateSummaryHiddenAction"
          },
          {
            "option": "Yes",
            "text": "{{i18n.yes}}",
            "action": "saveTemplateAndApplyToProcessSummaryHiddenAction"
          }
        ]
      },
      "deletePALConfirmationMessage": {
        "messageType": "WARNING",
        "messageText": "{{i18n.deletePALConfirmationMessage}}",
        "messageTextParams": [
          "{{ctx.selected}}"
        ],
        "navigationOptions": [
          {
            "option": "Cancel",
            "text": "{{i18n.cancel}}"
          },
          {
            "option": "Delete",
            "text": "{{i18n.removePAL}}",
            "action": "deletePALAction"
          }
        ]
      },
      "deletePALXRTConfirmationMessage": {
        "messageType": "WARNING",
        "messageText": "{{i18n.deletePALConfirmationMessage}}",
        "messageTextParams": [
          "{{ctx.xrtSummaryContextObject}}"
        ],
        "navigationOptions": [
          {
            "option": "Cancel",
            "text": "{{i18n.cancel}}"
          },
          {
            "option": "Delete",
            "text": "{{i18n.removePAL}}",
            "action": "deletePALAction"
          }
        ]
      },
      "soaFailureMessage": {
        "messageType": "ERROR",
        "messageText": "{{errorCode}}"
      }
    },
    "conditions": {
      "workflowOpenConditionActive": {
        "expression": {
          "$and": [
            {
              "$source": "ctx.selected",
              "$query": {
                "$source": "modelType.typeHierarchyArray",
                "$query": {
                  "$in": [
                    "Signoff",
                    "EPMTask"
                  ]
                }
              }
            }
          ]
        }
      },
      "awp0PromoteTaskCommandCondition": {
        "expression": "ctx.visibleServerCommands.Awp0PromoteTask"
      },
      "awp0OutOfOfficeCommandCondition": {
        "expression": "ctx.visibleServerCommands.Awp0OutOfOffice"
      },
      "awp0OpenInboxLocationCommandCondition": {
        "expression": "ctx.visibleServerCommands.Awp0OpenInboxLocation"
      },
      "awp0InboxFiltersCommandCondition": {
        "expression": "(ctx.locationContext['ActiveWorkspace:Location'] === 'com.siemens.splm.client.inbox.tasksLocation') && !conditions.isRemoteInboxSubLocation && (!ctx.editInProgress || ctx.editInProgress === false) && ( ctx.search && (ctx.search.totalFound > 0 || ctx.search.criteria.searchString !== ''))"
      },
      "isRemoteInboxSubLocation": {
        "expression": "ctx.locationContext['ActiveWorkspace:SubLocation'] === 'remoteInboxes'"
      },
      "Awp0UserAssignmentOpenConditionActive": {
        "expression": "( ctx.selected.type === 'Awp0UserAssignment' || ctx.selected.modelType.typeHierarchyArray.indexOf('Awp0UserAssignment') > -1  )"
      },
      "isAddReviewProfileSignoffCommandVisible": {
        "expression": "commandContext.vmo.modelType.typeHierarchyArray.indexOf( 'EPMSignoffProfile' ) > -1 && commandContext.vmo.props.number_of_signoffs.dbValues[0] > 0"
      },
      "isRemoveProfileSignoffCommandVisible": {
        "expression": "commandContext.vmo.modelType.typeHierarchyArray.indexOf( 'EPMSignoffProfile' ) <= -1"
      },
      "isReviewAdhocSignoffObjectsSelected": {
        "expression": "(commandContext.isReviewAdhocRemoveVisible)"
      },
      "isReviewProfileSignoffObjectsSelected": {
        "expression": "(commandContext.isProfileRemoveVisible)"
      },
      "addSurrogateCmdCond": {
        "expression": "ctx.visibleServerCommands.Awp0AddSurrogate"
      },
      "addResPoolSubCmdCond": {
        "expression": "(ctx.mselected[0].type !== 'ResourcePool' && ctx.selected.uid == ctx.user.uid)"
      },
      "removeSubResPool": {
        "expression": "(ctx.mselected[0].type === 'ResourcePool')"
      },
      "Awp0UserAssignmentShowObjectCellCondition": {
        "expression": {
          "$and": [
            {
              "$source": "conditions.cmdAwp0ShowObjectCellBaseVisibleCondition",
              "$query": {
                "$eq": true
              }
            },
            {
              "$source": "commandContext.vmo.props.awp0User.dbValues.length",
              "$query": {
                "$eq": 1
              }
            }
          ]
        }
      },
      "isAcknowledgeAdhocSignoffObjectsSelected": {
        "expression": "(commandContext.isAcknowledgeAdhocRemoveVisible)"
      },
      "isNotifyAdhocSignoffObjectsSelected": {
        "expression": "(commandContext.isNotifyAdhocRemoveVisible)"
      },
      "Awp0ReassignTaskCommandCondition": {
        "expression": "ctx.visibleServerCommands.Awp0ReassignTask && !((ctx.selected.props.parent_task.dbValues[0]==='' && ctx.pselected) && (ctx.xrtPageContext.secondaryXrtPageID ==='tc_xrt_Workflow' || ctx.xrtPageContext.primaryXrtPageID === 'tc_xrt_Workflow'))"
      },
      "releaseCmdCond": {
        "expression": "ctx.visibleServerCommands.Awp0Release"
      },
      "isSurrogate": {
        "expression": "ctx.mselected && ctx.mselected.length > 0 && ctx.mselected[0].type == 'Awp0UserAssignment'"
      },
      "standInCmdCond": {
        "expression": "ctx.visibleServerCommands.Awp0StandIn"
      },
      "awp0AddReviewerCmdCond": {
        "expression": "ctx.visibleServerCommands.Awp0AddReviewer && (ctx.xrtPageContext.secondaryXrtPageID ==='tc_xrt_Reviewers' || ctx.xrtPageContext.primaryXrtPageID ==='tc_xrt_Reviewers')"
      },
      "removeSurrogate": {
        "expression": "ctx.visibleServerCommands.Awp0RemoveSurrogate && ( ctx.locationContext.modelObject && ctx.locationContext.modelObject.props.fnd0HasManageSurrPrivilege.dbValues[0] === '1')"
      },
      "isTcVersion115OrLaterWorkflow": {
        "expression": "(ctx.tcSessionData.tcMajorVersion > 11 || (ctx.tcSessionData.tcMajorVersion === 11 && (ctx.tcSessionData.tcMinorVersion > 2 || (ctx.tcSessionData.tcMinorVersion === 2 && ctx.tcSessionData.tcQRMNumber >= 6))))"
      },
      "isEPMTaskOrSignoffOpened": {
        "expression": "ctx.locationContext.modelObject.modelType.typeHierarchyArray.indexOf('EPMTask') > -1 || ctx.locationContext.modelObject.modelType.typeHierarchyArray.indexOf('Signoff') > -1"
      },
      "isEPMTaskOpenedAndWorkflowTab": {
        "expression": "(data.preferences.WRKFLW_Hide_Perform_Task_Command_ToolAndInfo[0] === 'false' || (ctx.locationContext['ActiveWorkspace:Location'] === 'com.siemens.splm.clientfx.tcui.xrt.showObjectLocation' && ( ctx.locationContext.modelObject && conditions.isEPMTaskOrSignoffOpened ) &&  ( (ctx.pselected && ctx.xrtPageContext.primaryXrtPageID ==='tc_xrt_Workflow') || ( conditions.isParentEPMTaskOrSignoff && conditions.isSelectedEPMTaskOrSignoff)))) && ctx.visibleServerCommands.Awp0PerformTask"
      },
      "isNonWorkflowObjectSelectedInPrimaryWorkArea": {
        "expression": "( (ctx.pselected && (ctx.pselected.modelType.typeHierarchyArray.indexOf('WorkspaceObject') > -1 && ctx.pselected.modelType.typeHierarchyArray.indexOf('Folder') === -1) && ctx.pselected.props.fnd0MyWorkflowTasks.dbValues.length > 0 )||(ctx.selected && (ctx.selected.modelType.typeHierarchyArray.indexOf('EPMTask') === -1 && ctx.selected.modelType.typeHierarchyArray.indexOf('Signoff') === -1 ) && (ctx.selected.modelType.typeHierarchyArray.indexOf('WorkspaceObject') > -1 && ctx.selected.modelType.typeHierarchyArray.indexOf('Folder') === -1) && ctx.selected.props.fnd0MyWorkflowTasks.dbValues.length > 0)) && ctx.xrtPageContext.secondaryXrtPageID !=='tc_xrt_Workflow'"
      },
      "isNonWorkflowObjectOpened": {
        "expression": "ctx.locationContext['ActiveWorkspace:Location'] === 'com.siemens.splm.clientfx.tcui.xrt.showObjectLocation' &&( ctx.locationContext.modelObject && !conditions.isEPMTaskOrSignoffOpened && (( !conditions.isTcVersion115OrLaterWorkflow && (ctx.locationContext.modelObject.modelType.typeHierarchyArray.indexOf('WorkspaceObject') > -1 && ctx.locationContext.modelObject.modelType.typeHierarchyArray.indexOf('Folder') === -1) && ctx.locationContext.modelObject.props.fnd0MyWorkflowTasks.dbValues.length > 0) || ( conditions.isNonWorkflowObjectSelectedInPrimaryWorkArea))) && ctx.visibleServerCommands.Awp0PerformTask && ctx.xrtPageContext.primaryXrtPageID !== 'tc_xrt_Workflow'"
      },
      "isOtherThanShowObjectOrInboxLocation": {
        "expression": "ctx.locationContext['ActiveWorkspace:Location'] !== 'com.siemens.splm.client.inbox.tasksLocation' && !ctx.locationContext.modelObject &&  ( (ctx.pselected && ctx.pselected.props.fnd0MyWorkflowTasks.dbValues.length > 0) || ctx.selected.props.fnd0MyWorkflowTasks.dbValues.length > 0) && ctx.visibleServerCommands.Awp0PerformTask && ctx.xrtPageContext.secondaryXrtPageID !=='tc_xrt_Workflow'"
      },
      "inInboxLocationAndOtherThanSummaryView": {
        "expression": "ctx.locationContext['ActiveWorkspace:Location'] === 'com.siemens.splm.client.inbox.tasksLocation' &&(data.preferences.WRKFLW_Hide_Perform_Task_Command_ToolAndInfo[0] === 'false' || !(ctx.ViewModeContext.ViewModeContext === 'TableSummaryView' || ctx.ViewModeContext.ViewModeContext === 'SummaryView')) && ctx.visibleServerCommands.Awp0PerformTask"
      },
      "inInboxLocationAndSummaryView": {
        "expression": "ctx.locationContext['ActiveWorkspace:Location'] === 'com.siemens.splm.client.inbox.tasksLocation' && (data.preferences.WRKFLW_Hide_Perform_Task_Command_ToolAndInfo[0] === 'false'|| ((ctx.ViewModeContext.ViewModeContext === 'TableSummaryView' || ctx.ViewModeContext.ViewModeContext === 'SummaryView') && ( ( (ctx.pselected && ctx.xrtPageContext.secondaryXrtPageID ==='tc_xrt_Workflow') || ( conditions.isParentEPMTaskOrSignoff && conditions.isSelectedEPMTaskOrSignoff))))) && ctx.visibleServerCommands.Awp0PerformTask"
      },
      "isParentEPMTaskOrSignoff": {
        "expression": "ctx.pselected && (ctx.pselected.modelType.typeHierarchyArray.indexOf('EPMTask') > -1 || ctx.pselected.modelType.typeHierarchyArray.indexOf('Signoff') > -1 )"
      },
      "isSelectedEPMTaskOrSignoff": {
        "expression": "ctx.selected && (ctx.selected.modelType.typeHierarchyArray.indexOf('EPMTask') > -1 || ctx.selected.modelType.typeHierarchyArray.indexOf('Signoff') > -1 )"
      },
      "isContentTabOpened": {
        "expression": "ctx.xrtPageContext.primaryXrtPageID === 'tc_xrt_Content' && ctx.visibleServerCommands.Awp0PerformTask && ctx.xrtPageContext.secondaryXrtPageID !=='tc_xrt_Workflow' "
      },
      "isChangeObjectSelectedAndOveviewTabSelected": {
        "expression": "( (ctx.pselected && (ctx.pselected.modelType.typeHierarchyArray.indexOf('ChangeItemRevision') > -1 && ctx.pselected.modelType.typeHierarchyArray.indexOf('Folder') === -1) ) || (ctx.selected && (ctx.selected.modelType.typeHierarchyArray.indexOf('ChangeItemRevision') > -1 && ctx.selected.modelType.typeHierarchyArray.indexOf('Folder') === -1)) ) && ctx.xrtPageContext.secondaryXrtPageID ==='tc_xrt_Overview'"
      },
      "isChangeObjectOpenedAndOveviewTabSelected": {
        "expression": "ctx.locationContext['ActiveWorkspace:Location'] === 'com.siemens.splm.clientfx.tcui.xrt.showObjectLocation' &&( ctx.locationContext.modelObject && ctx.locationContext.modelObject.modelType.typeHierarchyArray.indexOf('ChangeItemRevision') > -1) && ctx.visibleServerCommands.Awp0PerformTask && ctx.xrtPageContext.primaryXrtPageID === 'tc_xrt_Overview'"
      },
      "Awp0PerformTaskCommandCondition": {
        "expression": "( conditions.isEPMTaskOpenedAndWorkflowTab ||  conditions.isNonWorkflowObjectOpened || conditions.isOtherThanShowObjectOrInboxLocation || conditions.inInboxLocationAndOtherThanSummaryView || conditions.inInboxLocationAndSummaryView || conditions.isContentTabOpened )  && ( !conditions.isChangeObjectSelectedAndOveviewTabSelected && !conditions.isChangeObjectOpenedAndOveviewTabSelected)"
      },
      "claimTaskCmdCond": {
        "expression": "ctx.visibleServerCommands.Awp0ClaimTask && ctx.selected && ctx.selected.modelType.typeHierarchyArray.indexOf('EPMTask') > -1"
      },
      "claimSignoffCmdCond": {
        "expression": "ctx.visibleServerCommands.Awp0ClaimTask && ctx.selected && ctx.selected.modelType.typeHierarchyArray.indexOf('Signoff') > -1"
      },
      "openEPMTaskOrSignoffCommandVisibleCondition": {
        "expression": {
          "$and": [
            {
              "$source": "conditions.cmdAwp0ShowObjectCellForObjectNavigationBaseVisibleCondition",
              "$query": {
                "$eq": "true"
              }
            },
            {
              "$source": "commandContext.vmo",
              "$query": {
                "$source": "modelType.typeHierarchyArray",
                "$query": {
                  "$in": [
                    "EPMTask",
                    "Signoff"
                  ]
                }
              }
            }
          ]
        }
      },
      "Awp0AbortTaskCommandVisibility": {
        "expression": "ctx.visibleServerCommands.Awp0AbortTask"
      },
      "Awp0UserAssignmentCutConditionActive": {
        "expression": "ctx.visibleServerCommands.Awp0Cut === true && ctx.relationContext.relationInfo.length > 0 && ctx.selected.modelType.typeHierarchyArray.indexOf( 'BusinessObject' ) > -1 && ( ctx.relationContext.relationInfo[0].relationType == 'awp0MySurrogates' || ctx.relationContext.relationInfo[0].relationType == 'awp0SurrogateFor' )"
      },
      "Awp0SignoffReviewersCutConditionActive": {
        "expression": "ctx.visibleServerCommands.Awp0Cut === true && ctx.relationContext.relationInfo.length > 0 && ctx.selected.modelType.typeHierarchyArray.indexOf( 'BusinessObject' ) > -1 && ctx.relationContext.relationInfo[0].relationType === 'signoff_attachments' && (ctx.xrtPageContext.secondaryXrtPageID ==='tc_xrt_Reviewers' || ctx.xrtPageContext.primaryXrtPageID ==='tc_xrt_Reviewers')"
      },
      "awp0DemoteTaskCommandCondition": {
        "expression": "ctx.visibleServerCommands.Awp0DemoteTask"
      },
      "awp0SuspendTaskCommandCondition": {
        "expression": "ctx.visibleServerCommands.Awp0SuspendTask"
      },
      "awp0ResumeTaskCommandCondition": {
        "expression": "ctx.visibleServerCommands.Awp0ResumeTask"
      },
      "enableInboxWithoutBubbleCommand": {
        "expression": "ctx.unviewedWFTaskCount <=0 "
      },
      "enableInboxWihBubbleCommand": {
        "expression": "ctx.unviewedWFTaskCount > 0 "
      },
      "IsWorkFlowHostingEnabled": {
        "expression": "ctx.aw_hosting_enabled"
      },
      "isDeleteTaskCommandActive": {
        "expression": "conditions.Awp0DeleteCommandConditionVisible && ( conditions.isSingleSignoffDeleteCondition || conditions.isMultiSignoffDeleteCondition)"
      },
      "isDeleteTaskCommandVisible": {
        "expression": "conditions.Awp0DeleteCommandConditionVisible && ( conditions.isSingleSignoffDeleteCondition || conditions.isMultiSignoffDeleteCondition) "
      },
      "isSingleSignoffDeleteCondition": {
        "expression": "ctx.mselected.length === 1 && ( ctx.mselected[0].modelType.typeHierarchyArray.indexOf('Signoff') > -1 || ctx.mselected[0].modelType.typeHierarchyArray.indexOf('EPMTask') > -1) "
      },
      "isMultiSignoffDeleteCondition": {
        "expression": "ctx.mselected.length > 1 && ( ctx.mselected[0].modelType.typeHierarchyArray.indexOf('Signoff') > -1 || ctx.mselected[0].modelType.typeHierarchyArray.indexOf('EPMTask') > -1) "
      },
      "displayCreateWorkflow": {
        "expression": "ctx.mselected.length < 1 && ctx.locationContext['ActiveWorkspace:Location'] === 'com.siemens.splm.client.inbox.tasksLocation'"
      },
      "isAddRemoteInboxCommandVisible": {
        "expression": "commandContext.objectSetSource ==='Fnd0RemoteInboxProvider.TaskInbox' && ctx.preferences.AWC_Enable_Multisite[0] === 'true' && conditions.isValidLoggedInUserCondition"
      },
      "isRemoveRemoteInboxCommandVisible": {
        "expression": "ctx.preferences.AWC_Enable_Multisite[0] === 'true' && commandContext.objectSetSource ==='Fnd0RemoteInboxProvider.TaskInbox' && commandContext.dataProvider.selectedObjects && commandContext.dataProvider.selectedObjects.length > 0 && conditions.isValidLoggedInUserCondition"
      },
      "isCutRemoteInboxCommandVisible": {
        "expression": "ctx.preferences.AWC_Enable_Multisite[0] === 'true' && ctx.mselected && ctx.mselected.length >0 && ctx.mselected[0].type=='TaskInbox' && conditions.isValidLoggedInUserCondition"
      },
      "isValidLoggedInUserCondition": {
        "expression": "ctx.locationContext.modelObject.uid === ctx.userSession.props.user.dbValues[0]"
      },
      "openRemoteInboxCommandVisibleCondition": {
        "expression": {
          "$and": [
            {
              "$source": "commandContext.vmo",
              "$query": {
                "$source": "modelType.typeHierarchyArray",
                "$query": {
                  "$in": [
                    "Awp0XRTObjectSetRow",
                    "TaskInbox"
                  ]
                }
              }
            },
            {
              "$source": {
                "$adapt": "commandContext.vmo"
              },
              "$query": {
                "$source": "modelType.typeHierarchyArray",
                "$query": {
                  "$in": [
                    "TaskInbox"
                  ]
                }
              }
            },
            {
              "$source": {
                "$adapt": "commandContext.vmo"
              },
              "$query": {
                "$source": "props.owning_site.dbValues.length",
                "$query": {
                  "$gt": 0
                }
              }
            }
          ]
        }
      },
      "openRemoteInboxContextCommandVisibleCondition": {
        "expression": {
          "$and": [
            {
              "$source": "ctx.selected",
              "$query": {
                "$source": "modelType.typeHierarchyArray",
                "$query": {
                  "$in": [
                    "TaskInbox"
                  ]
                }
              }
            },
            {
              "$source": {
                "$adapt": "ctx.selected"
              },
              "$query": {
                "$source": "props.owning_site.dbValues.length",
                "$query": {
                  "$gt": 0
                }
              }
            }
          ]
        }
      },
      "isRemoteInboxTracelinkCommandCondition": {
        "expression": "ctx.visibleServerCommands.Arm0CreateTraceLink && ctx.mselected && ctx.mselected.length >0 && ctx.mselected[0].type=='TaskInbox' "
      },
      "awp0ReplaceMultipleParticipantsCommandCondition": {
        "expression": "ctx.visibleServerCommands.Awp0ReplaceMultipleParticipants && ctx.mselected.length > 1"
      },
      "awp0NewWorkflowProcessCommandCondition": {
        "expression": "ctx.visibleServerCommands.Awp0NewWorkflowProcess"
      },
      "Awp0AddParticipantCmd": {
        "expression": "true"
      },
      "isSelectedChangeObjectModifiable": {
        "expression": "ctx.xrtSummaryContextObject && ctx.xrtSummaryContextObject.props.is_modifiable.dbValues[0] === '1'"
      },
      "isParticipantPlatformVisible": {
        "expression": "ctx.tcSessionData.tcMajorVersion >= 14 && ctx.tcSessionData.tcMinorVersion >= 1"
      },
      "Awp0AddParticipantTableComamndVisiblity": {
        "expression": "commandContext && commandContext.name === 'particpantTableDataProvider' && (conditions.isSelectedChangeObjectModifiable || conditions.isParticipantPlatformVisible)"
      },
      "Awp0AddParticipantCommandVisibility": {
        "expression": "(((commandContext.objectSetSource.indexOf('HasParticipant.') === 0) || (commandContext.objectSetSource.indexOf('fnd0FirstTargetParticipants.') === 0)) && commandContext.dataProvider.selectedObjects.length === 0 && ( ctx.pselected === null || ctx.selected.modelType.parentTypeName !== 'Participant') && (conditions.isSelectedChangeObjectModifiable || conditions.isParticipantPlatformVisible))  || conditions.Awp0AddParticipantTableComamndVisiblity"
      },
      "Awp0ReplaceParticipantTableComamndVisiblity": {
        "expression": "commandContext && commandContext.name === 'particpantTableDataProvider' && commandContext.selectedObjects && commandContext.selectedObjects.length === 1 && commandContext.selectedObjects[0].modelType.typeHierarchyArray.indexOf( 'Participant' ) > -1 && (conditions.isSelectedChangeObjectModifiable  || conditions.isParticipantPlatformVisible)"
      },
      "Awp0ReplaceParticipantCommandVisibility": {
        "expression": "(((commandContext.objectSetSource.indexOf('HasParticipant.') == 0) || (commandContext.objectSetSource.indexOf('fnd0FirstTargetParticipants.') == 0)) && commandContext.dataProvider.viewModelCollection.totalObjectsLoaded > 0 && commandContext.dataProvider.selectedObjects.length != 0 && ( ctx.pselected == null || ctx.selected.modelType.typeHierarchyArray.indexOf('Participant') > -1) && (conditions.isSelectedChangeObjectModifiable || conditions.isParticipantPlatformVisible)) || conditions.Awp0ReplaceParticipantTableComamndVisiblity"
      },
      "Awp0RemoveParticipantTableComamndVisiblity": {
        "expression": "commandContext && commandContext.name === 'particpantTableDataProvider' && commandContext.selectedObjects && commandContext.selectedObjects.length > 0 && ctx.participantCtx.isRemoveCmdVisible && (conditions.isSelectedChangeObjectModifiable || conditions.isParticipantPlatformVisible)"
      },
      "Awp0RemoveParticipantCommandVisibility": {
        "expression": "( ctx.mselected.length > 0 && ctx.selected.modelType.typeHierarchyArray.indexOf('Participant') > -1 && (conditions.isSelectedChangeObjectModifiable || conditions.isParticipantPlatformVisible)) || conditions.Awp0RemoveParticipantTableComamndVisiblity"
      },
      "Awp0ProcessAssignmentCommandVisibility": {
        "expression": "( commandContext.selectionMode==='multiple' || commandContext.dataProvider.viewModelCollection.totalFound <= 0) && conditions.isTaskAssignmentNarrowViewMode"
      },
      "Awp0IsTaskNotCompleted": {
        "expression": "ctx.assignAllTasks.treeDataProvider.selectedObjects[0].props.state.dbValues[0] !== '8'"
      },
      "Awp0IsProfileExistAndReviewersSectionSelected": {
        "expression": "ctx.assignAllTasks.treeDataProvider.selectedObjects[0].isProfileExist && commandContext.name === 'Reviewers'"
      },
      "Awp0AddUserAfterSubmitCommandVisibility": {
        "expression": "(commandContext.selectionModel.mode==='multiple' || commandContext.viewModelCollection.totalFound <= 0) && !conditions.Awp0IsProfileExistAndReviewersSectionSelected && ctx.assignAllTasks.isPrivilegedToAssign == 'true' && conditions.isTcVersion122OrLater && conditions.Awp0IsTaskNotCompleted"
      },
      "Awp0RemoveProcessAssignmentCommandVisibility": {
        "expression": "commandContext.dataProvider.selectedObjects && commandContext.dataProvider.selectedObjects.length > 0"
      },
      "Awp0RemoveUsersAfterSubmitCommandVisibility": {
        "expression": "conditions.Awp0IsTaskNotCompleted && ctx.assignAllTasks.isRemoveVisible && commandContext.selectedObjects && commandContext.selectedObjects.length > 0 && commandContext.selectedObjects[0].type && !(commandContext.selectedObjects[0].modelType.typeHierarchyArray.indexOf('EPMSignoffProfile')>-1) && ctx.assignAllTasks.isPrivilegedToAssign == 'true' && conditions.isTcVersion122OrLater"
      },
      "WorkflowShowLegendHandlerConditionActive": {
        "expression": "!conditions.isEPMTaskTemplateSelected && (ctx.xrtPageContext.secondaryXrtPageID ==='tc_xrt_Workflow' || ctx.xrtPageContext.primaryXrtPageID === 'tc_xrt_Workflow')"
      },
      "Awp0RemoveTaskAssignmentCommandVisibility": {
        "expression": "ctx.taskAssignmentCtx.isRemoveVisible && commandContext.selectedObjects && commandContext.selectedObjects.length > 0 && commandContext.selectedObjects[0].type && commandContext.selectedObjects[0].type !== 'KeyRole' && !(commandContext.selectedObjects[0].modelType.typeHierarchyArray.indexOf('EPMSignoffProfile')>-1)"
      },
      "Awp0RemoveTaskAssignmentCategoriesCommandVisibility": {
        "expression": "ctx.taskAssignmentCtx.isRemoveVisible && commandContext.selectedObjects && commandContext.selectedObjects.length > 0 && commandContext.selectedObjects[0].type && commandContext.selectedObjects[0].type !== 'KeyRole' && !(commandContext.selectedObjects[0].modelType.typeHierarchyArray.indexOf('EPMSignoffProfile')>-1)"
      },
      "Awp0AddTaskAssignmentCommandVisible": {
        "expression": "conditions.Awp0AddTaskAssignmentCommandVisibility && conditions.isTaskAssignmentNarrowViewMode"
      },
      "Awp0AddTaskAssignmentCommandVisibility": {
        "expression": "(commandContext.selectionModel.mode==='multiple' || commandContext.viewModelCollection.totalFound <= 0) && !conditions.isProfileExistAndReviewersSectionSelected"
      },
      "isProfileSubmitWithTemplateCellCommandActive": {
        "expression": "conditions.isTaskAssignmentNarrowViewMode"
      },
      "isProfileSubmitWithTemplateCommandVisible": {
        "expression": "commandContext.vmo.modelType.typeHierarchyArray.indexOf( 'EPMSignoffProfile' ) > -1 && commandContext.vmo.props.number_of_signoffs.dbValues[0] > 0 && conditions.isTaskAssignmentNarrowViewMode"
      },
      "isProfileSignoffCommandVisible": {
        "expression": "commandContext.vmo.modelType.typeHierarchyArray.indexOf( 'EPMSignoffProfile' ) > -1 && commandContext.vmo.props.number_of_signoffs.dbValues[0] > 0 && ctx.assignAllTasks.isPrivilegedToAssign == 'true' && conditions.isTcVersion122OrLater && conditions.Awp0IsTaskNotCompleted"
      },
      "Awp0AddTaskParticipantCommandVisibility": {
        "expression": "(commandContext.objectSetSource.indexOf('fnd0Participants.') == 0 && commandContext.dataProvider.selectedObjects.length == 0 && ( ctx.pselected == null || ctx.selected.modelType.parentTypeName != 'Participant'))"
      },
      "Awp0ReplaceTaskParticipantCommandVisibility": {
        "expression": "(commandContext.objectSetSource.indexOf('fnd0Participants.') == 0 && commandContext.dataProvider.viewModelCollection.totalObjectsLoaded > 0 && commandContext.dataProvider.selectedObjects.length != 0 && ( ctx.pselected == null || ctx.selected.modelType.parentTypeName == 'Participant'))"
      },
      "IsTaskAssignmentTabActive": {
        "expression": "(ctx.xrtPageContext.secondaryXrtPageID ==='tc_xrt_Assignments' || ctx.xrtPageContext.primaryXrtPageID === 'tc_xrt_Assignments')"
      },
      "Awp0StartEditConditionActive": {
        "expression": "conditions.isStartEditAllowed && conditions.IsTaskAssignmentTabActive"
      },
      "isTcVersion122OrLater": {
        "expression": "((ctx.tcSessionData.tcMajorVersion > 11 && ctx.tcSessionData.tcMinorVersion > 1 ) || ( ctx.tcSessionData.tcMajorVersion > 12 ))"
      },
      "isEPMTaskTemplateSelected": {
        "expression": "ctx.xrtSummaryContextObject && ctx.xrtSummaryContextObject.modelType.typeHierarchyArray.indexOf( 'EPMTaskTemplate' ) > -1"
      },
      "cmdWorkflowViewerLayoutOptionsActive": {
        "expression": "conditions.WorkflowShowLegendHandlerConditionActive"
      },
      "cmdWorkflowViewerRightToLeftLayoutActive": {
        "expression": " conditions.WorkflowShowLegendHandlerConditionActive"
      },
      "cmdWorkflowViewerLeftToRightLayoutActive": {
        "expression": "conditions.WorkflowShowLegendHandlerConditionActive"
      },
      "cmdWorkflowViewerFixedLayoutActive": {
        "expression": "conditions.WorkflowShowLegendHandlerConditionActive"
      },
      "cmdWorkflowViewerTopToBottomLayoutSelected": {
        "expression": "ctx.workflowViewerCtx.diagram.isAutoLayoutOn && ctx.workflowViewerCtx.diagram.layoutOption === 'GcTopToBottomLayout'"
      },
      "cmdWorkflowViewerRightToLeftLayoutSelected": {
        "expression": "ctx.workflowViewerCtx.diagram.isAutoLayoutOn && ctx.workflowViewerCtx.diagram.layoutOption === 'GcRightToLeftLayout'"
      },
      "cmdWorkflowViewerLeftToRightLayoutSelected": {
        "expression": "ctx.workflowViewerCtx.diagram.isAutoLayoutOn && ctx.workflowViewerCtx.diagram.layoutOption === 'GcLeftToRightLayout'"
      },
      "cmdWorkflowViewerFixedLayoutSelected": {
        "expression": "!ctx.workflowViewerCtx.diagram.isAutoLayoutOn && ctx.workflowViewerCtx.diagram.layoutOption === 'FixedLayout'"
      },
      "isInboxEditInProgress": {
        "expression": "conditions.saveEditsPWACommandActive && ctx.ViewModeContext.ViewModeContext === 'TableSummaryView' &&  ctx.locationContext['ActiveWorkspace:Location'] === 'com.siemens.splm.client.inbox.tasksLocation' && (ctx.xrtPageContext.secondaryXrtPageID ==='tc_xrt_Assignments' || ctx.xrtPageContext.secondaryXrtPageID ==='tc_xrt_Workflow')"
      },
      "isCreateSubProcessCommandVisible": {
        "expression": "conditions.isTCServerVersion131OrLater && ctx.selected && (ctx.selected.modelType.typeHierarchyArray.indexOf('EPMTask') > -1 || ctx.selected.modelType.typeHierarchyArray.indexOf('Signoff') > -1 ) && conditions.isValidWorkflowViewerGraphSelection && !conditions.IsTaskAssignmentTabActive"
      },
      "isValidWorkflowViewerGraphSelection": {
        "expression": "( !ctx.workflowViewerCtx || !ctx.workflowViewerCtx.selectedNodes || ( ctx.workflowViewerCtx.selectedNodes.length === 1  && ( !ctx.workflowViewerCtx.selectedNodes[0].appData.isStartFinishNode  || ctx.workflowViewerCtx.selectedNodes[0].appData.isStartFinishNode === 'start')))"
      },
      "isTCServerVersion131OrLater": {
        "expression": "(ctx.tcSessionData.tcMajorVersion > 13 || (ctx.tcSessionData.tcMajorVersion === 13 && ctx.tcSessionData.tcMinorVersion > 0 ) )"
      },
      "isRemoveSelectedProcessTargetCommandVisible": {
        "expression": "commandContext.selectedObjects.length > 0 && (ctx.hideTargetCommands === undefined || !ctx.hideTargetCommands) && !conditions.isHostedMode"
      },
      "isRemoveSelectedProcessReferenceCommandVisible": {
        "expression": "commandContext.selectedObjects.length > 0 && (ctx.showReferenceCommands === undefined || ctx.showReferenceCommands)"
      },
      "isAddProcessTargetCommandVisible": {
        "expression": "false && !ctx.submitWorkflowPopupCtx"
      },
      "isAddReferenceInSubmitToWorkflowCommandVisible": {
        "expression": "conditions.isSubmitWorkflowPopupPanelActive && !conditions.isRemoveSelectedProcessReferenceCommandVisible && !ctx.openAddReferencePanel"
      },
      "isAddTargetCommandVisible": {
        "expression": "commandContext.selectedObjects.length === 0 && conditions.isSubmitWorkflowPopupPanelActive && (ctx.hideTargetCommands === undefined || !ctx.hideTargetCommands) && !conditions.isHostedMode"
      },
      "isHostedMode": {
        "expression": "ctx.workflow_process_candidates && ctx.workflow_process_candidates.IsEmbeddedComponent"
      },
      "isAddReferenceCommandVisible": {
        "expression": "commandContext.selectedObjects.length === 0 && conditions.isSubmitWorkflowPopupPanelActive && (ctx.showReferenceCommands && ctx.showReferenceCommands)"
      },
      "awp0SelectAllWorkflowTargetCondition": {
        "expression": "(ctx.hideTargetCommands === undefined || !ctx.hideTargetCommands) && commandContext.selectedObjects.length !== ctx.workflow_process_candidates.workFlowObjects.length && !conditions.isHostedMode"
      },
      "awp0SelectAllWorkflowReferenceCondition": {
        "expression": "ctx.showReferenceCommands && commandContext.selectedObjects.length !== ctx.workflow_process_references.workFlowObjects.length && ctx.workflow_process_references.workFlowObjects.length > 0"
      },
      "isValidTaskObjectAssignmentCondition": {
        "expression": "ctx.taskAssignmentCtx.treeDataProvider.selectedObjects[0] && ctx.taskAssignmentCtx.treeDataProvider.selectedObjects[0]._childObj && (( ctx.taskAssignmentCtx.treeDataProvider.selectedObjects[0]._childObj.modelType.typeHierarchyArray.indexOf( 'EPMTaskTemplate' ) > -1 )|| ( ctx.taskAssignmentCtx.treeDataProvider.selectedObjects[0]._childObj.props.state.dbValues[0] !== '8' && ctx.taskAssignmentCtx.isPrivilegedToAssign === 'true' && ctx.taskAssignmentCtx.treeDataProvider.selectedObjects[0]._childObj.modelType.typeHierarchyArray.indexOf( 'EPMTask' ) > -1))"
      },
      "isRemoveTaskAssignmentCtxCommandVisible": {
        "expression": "conditions.isValidTaskObjectAssignmentCondition && conditions.isRemoveAllowedCondition && ctx.taskAssignmentCtx.treeDataProvider.selectedObjects[0] && ctx.taskAssignmentCtx.treeDataProvider.selectedObjects[0].uid !== 'unstaffedUID' && ( ( ctx.taskAssignmentCtx.treeDataProvider.selectedObjects[0].assignmentType !== 'assignee' ) || (ctx.taskAssignmentCtx.treeDataProvider.selectedObjects[0].assignmentType === 'assignee' && ctx.taskAssignmentCtx.treeDataProvider.selectedObjects[0].assignmentObject.internalName && ctx.taskAssignmentCtx.treeDataProvider.selectedObjects[0].assignmentObject.taskAssignment.uid !== 'unstaffedUID' ) ) && !conditions.isRequiredReviewer"
      },
      "isRequiredReviewer": {
        "expression": "ctx.taskAssignmentCtx.treeDataProvider.selectedObjects[0] && ctx.taskAssignmentCtx.treeDataProvider.selectedObjects[0].assignmentObject && ctx.taskAssignmentCtx.treeDataProvider.selectedObjects[0].assignmentObject.isRequired"
      },
      "isReplaceTaskAssignmentCtxCommandVisible": {
        "expression": "conditions.isValidTaskObjectAssignmentCondition && !conditions.isRequiredReviewer && ctx.taskAssignmentCtx.treeDataProvider.selectedObjects[0] && ctx.taskAssignmentCtx && !ctx.taskAssignmentCtx.isInsidePanel"
      },
      "isRemoveAllowedCondition": {
        "expression": "ctx.taskAssignmentCtx.treeDataProvider.selectedObjects[0] && ctx.taskAssignmentCtx.treeDataProvider.selectedObjects[0].assignmentObject && ( ctx.taskAssignmentCtx.treeDataProvider.selectedObjects[0].assignmentObject.isRemoveAllowed === 'true' || ctx.taskAssignmentCtx.treeDataProvider.selectedObjects[0].assignmentObject.isRemoveAllowed === undefined)"
      },
      "Awp0SaveTaskAssignmentCondition": {
        "expression": "ctx.taskAssignmentCtx.isStartEditEnabled && ctx.taskAssignmentCtx.isPrivilegedToAssign == 'true' && ctx.taskAssignmentCtx.isModified"
      },
      "Awp0SaveTaskAssignmentCommandVisibility": {
        "expression": "conditions.Awp0SaveTaskAssignmentCondition"
      },
      "Awp0CancelTaskAssignmentCommandVisibility": {
        "expression": "ctx.taskAssignmentCtx.isStartEditEnabled && ctx.taskAssignmentCtx.isPrivilegedToAssign == 'true'"
      },
      "Awp0AddUserAfterSubmitCommandVisible": {
        "expression": "conditions.isAddUserAfterSubmitCommandVisibility && conditions.isTaskAssignmentNarrowViewMode"
      },
      "isAddUserAfterSubmitCommandVisibility": {
        "expression": "(commandContext.selectionModel.mode==='multiple' || commandContext.viewModelCollection.totalFound <= 0) && !conditions.isProfileExistAndReviewersSectionSelected && ctx.taskAssignmentCtx.isPrivilegedToAssign == 'true' && conditions.isTaskNotCompleted"
      },
      "isTaskAssignmentNarrowViewMode": {
        "expression": "ctx.taskAssignmentCtx && ctx.taskAssignmentCtx.isNarrowViewMode"
      },
      "isTaskNotCompleted": {
        "expression": "ctx.taskAssignmentCtx.selectedTaskObject.props.state.dbValues[0] !== '8'"
      },
      "isProfileExistAndReviewersSectionSelected": {
        "expression": "ctx.taskAssignmentCtx.selectedTaskObject.isProfileExist && ( commandContext.name === 'Reviewers' || commandContext.name === 'reviewersDataProvider')"
      },
      "Awp0RemoveUserAfterSubmitCommandVisible": {
        "expression": "conditions.isTaskNotCompleted && ctx.taskAssignmentCtx.isRemoveVisible && commandContext.selectedObjects && commandContext.selectedObjects.length > 0 && commandContext.selectedObjects[0].type && commandContext.selectedObjects[0].type !== 'KeyRole' && !(commandContext.selectedObjects[0].modelType.typeHierarchyArray.indexOf('EPMSignoffProfile')>-1) && ctx.taskAssignmentCtx.isPrivilegedToAssign == 'true' "
      },
      "Awp0StartEditTaskAssignmentCommandActive": {
        "expression": "conditions.IsTaskAssignmentTabActive"
      },
      "Awp0StartEditTaskAssignmentCommandVisibility": {
        "expression": "conditions.IsTaskAssignmentTabActive && ctx.taskAssignmentCtx && !ctx.taskAssignmentCtx.isStartEditEnabled && ctx.taskAssignmentCtx.isPrivilegedToAssign == 'true' && ctx.xrtPageContext.secondaryXrtPageID !== 'tc_xrt_Workflow' && ctx.xrtPageContext.primaryXrtPageID !== 'tc_xrt_Workflow'"
      },
      "Awp0TasksAferSubmitProfileCellCommandActive": {
        "expression": "conditions.isTaskAssignmentNarrowViewMode"
      },
      "isProfileSignoffTaskAssignmentCommandVisible": {
        "expression": "commandContext.vmo.modelType.typeHierarchyArray.indexOf( 'EPMSignoffProfile' ) > -1 && commandContext.vmo.props.number_of_signoffs.dbValues[0] > 0 && ctx.taskAssignmentCtx.isPrivilegedToAssign == 'true' && conditions.isTaskNotCompleted"
      },
      "Awp0TasksAferSubmitProfileCellCommandVisible": {
        "expression": "conditions.IsTaskAssignmentTabActive && conditions.isProfileSignoffTaskAssignmentCommandVisible && conditions.isTaskAssignmentNarrowViewMode"
      },
      "isAddTaskParticipantAssignmentCommandVisible": {
        "expression": "( ctx.selected && commandContext.selectionMode==='multiple' || commandContext.dataProvider.viewModelCollection.totalFound <= 0 ) && conditions.isTaskAssignmentNarrowViewMode"
      },
      "isRemoveTaskParticipantAssignmentCommandVisible": {
        "expression": "commandContext.dataProvider.selectedObjects && commandContext.dataProvider.selectedObjects.length > 0"
      },
      "isSubmitWorkflowPopupPanelActive": {
        "expression": "ctx.submitWorkflowPopupCtx || ctx.activeToolsAndInfoCommand.commandId === 'Awp0CreateWorkflowSubProcess' || ctx.activeToolsAndInfoCommand.commandId === 'Awp0NewWorkflowProcess'"
      },
      "Awp0PasteUsersAssignmentCommandVisible": {
        "expression": "conditions.Awp0PasteUsersAssignmentCommandVisibility && !conditions.isTaskAssignmentNarrowViewMode"
      },
      "Awp0PasteUsersAssignmentCommandVisibility": {
        "expression": "!conditions.isProfileExistAndReviewersSectionSelected && ctx.taskAssignmentCtx.panelContext.isPasteCommandVisible && ( conditions.isTaskAssignmentCondition || conditions.isTaskTemplateAssignmentCondition || ctx.isDynamicParticipantAssignmentPresent) && !conditions.IsPasteHiddenForDPBasedTemplate"
      },
      "Awp0PasteProfileUsersAssignmentCommandVisible": {
        "expression": "conditions.Awp0PasteProfileUsersAssignmentCommandVisibility && !conditions.isTaskAssignmentNarrowViewMode"
      },
      "Awp0PasteProfileUsersAssignmentCommandVisibility": {
        "expression": "ctx.workflow.profileObject && conditions.isProfileExistAndReviewersSectionSelected && ctx.taskAssignmentCtx.panelContext.isPasteCommandVisible && ( conditions.isTaskAssignmentCondition || conditions.isTaskTemplateAssignmentCondition)"
      },
      "isTaskAssignmentCondition": {
        "expression": "conditions.isTaskNotCompleted && ctx.taskAssignmentCtx.isPrivilegedToAssign == 'true' && ctx.taskAssignmentCtx.selectedTaskObject.modelType.typeHierarchyArray.indexOf( 'EPMTask' ) > -1 "
      },
      "isTaskTemplateAssignmentCondition": {
        "expression": "ctx.taskAssignmentCtx.selectedTaskObject.modelType.typeHierarchyArray.indexOf( 'EPMTaskTemplate' ) > -1 && ctx.taskAssignmentCtx.isInsidePanel"
      },
      "IsPasteHiddenForDPBasedTemplate": {
        "expression": "commandContext.name === 'assignerDataProvider' && commandContext.viewModelCollection.totalObjectsLoaded > 0 && commandContext.viewModelCollection.loadedVMObjects[0].type === 'KeyRole'"
      },
      "Awp0AssignTaskCommandCondition": {
        "expression": "ctx.taskAssignmentCtx.isNarrowViewMode && ctx.taskAssignmentCtx.treeDataProvider.selectedObjects && ctx.taskAssignmentCtx.treeDataProvider.selectedObjects[0] && ctx.taskAssignmentCtx.treeDataProvider.selectedObjects[0].modelType.typeHierarchyArray.indexOf( 'EPMTask' ) > -1"
      },
      "isAddMultiParticipantPanel": {
        "expression": "ctx.multiParticipantDataMap"
      },
      "isWorkflowPanelPinned": {
        "expression": "commandContext.pinnedToForm.dbValue && ( conditions.isAddMultiParticipantPanel || commandContext.isPinCommandAvaialble)"
      },
      "isWorkflowPanelUnPinned": {
        "expression": "commandContext.unpinnedToForm.dbValue && ( conditions.isAddMultiParticipantPanel || commandContext.isPinCommandAvaialble)"
      },
      "isWorkflowTabVisibleCondition": {
        "expression": "ctx.xrtPageContext.secondaryXrtPageID ==='tc_xrt_Workflow' || ctx.xrtPageContext.primaryXrtPageID === 'tc_xrt_Workflow'"
      },
      "isValidToOpenTassignmentPanel": {
        "expression": "(conditions.IsTaskAssignmentTabActive || conditions.isWorkflowTabVisibleCondition ) && ctx.taskAssignmentCtx.treeDataProvider.selectedObjects[0] && ctx.taskAssignmentCtx.treeDataProvider.selectedObjects[0]._childObj && (( ctx.taskAssignmentCtx.treeDataProvider.selectedObjects[0].modelType.typeHierarchyArray.indexOf( 'EPMTask' ) > -1))"
      },
      "awp0NewWorkflowProcessTemplateCommandCondition": {
        "expression": "ctx.visibleServerCommands.Awp0CreateWorkflowTemplate && ctx.locationContext['ActiveWorkspace:Location'] === 'workflowDesignerLocation'"
      },
      "isImportWorkflowTemplateCmdVisible": {
        "expression": "ctx.locationContext['ActiveWorkspace:Location'] === 'workflowDesignerLocation' && ctx.visibleServerCommands.Awp0ImportWorkflowTemplate"
      },
      "isExportWorkflowTemplateCmdVisible": {
        "expression": "ctx.selected && ctx.locationContext['ActiveWorkspace:Location'] === 'workflowDesignerLocation' && ctx.visibleServerCommands.Awp0ExportWorkflowTemplate"
      },
      "isAvailableProcessTemplate": {
        "expression": "ctx.xrtSummaryContextObject.props.stage.dbValues[0] === '2' && conditions.isProcessTemplateSelected"
      },
      "isDBAPriviledgeUser": {
        "expression": "ctx.userSession.props.group_name.dbValue === 'dba'"
      },
      "isTCServerVersion122OrLater": {
        "expression": "(ctx.tcSessionData.tcMajorVersion > 12 || (ctx.tcSessionData.tcMajorVersion === 12 && ctx.tcSessionData.tcMinorVersion >= 2 ) )"
      },
      "isTCServerVersion123OrLater": {
        "expression": "(ctx.tcSessionData.tcMajorVersion > 12 || (ctx.tcSessionData.tcMajorVersion === 12 && ctx.tcSessionData.tcMinorVersion > 2 ) )"
      },
      "isShowObjectLocationRemoveProcessTemplateCommandVisibility": {
        "expression": "ctx.locationContext['ActiveWorkspace:SubLocation'] === 'showObject' && ctx.visibleServerCommands.Awp0DeleteWorkflowTemplate && conditions.isValidTemplateObjectCondition"
      },
      "isWorkflowDesignerLocationRemoveProcessTemplateCommandVisibility": {
        "expression": "ctx.locationContext['ActiveWorkspace:Location'] === 'workflowDesignerLocation' && ctx.visibleServerCommands.Awp0DeleteWorkflowTemplate"
      },
      "removeProcessTemplateCondition": {
        "expression": "conditions.isWorkflowDesignerLocationRemoveProcessTemplateCommandVisibility || conditions.isShowObjectLocationRemoveProcessTemplateCommandVisibility"
      },
      "isProcessTemplateSelected": {
        "expression": "ctx.selected && ctx.selected.modelType.typeHierarchyArray.indexOf( 'EPMTaskTemplate' ) > -1 && ctx.selected.props.template_classification.dbValues && ctx.selected.props.template_classification.dbValues[0] === '0'"
      },
      "awp0TemplateFiltersCommandCondition": {
        "expression": "(ctx.locationContext['ActiveWorkspace:Location'] === 'workflowDesignerLocation') && (!ctx.editInProgress || ctx.editInProgress === false) && ( ctx.search && (ctx.search.totalFound > 0 || ctx.search.criteria.searchString !== ''))"
      },
      "isTemplateStartEditCommandVisibility": {
        "expression": "ctx.visibleServerCommands.Awp0EditWorkflowTemplate && ( conditions.isTemplateStartEditSummaryViewCommandVisibility || conditions.isTemplateStartEditNonSummaryViewCommandVisibility)"
      },
      "isValidTemplateObjectCondition": {
        "expression": "ctx.xrtSummaryContextObject && ctx.xrtSummaryContextObject.props.parent_task_template.dbValues[0] === '' || ctx.xrtSummaryContextObject.props.parent_task_template.dbValues.length === 0"
      },
      "isShowObjectLocationStartEditCommandVisibility": {
        "expression": "ctx.locationContext['ActiveWorkspace:SubLocation'] === 'showObject' && ctx.xrtSummaryContextObject && ( !ctx.workflowDgmEditCtx.editObjectUids || ctx.workflowDgmEditCtx.editObjectUids.indexOf( ctx.xrtSummaryContextObject.uid ) === -1 ) && conditions.isValidTemplateObjectCondition"
      },
      "isWorkflowDesignerLocationStartEditCommandVisibility": {
        "expression": "ctx.locationContext['ActiveWorkspace:Location'] === 'workflowDesignerLocation' && ctx.xrtSummaryContextObject && ( !ctx.workflowDgmEditCtx.editObjectUids || ctx.workflowDgmEditCtx.editObjectUids.indexOf( ctx.xrtSummaryContextObject.uid ) === -1 )"
      },
      "isValidLocationForWorkflowGraph": {
        "expression": "ctx.locationContext['ActiveWorkspace:Location'] === 'workflowDesignerLocation' || ctx.locationContext['ActiveWorkspace:SubLocation'] === 'showObject'"
      },
      "isTemplateStartEditSummaryViewCommandVisibility": {
        "expression": "ctx.xrtSummaryContextObject && ( conditions.isWorkflowDesignerLocationStartEditCommandVisibility || conditions.isShowObjectLocationStartEditCommandVisibility )"
      },
      "isTemplateStartEditNonSummaryViewCommandVisibility": {
        "expression": "!ctx.xrtSummaryContextObject && ctx.selected && conditions.isValidLocationForWorkflowGraph && ( !ctx.workflowDgmEditCtx.editObjectUids || ctx.workflowDgmEditCtx.editObjectUids.indexOf( ctx.selected.uid ) === -1 )"
      },
      "isShowObjectLocationEditCommandVisibility": {
        "expression": "ctx.locationContext['ActiveWorkspace:SubLocation'] === 'showObject' && ctx.visibleServerCommands.Awp0MakeWorkflowTemplateOnline && conditions.isValidTemplateObjectCondition"
      },
      "isWorkflowDesignerLocationEditCommandVisibility": {
        "expression": "ctx.locationContext['ActiveWorkspace:Location'] === 'workflowDesignerLocation' && ctx.visibleServerCommands.Awp0MakeWorkflowTemplateOnline"
      },
      "isTemplateEditCommandVisibility": {
        "expression": "conditions.isWorkflowDesignerLocationEditCommandVisibility || conditions.isShowObjectLocationEditCommandVisibility"
      },
      "isTemplateEndEditCommandVisibility": {
        "expression": "conditions.isTemplateEndEditSummaryViewCommandVisibility || conditions.isTemplateEndEditNonSummaryViewCommandVisibility"
      },
      "isTemplateEndEditSummaryViewCommandVisibility": {
        "expression": "ctx.xrtSummaryContextObject && ctx.workflowDgmEditCtx.editObjectUids.indexOf( ctx.xrtSummaryContextObject.uid ) > -1"
      },
      "isTemplateEndEditNonSummaryViewCommandVisibility": {
        "expression": "!ctx.xrtSummaryContextObject && ctx.selected && ctx.workflowDgmEditCtx.editObjectUids.indexOf( ctx.selected.uid ) > -1"
      },
      "isUnderConstructionTemplate": {
        "expression": "ctx.selected.props.stage.dbValues[0] === '1' && ctx.selected.modelType.typeHierarchyArray.indexOf( 'EPMTaskTemplate' ) > -1"
      },
      "Awp0ToggleShowTaskRelatedInfoCmdCond": {
        "expression": "conditions.isWorkflowDesignerPage && conditions.isTemplateType"
      },
      "Awp0ToggleShowTaskRelatedInfoActive": {
        "expression": "ctx.state.params.ttab_name"
      },
      "isTemplateSavePropertiesCommandVisibility": {
        "expression": "ctx.state.params.ttab_name"
      },
      "isTemplateType": {
        "expression": "ctx.selected && ctx.selected.modelType.typeHierarchyArray.indexOf( 'EPMTaskTemplate' ) > -1"
      },
      "isWorkflowDesignerPage": {
        "expression": "ctx.xrtPageContext.primaryXrtPageID === 'tc_xrt_Workflow' || ctx.xrtPageContext.secondaryXrtPageID === 'tc_xrt_Workflow'"
      },
      "isTaskTemplateRemoveCommandVisibility": {
        "expression": "conditions.isGcExitEditCommandVisible && conditions.isWorkflowDesignerPage && conditions.isTemplateType && ctx.workflowDgmCtx.isRemoveTaskTemplateCommandVisible"
      },
      "convertToParentTemplateVisibilityCond": {
        "expression": "conditions.isGcExitEditCommandVisible && conditions.isWorkflowDesignerPage && !ctx.workflowDgmCtx.isGroupSelectedNode && !conditions.isOOTBTaskTemplateSelected && ctx.selected.uid !== ctx.xrtSummaryContextObject.uid && ctx.workflowDgmCtx.selectedNodes.length > 0 "
      },
      "isOOTBTaskTemplateSelected": {
        "expression": "ctx.selected.modelType.typeHierarchyArray.indexOf( 'EPMReviewTaskTemplate' ) > -1 || ctx.selected.modelType.typeHierarchyArray.indexOf( 'EPMAcknowledgeTaskTemplate' ) > -1 || ctx.selected.modelType.typeHierarchyArray.indexOf( 'EPMAddStatusTaskTemplate' ) > -1 || ctx.selected.modelType.typeHierarchyArray.indexOf( 'EPMConditionTaskTemplate' ) > -1 || ctx.selected.modelType.typeHierarchyArray.indexOf( 'EPMDoTaskTemplate' ) > -1 || ctx.selected.modelType.typeHierarchyArray.indexOf( 'EPMOrTaskTemplate' ) > -1 || ctx.selected.modelType.typeHierarchyArray.indexOf( 'EPMRouteTaskTemplate' ) > -1 || ctx.selected.modelType.typeHierarchyArray.indexOf( 'EPMValidateTaskTemplate' ) > -1 || ctx.selected.modelType.typeHierarchyArray.indexOf( 'EPMSelectSignoffTaskTemplate' ) > -1 || ctx.selected.modelType.typeHierarchyArray.indexOf( 'EPMPerformSignoffTaskTemplate' ) > -1"
      },
      "isTemplateEditMode": {
        "expression": "conditions.isTemplateType && conditions.isTaskTemplateInEditMode"
      },
      "isHandlerTabActive": {
        "expression": "ctx.state.params.ttab_name ==='Awp0TaskHandlersNewTab'"
      },
      "isNotificationTabEditMode": {
        "expression": "conditions.isTaskTemplateInEditMode"
      },
      "isAddNotificationHandler": {
        "expression": "conditions.isNotificationTabEditMode && ( !commandContext.selectedObjects || commandContext.selectedObjects.length <= 0)"
      },
      "isShowNotificationHandler": {
        "expression": "!conditions.isNotificationTabEditMode && commandContext.selectedObjects && commandContext.selectedObjects.length > 0"
      },
      "isEditNotificationHandler": {
        "expression": "conditions.isNotificationTabEditMode && commandContext.selectedObjects && commandContext.selectedObjects.length > 0"
      },
      "isAddTemplateArgumentCommandVisible": {
        "expression": "commandContext.vmo.type === 'KeyRole' && commandContext.vmo.isPlaceHolder"
      },
      "isRemoveTemplateArgumentCommandVisible": {
        "expression": "(commandContext.vmo.type === 'KeyRole' || commandContext.vmo.type === 'User' || commandContext.vmo.type === 'ResourcePool' || commandContext.vmo.type === 'EPMSignoffProfile') && commandContext.vmo.canRemove"
      },
      "isRemoveNotificationHandler": {
        "expression": "conditions.isNotificationTabEditMode && commandContext.selectedObjects && commandContext.selectedObjects.length > 0"
      },
      "isTemplateActionHandlerAddRow": {
        "expression": "conditions.isTaskTemplateInEditMode && conditions.isHandlerTabActive"
      },
      "isTemplateRuleHandlerAddRow": {
        "expression": "conditions.isTaskTemplateInEditMode && conditions.isHandlerTabActive"
      },
      "isTemplateCreateOrUpdateHandler": {
        "expression": "ctx.workflowHandlerCtx.selectedObject && conditions.isHandlerTabActive"
      },
      "isAddHandlerArgumentPanelCommandVisible": {
        "expression": "(ctx.argumentsPanelData.actionHandlersLOV.dbValue !== '' || ctx.argumentsPanelData.ruleHandlersLOV.dbValue !== '' || ctx.argumentsPanelData.handlerName.dbValue !== '') && conditions.isTaskTemplateInEditMode && ctx.argumentsPanelData.actionTypeLOV.dbValue !== '' && ctx.argumentsPanelData.dataProviders.argumentsDataProvider.selectedObjects.length === 0 && !ctx.argumentsPanelData.no_arguments && ctx.argumentsPanelData.isAddHandlerArgumentPanelVisible"
      },
      "isAwp0StartArgumentEditCommandVisible": {
        "expression": "ctx.argumentsPanelData.dataProviders.argumentsDataProvider.selectedObjects.length > 0 && conditions.isTaskTemplateInEditMode && !ctx.argumentsPanelData.no_arguments"
      },
      "isRemoveHandlerArgumentPanelCommandVisible": {
        "expression": "ctx.argumentsPanelData.dataProviders.argumentsDataProvider.selectedObjects.length > 0 && conditions.isTaskTemplateInEditMode && !ctx.argumentsPanelData.dataProviders.argumentsDataProvider.selectedObjects[0].isMandatoryArgument"
      },
      "isAwp0RemoveActionHandlerCommandVisible": {
        "expression": "ctx.handlerTableData.dataProviders.actionHandlerDataProvider.selectedObjects.length > 0 && conditions.isTaskTemplateInEditMode && conditions.isHandlerTabActive"
      },
      "isAwp0CopyActionHandlerCommandVisible": {
        "expression": "conditions.isTCServerVersion123OrLater && ctx.handlerTableData.dataProviders.actionHandlerDataProvider.selectedObjects.length > 0 && conditions.isHandlerTabActive"
      },
      "isAwp0OpenActionHandlerInfoCommandVisible": {
        "expression": "!conditions.isTaskTemplateInEditMode && ctx.handlerTableData.dataProviders.actionHandlerDataProvider.selectedObjects.length > 0 && conditions.isHandlerTabActive"
      },
      "isAwp0OpenActionHandlerEditCommandVisible": {
        "expression": "conditions.isTaskTemplateInEditMode && ctx.handlerTableData.dataProviders.actionHandlerDataProvider.selectedObjects.length > 0 && conditions.isHandlerTabActive"
      },
      "isAwp0RemoveRuleHandlerCommandVisible": {
        "expression": "ctx.handlerTableData.dataProviders.ruleHandlerDataProvider.selectedObjects.length > 0 && conditions.isTaskTemplateInEditMode && conditions.isHandlerTabActive"
      },
      "isAwp0RuleHandlerPasteGroupCommandVisible": {
        "expression": "ctx.handlerToPaste && ctx.handlerToPaste.type === 'EPMBRHandler' && conditions.isTaskTemplateInEditMode && conditions.isHandlerTabActive"
      },
      "isAwp0ActionHandlerPasteGroupCommandVisible": {
        "expression": "ctx.handlerToPaste && ctx.handlerToPaste.type === 'EPMHandler' && conditions.isTaskTemplateInEditMode && conditions.isHandlerTabActive"
      },
      "isAwp0ActionHandlerMoveUpCommandVisible": {
        "expression": "ctx.handlerTableData.dataProviders.actionHandlerDataProvider.selectedObjects.length > 0 && ctx.enableActionHandlerMoveUp && conditions.isTaskTemplateInEditMode && conditions.isHandlerTabActive"
      },
      "isAwp0ActionHandlerMoveDownCommandVisible": {
        "expression": "ctx.handlerTableData.dataProviders.actionHandlerDataProvider.selectedObjects.length > 0 && ctx.enableActionHandlerMoveDown && conditions.isTaskTemplateInEditMode && conditions.isHandlerTabActive"
      },
      "isAwp0RuleHandlerMoveUpCommandVisible": {
        "expression": "ctx.handlerTableData.dataProviders.ruleHandlerDataProvider.selectedObjects.length > 0 && ctx.enableRuleHandlerMoveUp && conditions.isTaskTemplateInEditMode && conditions.isHandlerTabActive"
      },
      "isAwp0RuleHandlerMoveDownCommandVisible": {
        "expression": "ctx.handlerTableData.dataProviders.ruleHandlerDataProvider.selectedObjects.length > 0 && ctx.enableRuleHandlerMoveDown && conditions.isTaskTemplateInEditMode && conditions.isHandlerTabActive"
      },
      "isAwp0CopyRuleHandlerCommandVisible": {
        "expression": "conditions.isTCServerVersion123OrLater && ctx.handlerTableData.dataProviders.ruleHandlerDataProvider.selectedObjects.length > 0 && conditions.isHandlerTabActive"
      },
      "isAwp0OpenRuleHandlerInfoCommandVisible": {
        "expression": "!conditions.isTaskTemplateInEditMode && ctx.handlerTableData.dataProviders.ruleHandlerDataProvider.selectedObjects.length > 0 && conditions.isHandlerTabActive"
      },
      "isAwp0OpenRuleHandlerEditCommandVisible": {
        "expression": "conditions.isTaskTemplateInEditMode && ctx.handlerTableData.dataProviders.ruleHandlerDataProvider.selectedObjects.length > 0 && conditions.isHandlerTabActive"
      },
      "isAssignmentTabEditMode": {
        "expression": "conditions.isTaskTemplateInEditMode"
      },
      "isAddAssignmentHandler": {
        "expression": "conditions.isAssignmentTabEditMode && ( !commandContext.selectedObjects || commandContext.selectedObjects.length <= 0)"
      },
      "isShowAssignemntHandler": {
        "expression": "!conditions.isAssignmentTabEditMode && commandContext.selectedObjects && commandContext.selectedObjects.length > 0 && !conditions.isProfileObjectSelected"
      },
      "isEditAssignemntHandler": {
        "expression": "conditions.isAssignmentTabEditMode && commandContext.selectedObjects && commandContext.selectedObjects.length > 0 && !conditions.isProfileObjectSelected"
      },
      "isShowProfileInfo": {
        "expression": "!conditions.isAssignmentTabEditMode && commandContext.selectedObjects && commandContext.selectedObjects.length > 0 && conditions.isProfileObjectSelected"
      },
      "isEditProfileInfo": {
        "expression": "conditions.isAssignmentTabEditMode && commandContext.selectedObjects && commandContext.selectedObjects.length > 0 && conditions.isProfileObjectSelected"
      },
      "isProfileObjectSelected": {
        "expression": "commandContext.selectedObjects[0].modelType.typeHierarchyArray.indexOf( 'EPMSignoffProfile' ) > -1"
      },
      "isRemoveSignoffProfile": {
        "expression": "conditions.isAssignmentTabEditMode && commandContext.selectedObjects && commandContext.selectedObjects.length > 0 && commandContext.selectedObjects[0].modelType.typeHierarchyArray.indexOf( 'EPMSignoffProfile' ) > -1"
      },
      "isRemoveAssignmentHandler": {
        "expression": "conditions.isAssignmentTabEditMode && commandContext.selectedObjects && commandContext.selectedObjects.length > 0 && !conditions.isRemoveSignoffProfile"
      },
      "isTaskTemplateInEditMode": {
        "expression": "ctx.xrtSummaryContextObject && ctx.workflowDgmEditCtx.editObjectUids && ctx.workflowDgmEditCtx.editObjectUids.indexOf( ctx.xrtSummaryContextObject.uid ) > -1"
      },
      "isConditionTaskTemplate": {
        "expression": "ctx.workflowDgmCtx.selectedEdges.length > 0 && ctx.workflowDgmCtx.selectedEdges[0].sourceNode.modelObject.type === 'EPMConditionTaskTemplate' && ctx.workflowDgmCtx.selectedEdges[0].category === 'SuccessPath'"
      },
      "isValidateTaskTemplate": {
        "expression": "ctx.workflowDgmCtx.selectedEdges.length > 0 && ctx.workflowDgmCtx.selectedEdges[0].sourceNode.modelObject.type === 'EPMValidateTaskTemplate' && ctx.workflowDgmCtx.selectedEdges[0].category === 'FailPath'"
      },
      "isAddFormHandler": {
        "expression": "conditions.isTaskTemplateInEditMode && commandContext.viewModelCollection.loadedVMObjects.length === 0"
      },
      "isRemoveFormHandler": {
        "expression": "conditions.isTaskTemplateInEditMode && commandContext.selectedObjects && commandContext.selectedObjects.length > 0"
      },
      "isShowFormHandler": {
        "expression": "!conditions.isTaskTemplateInEditMode && commandContext.selectedObjects && commandContext.selectedObjects.length > 0"
      },
      "isEditFormHandler": {
        "expression": "conditions.isTaskTemplateInEditMode && commandContext.selectedObjects && commandContext.selectedObjects.length > 0"
      },
      "isTaskPaletteSelected": {
        "expression": "conditions.isTaskTemplateInEditMode && ctx.workflowDgmCtx.taskLegendPaletteMode"
      },
      "isTaskPaletteVisible": {
        "expression": "conditions.isTaskTemplateInEditMode && ctx.graph.legendData.createTaskTemplateCategories && ctx.graph.legendData.createPathCategories && !ctx.workflowDgmCtx.useFixedLayout"
      },
      "isShowFixedLayout": {
        "expression": "data.preferences.WRKFLW_use_fixed_position[0] === 'true' && ctx.workflowDgmCtx.diagram.isAutoLayoutOn"
      },
      "isSaveNodePositions": {
        "expression": "conditions.isTCServerVersion123OrLater &&  data.preferences.WRKFLW_save_node_positions[0] && data.preferences.WRKFLW_save_node_positions[0] === 'true' && ctx.workflowDgmCtx && ctx.workflowDgmCtx.diagram.isAutoLayoutOn"
      },
      "isFixedCtx": {
        "expression": "!ctx.workflowDgmCtx.diagram.isAutoLayoutOn"
      },
      "isShowAutoLayout": {
        "expression": "data.preferences.WRKFLW_use_fixed_position[0] === 'true' && !ctx.workflowDgmCtx.diagram.isAutoLayoutOn"
      },
      "WorkflowDesigenrShowLegendHandlerConditionActive": {
        "expression": "( ctx.xrtSummaryContextObject && ctx.xrtSummaryContextObject.modelType.typeHierarchyArray.indexOf( 'EPMTaskTemplate' ) > -1 ) && (ctx.xrtPageContext.secondaryXrtPageID ==='tc_xrt_Workflow' || ctx.xrtPageContext.primaryXrtPageID === 'tc_xrt_Workflow')"
      },
      "cmdWorkflowDesignerLayoutOptionsActive": {
        "expression": "conditions.WorkflowDesigenrShowLegendHandlerConditionActive"
      },
      "cmdWorkflowDesignerRightToLeftLayoutActive": {
        "expression": " conditions.WorkflowDesigenrShowLegendHandlerConditionActive"
      },
      "cmdWorkflowDesignerLeftToRightLayoutActive": {
        "expression": "conditions.WorkflowDesigenrShowLegendHandlerConditionActive"
      },
      "cmdWorkflowDesignerFixedLayoutActive": {
        "expression": "conditions.WorkflowDesigenrShowLegendHandlerConditionActive"
      },
      "cmdWorkflowDesignerTopToBottomLayoutSelected": {
        "expression": "ctx.workflowDgmCtx.diagram.isAutoLayoutOn && ctx.workflowDgmCtx.diagram.layoutOption === 'GcTopToBottomLayout'"
      },
      "cmdWorkflowDesignerRightToLeftLayoutSelected": {
        "expression": "ctx.workflowDgmCtx.diagram.isAutoLayoutOn && ctx.workflowDgmCtx.diagram.layoutOption === 'GcRightToLeftLayout'"
      },
      "cmdWorkflowDesignerLeftToRightLayoutSelected": {
        "expression": "ctx.workflowDgmCtx.diagram.isAutoLayoutOn && ctx.workflowDgmCtx.diagram.layoutOption === 'GcLeftToRightLayout'"
      },
      "cmdWorkflowDesignerFixedLayoutSelected": {
        "expression": "!ctx.workflowDgmCtx.diagram.isAutoLayoutOn && ctx.workflowDgmCtx.diagram.layoutOption === 'FixedLayout'"
      },
      "isImportPALCmdVisible": {
        "expression": "ctx.locationContext['ActiveWorkspace:Location'] === 'assignmentListLocation'"
      },
      "isExportPALCmdVisible": {
        "expression": "ctx.selected && ctx.locationContext['ActiveWorkspace:Location'] === 'assignmentListLocation'"
      },
      "isProfileCommandVisible": {
        "expression": "(commandContext.vmo.modelType.typeHierarchyArray.indexOf( 'EPMSignoffProfile' ) > -1 && commandContext.vmo.props.number_of_signoffs.dbValues[0] > 0) && conditions.isPriviledgeToModify && conditions.isInPALEditMode"
      },
      "isRemoveTemplateAssignmentCommandVisible": {
        "expression": "(commandContext.selectedObjects && commandContext.selectedObjects.length > 0 && commandContext.selectedObjects[0].modelType.typeHierarchyArray.indexOf( 'EPMSignoffProfile' ) <= -1) && conditions.isPriviledgeToModify && conditions.isInPALEditMode"
      },
      "isAddTemplateUserAssignmentCommandVisible": {
        "expression": "((commandContext.selectionModel.mode==='multiple' || commandContext.viewModelCollection.loadedVMObjects.length <= 0) && !conditions.isProfileExistAndReviewersSectionSelectedPAL) && conditions.isPriviledgeToModify && conditions.isInPALEditMode"
      },
      "isProfileExistAndReviewersSectionSelectedPAL": {
        "expression": "commandContext.viewModelCollection.loadedVMObjects.length > 0 && (commandContext.viewModelCollection.loadedVMObjects[0].profile || commandContext.viewModelCollection.loadedVMObjects[0].modelType.typeHierarchyArray.indexOf( 'EPMSignoffProfile' ) > -1) && commandContext.name === 'reviewersDataProvider'"
      },
      "isTemplateAssignmentEditCommandVisibility": {
        "expression": "ctx.xrtSummaryContextObject.modelType.typeHierarchyArray.indexOf( 'EPMAssignmentList' ) > -1 && ctx.workflowPalData && ctx.workflowPalData.isTemplateAssignmentInProgress"
      },
      "isTemplateAssignmentStartEditCommandVisibility": {
        "expression": "ctx.xrtSummaryContextObject.modelType.typeHierarchyArray.indexOf( 'EPMAssignmentList' ) > -1 && ctx.workflowPalData && !ctx.workflowPalData.isInEditMode && conditions.isPriviledgeToModify && (conditions.isSummaryView || conditions.isNoneView || conditions.isTableSummaryView )"
      },
      "isCreateAssignmentListCommandVisibility": {
        "expression": "(!ctx.selected && ctx.locationContext['ActiveWorkspace:Location'] === 'assignmentListLocation') && conditions.isPalMgmtTCServerVersion122OrLater"
      },
      "isPriviledgeToModify": {
        "expression": "ctx.workflowPalData.isPriviledgeToModify && conditions.isPalMgmtTCServerVersion122OrLater"
      },
      "isPalMgmtTCServerVersion122OrLater": {
        "expression": "(ctx.tcSessionData.tcMajorVersion > 12 || (ctx.tcSessionData.tcMajorVersion === 12 && ctx.tcSessionData.tcMinorVersion >= 2 ) )"
      },
      "removePALCommandVisibility": {
        "expression": "(( ctx.selected && ctx.selected.modelType.typeHierarchyArray.indexOf( 'EPMAssignmentList' ) > -1) || conditions.isPALContextCondition ) && conditions.isPriviledgeToDelete"
      },
      "isPriviledgeToDelete": {
        "expression": "ctx.visibleServerCommands.Awp0DeletePAL && conditions.isPalMgmtTCServerVersion122OrLater"
      },
      "isInPALEditMode": {
        "expression": "ctx.workflowPalData && ctx.workflowPalData.isInEditMode"
      },
      "isPALContextCondition": {
        "expression": "ctx.xrtSummaryContextObject && ctx.xrtSummaryContextObject.modelType.typeHierarchyArray.indexOf( 'EPMAssignmentList' ) > -1"
      },
      "isOpenPALTemplateAssignmentPanelCondition": {
        "expression": "conditions.isPALContextCondition && ctx.selected && ctx.selected.modelType.typeHierarchyArray.indexOf( 'EPMTaskTemplate' ) > -1"
      }
    },
    "i18n": {
      "createWorkflow": [
        "InboxMessages"
      ],
      "promote": [
        "InboxMessages"
      ],
      "outOfOfficeCommandTitle": [
        "InboxMessages"
      ],
      "openInboxLocationCommand": [
        "InboxMessages"
      ],
      "inboxFiltersCommandTitle": [
        "InboxMessages",
        "InboxMessages"
      ],
      "surrogateAdd": [
        "InboxMessages"
      ],
      "removeCommandTitle": [
        "InboxMessages",
        "InboxMessages",
        "InboxMessages",
        "InboxMessages"
      ],
      "addSurrogateTitle": [
        "InboxMessages"
      ],
      "reassign": [
        "InboxMessages"
      ],
      "releaseCommand": [
        "InboxMessages"
      ],
      "copySuccessful": [
        "InboxMessages"
      ],
      "copyMultipleSuccessful": [
        "ZeroCompileCommandMessages"
      ],
      "standInCommand": [
        "InboxMessages"
      ],
      "removeSurrogateCommand": [
        "InboxMessages"
      ],
      "performTask": [
        "InboxMessages"
      ],
      "claimTask": [
        "InboxMessages"
      ],
      "taskCompletedInBackgroundMsg": [
        "InboxMessages"
      ],
      "taskCannotCompletedErrorMsg": [
        "InboxMessages"
      ],
      "abort": [
        "InboxMessages"
      ],
      "inboxTitle": [
        "InboxMessages"
      ],
      "demote": [
        "InboxMessages"
      ],
      "suspend": [
        "InboxMessages"
      ],
      "resume": [
        "InboxMessages"
      ],
      "awp0_sectionCommands": [
        "InboxMessages"
      ],
      "awp0_addSurrogateSectionCommands": [
        "InboxMessages"
      ],
      "aw_taskProfileCellCommand": [
        "InboxMessages"
      ],
      "aw_taskProfileSignoffCommand": [
        "InboxMessages"
      ],
      "aw_taskAdhocSignoffCommand": [
        "InboxMessages"
      ],
      "aw_ackTaskAdhocSignoffCommand": [
        "InboxMessages"
      ],
      "aw_notifyTaskAdhocSignoffCommand": [
        "InboxMessages"
      ],
      "Awp0PromoteTaskDesc": [
        "InboxMessages"
      ],
      "Awp0OutOfOfficeDesc": [
        "InboxMessages"
      ],
      "Awp0OpenInboxLocationDesc": [
        "InboxMessages"
      ],
      "Awp0InboxFiltersDesc": [
        "InboxMessages"
      ],
      "Awp0SurrogateAddCmdDesc": [
        "InboxMessages"
      ],
      "Awp0AddReviewProfileSignoffCellCommandDesc": [
        "InboxMessages"
      ],
      "Awp0AddReviewAdhocSignoffCommandDesc": [
        "InboxMessages"
      ],
      "Awp0RemoveReviewAdhocSignoffCommandDesc": [
        "InboxMessages"
      ],
      "Awp0AddSurrogateDesc": [
        "InboxMessages"
      ],
      "Awp0AddResourcePoolDesc": [
        "InboxMessages"
      ],
      "Awp0RemoveResourcePoolDesc": [
        "InboxMessages"
      ],
      "Awp0ReassignTaskDesc": [
        "InboxMessages"
      ],
      "Awp0ReleaseDesc": [
        "InboxMessages"
      ],
      "Awp0StandInDesc": [
        "InboxMessages"
      ],
      "Awp0RemoveSurrogateDesc": [
        "InboxMessages"
      ],
      "Awp0PerformTaskPanelDesc": [
        "InboxMessages"
      ],
      "Awp0ClaimTaskDesc": [
        "InboxMessages"
      ],
      "Awp0AbortTaskDesc": [
        "InboxMessages"
      ],
      "Awp0GoInboxDesc": [
        "InboxMessages"
      ],
      "Awp0GoInboxWithoutBubbleDesc": [
        "InboxMessages"
      ],
      "Awp0AddReviewerDesc": [
        "InboxMessages"
      ],
      "Awp0DemoteTaskDesc": [
        "InboxMessages"
      ],
      "Awp0SuspendTaskDesc": [
        "InboxMessages"
      ],
      "Awp0ResumeTaskDesc": [
        "InboxMessages"
      ],
      "Awp0AddAcknowledgeAdhocSignoffCommandDesc": [
        "InboxMessages"
      ],
      "singleWorkflowDeleteConfirmationMessage": [
        "InboxMessages"
      ],
      "delete": [
        "ZeroCompileCommandMessages",
        "ZeroCompileCommandMessages"
      ],
      "cancel": [
        "ZeroCompileCommandMessages",
        "ZeroCompileCommandMessages",
        "ZeroCompileCommandMessages"
      ],
      "deleteSingleFailureMessage": [
        "ZeroCompileCommandMessages"
      ],
      "singleDeleteConfirmationMessage": [
        "ZeroCompileCommandMessages"
      ],
      "deleteWorkflow": [
        "InboxMessages"
      ],
      "Awp0DeleteWorkflowDesc": [
        "InboxMessages"
      ],
      "multiWorkflowDeleteConfirmationMessage": [
        "InboxMessages"
      ],
      "Awp0ShowAddObjectDesc": [
        "ZeroCompileCommandMessages"
      ],
      "replaceMultipleParticipantsCommandTitle": [
        "WorkflowCommandPanelsMessages"
      ],
      "assignFrom": [
        "WorkflowCommandPanelsMessages"
      ],
      "assignTo": [
        "WorkflowCommandPanelsMessages"
      ],
      "backTo": [
        "WorkflowCommandPanelsMessages"
      ],
      "showChildren": [
        "WorkflowCommandPanelsMessages",
        "WorkflowCommandPanelsMessages"
      ],
      "hideChildren": [
        "WorkflowCommandPanelsMessages",
        "WorkflowCommandPanelsMessages"
      ],
      "showSubProcess": [
        "WorkflowCommandPanelsMessages"
      ],
      "hideSubProcess": [
        "WorkflowCommandPanelsMessages"
      ],
      "Workflow_Title": [
        "WorkflowCommandPanelsMessages"
      ],
      "someSubmittableObjects": [
        "WorkflowCommandPanelsMessages"
      ],
      "checkedOutError": [
        "WorkflowCommandPanelsMessages"
      ],
      "replicaObject": [
        "WorkflowCommandPanelsMessages"
      ],
      "Proceed": [
        "WorkflowCommandPanelsMessages"
      ],
      "CancelText": [
        "WorkflowCommandPanelsMessages"
      ],
      "objNotItemRevision": [
        "WorkflowCommandPanelsMessages"
      ],
      "someReassignable": [
        "WorkflowCommandPanelsMessages"
      ],
      "oneReassignable": [
        "WorkflowCommandPanelsMessages"
      ],
      "oneNonReassignable": [
        "WorkflowCommandPanelsMessages"
      ],
      "allowableParticipantErrorMessages": [
        "WorkflowCommandPanelsMessages"
      ],
      "removeParticipantErrorMessages": [
        "WorkflowCommandPanelsMessages"
      ],
      "ParticipantNotAllowMultipleUserErrorMessages": [
        "WorkflowCommandPanelsMessages"
      ],
      "RemoveParticipant": [
        "WorkflowCommandPanelsMessages"
      ],
      "objNotItemRevision1": [
        "WorkflowCommandPanelsMessages"
      ],
      "Add_Title": [
        "WorkflowCommandPanelsMessages",
        "WorkflowCommandPanelsMessages"
      ],
      "addReviewerLabelText": [
        "InboxMessages"
      ],
      "required": [
        "InboxMessages"
      ],
      "assignee": [
        "WorkflowCommandPanelsMessages"
      ],
      "saveEdit": [
        "WorkflowCommandPanelsMessages",
        "WorkflowCommandPanelsMessages",
        "WorkflowCommandPanelsMessages"
      ],
      "cancelEdit": [
        "WorkflowCommandPanelsMessages",
        "WorkflowCommandPanelsMessages",
        "WorkflowCommandPanelsMessages"
      ],
      "aw_profileCellCommand": [
        "WorkflowCommandPanelsMessages"
      ],
      "aw_tasksAferSubmitProfileCellCommand": [
        "WorkflowCommandPanelsMessages"
      ],
      "awp0_fromSectionCommands": [
        "WorkflowCommandPanelsMessages"
      ],
      "awp0_toSectionCommands": [
        "WorkflowCommandPanelsMessages"
      ],
      "awp0_addParticipantEPMJobSectionCommands": [
        "WorkflowCommandPanelsMessages"
      ],
      "Awp0AddTaskAssignmentCmdDesc": [
        "WorkflowCommandPanelsMessages"
      ],
      "awp0_addUsersOnPanelAnchor": [
        "WorkflowCommandPanelsMessages"
      ],
      "newWorkflowProcess.taskAssigneeSection": [
        "WorkflowCommandPanelsMessages"
      ],
      "aw_workflowViewer": [
        "WorkflowCommandPanelsMessages"
      ],
      "Awp0EditCommands_Right": [
        "WorkflowCommandPanelsMessages"
      ],
      "Awp0StartEditTitle": [
        "ZeroCompileCommandMessages",
        "ZeroCompileCommandMessages",
        "ZeroCompileCommandMessages"
      ],
      "topToBottomLayout": [
        "GraphMessages"
      ],
      "rightToLeftLayout": [
        "GraphMessages"
      ],
      "leftToRightLayout": [
        "GraphMessages"
      ],
      "topToBottomLayoutDesc": [
        "WorkflowCommandPanelsMessages"
      ],
      "rightToLeftLayoutDesc": [
        "WorkflowCommandPanelsMessages"
      ],
      "leftToRightLayoutDesc": [
        "WorkflowCommandPanelsMessages"
      ],
      "fixedLayout": [
        "WorkflowCommandPanelsMessages"
      ],
      "Awp0ReplaceMultipleParticipantsDesc": [
        "WorkflowCommandPanelsMessages"
      ],
      "Awp0FromSectionAddCmdDesc": [
        "WorkflowCommandPanelsMessages"
      ],
      "Awp0ToSectionAddCmdDesc": [
        "WorkflowCommandPanelsMessages"
      ],
      "Awp0RemoveParticipantDesc": [
        "WorkflowCommandPanelsMessages"
      ],
      "Awp0RemoveProcessAssignmentCmdDesc": [
        "InboxMessages",
        "InboxMessages"
      ],
      "Awp0RemoveTaskAssignmentCmdDesc": [
        "InboxMessages"
      ],
      "Awp0AddUsersAssignmentCmdDesc": [
        "WorkflowCommandPanelsMessages"
      ],
      "Awp0ProfileSignoffCellCommandDesc": [
        "WorkflowCommandPanelsMessages"
      ],
      "Awp0SaveAssignmentDesc": [
        "WorkflowCommandPanelsMessages"
      ],
      "Awp0CancelAssignmentDesc": [
        "WorkflowCommandPanelsMessages"
      ],
      "Awp0StartEditAssignmentDesc": [
        "WorkflowCommandPanelsMessages"
      ],
      "Awp0NewWorkflowProcessDesc": [
        "WorkflowCommandPanelsMessages"
      ],
      "Awp0AddParticipantDesc": [
        "WorkflowCommandPanelsMessages"
      ],
      "Replace_Title": [
        "WorkflowCommandPanelsMessages",
        "WorkflowCommandPanelsMessages"
      ],
      "Awp0ReplaceParticipantDesc": [
        "WorkflowCommandPanelsMessages"
      ],
      "Awp0WorkflowFixedLayoutDesc": [
        "WorkflowCommandPanelsMessages"
      ],
      "createWorkflowSubProcess": [
        "WorkflowCommandPanelsMessages"
      ],
      "Awp0NewWorkflowSubProcessDesc": [
        "WorkflowCommandPanelsMessages"
      ],
      "addProcessTargets": [
        "WorkflowCommandPanelsMessages"
      ],
      "Awp0AddWorkflowProcessTargetDesc": [
        "WorkflowCommandPanelsMessages"
      ],
      "Awp0RemoveWorkflowProcessTargetDesc": [
        "WorkflowCommandPanelsMessages"
      ],
      "Awp0RemoveTaskAssignmentDesc": [
        "WorkflowCommandPanelsMessages"
      ],
      "Awp0ReplaceTaskAssignmentDesc": [
        "WorkflowCommandPanelsMessages"
      ],
      "Awp0AddTaskParticipantAssignmentCmdDesc": [
        "WorkflowCommandPanelsMessages"
      ],
      "Awp0RemoveTaskParticipantAssignmentCmdDesc": [
        "WorkflowCommandPanelsMessages"
      ],
      "closeText": [
        "ZeroCompileCommandMessages"
      ],
      "Awp0CloseCommandPanelDesc": [
        "ZeroCompileCommandMessages"
      ],
      "assignCmdTitle": [
        "WorkflowCommandPanelsMessages",
        "WorkflowCommandPanelsMessages"
      ],
      "Awp0PasteUserAssignmentCmdDesc": [
        "WorkflowCommandPanelsMessages"
      ],
      "clearSelections": [
        "ZeroCompileCommandMessages"
      ],
      "assignTask": [
        "WorkflowCommandPanelsMessages"
      ],
      "panelPinButtonDesc": [
        "awAddDirectiveMessages"
      ],
      "panelUnPinButtonDesc": [
        "awAddDirectiveMessages"
      ],
      "addObjectPanelPinButtonToolTip": [
        "awAddDirectiveMessages"
      ],
      "addObjectPanelUnpinButtonToolTip": [
        "awAddDirectiveMessages"
      ],
      "Awp0CutTitle": [
        "ZeroCompileCommandMessages",
        "ZeroCompileCommandMessages"
      ],
      "openTaskAssignmentPanel": [
        "WorkflowCommandPanelsMessages",
        "WorkflowCommandPanelsMessages"
      ],
      "newWorkflowProcessTemplate": [
        "WorkflowDesignerMessages"
      ],
      "deletePALConfirmationMessage": [
        "WorkflowPalMgmtMessages",
        "WorkflowPalMgmtMessages"
      ],
      "import": [
        "WorkflowDesignerMessages",
        "WorkflowPalMgmtMessages"
      ],
      "export": [
        "WorkflowDesignerMessages",
        "WorkflowPalMgmtMessages"
      ],
      "convertToParentCmdTitle": [
        "WorkflowDesignerMessages"
      ],
      "gridSetting": [
        "WorkflowDesignerMessages"
      ],
      "processTemplateOfflineConfirmation": [
        "WorkflowDesignerMessages"
      ],
      "onlineOption": [
        "WorkflowDesignerMessages"
      ],
      "offlineOption": [
        "WorkflowDesignerMessages"
      ],
      "showTaskInfo": [
        "WorkflowDesignerMessages"
      ],
      "save": [
        "TCUICommandPanelsMessages"
      ],
      "Awp0NameValueRemoveTitle": [
        "ZeroCompileCommandMessages"
      ],
      "addCommandTitle": [
        "InboxMessages"
      ],
      "Awp0ObjectInfoTitle": [
        "ZeroCompileCommandMessages"
      ],
      "Awp0StartEditTableTitle": [
        "ZeroCompileCommandMessages"
      ],
      "addArguments": [
        "WorkflowDesignerMessages"
      ],
      "Awp0CopyTitle": [
        "ZeroCompileCommandMessages"
      ],
      "handlerCutDesc": [
        "ZeroCompileCommandMessages"
      ],
      "Awp0PasteTitle": [
        "ZeroCompileCommandMessages"
      ],
      "exportMoveUpCommandTitle": [
        "ZeroCompileCommandMessages"
      ],
      "exportMoveDownCommandTitle": [
        "ZeroCompileCommandMessages"
      ],
      "assign_action": [
        "WorkflowDesignerMessages"
      ],
      "handlerMoveupDesc": [
        "ZeroCompileCommandMessages"
      ],
      "handlerMoveDownDesc": [
        "ZeroCompileCommandMessages"
      ],
      "start_action": [
        "WorkflowDesignerMessages"
      ],
      "perform_action": [
        "WorkflowDesignerMessages"
      ],
      "complete_action": [
        "WorkflowDesignerMessages"
      ],
      "skip_action": [
        "WorkflowDesignerMessages"
      ],
      "suspend_action": [
        "WorkflowDesignerMessages"
      ],
      "resume_action": [
        "WorkflowDesignerMessages"
      ],
      "abort_action": [
        "WorkflowDesignerMessages"
      ],
      "undo_action": [
        "WorkflowDesignerMessages"
      ],
      "classificationCopySuccess": [
        "ClassificationPanelMessages"
      ],
      "pasteHandlerDesc": [
        "ZeroCompileCommandMessages"
      ],
      "endTemplateEdit": [
        "WorkflowDesignerMessages"
      ],
      "taskPalette": [
        "WorkflowDesignerMessages"
      ],
      "saveTemplatePositionConfirmation": [
        "WorkflowDesignerMessages"
      ],
      "saveGraphPosition": [
        "WorkflowDesignerMessages"
      ],
      "showFixedLayout": [
        "WorkflowDesignerMessages"
      ],
      "showAutoLayout": [
        "WorkflowDesignerMessages"
      ],
      "yes": [
        "WorkflowDesignerMessages"
      ],
      "no": [
        "WorkflowDesignerMessages"
      ],
      "applyTemplateToProcessesConfirmation": [
        "WorkflowDesignerMessages"
      ],
      "applyTemplateToProcessSuccessfulMsg": [
        "WorkflowDesignerMessages"
      ],
      "noProcessFoundToApplyTemplateChanges": [
        "WorkflowDesignerMessages"
      ],
      "helpTitle": [
        "ZeroCompileCommandBaseMessages"
      ],
      "helpDesc": [
        "ZeroCompileCommandBaseMessages"
      ],
      "applyTemplateToProcessPartialSuccessfulMsg": [
        "WorkflowDesignerMessages"
      ],
      "applyTemplateToProcessesForegroundConfirmation": [
        "WorkflowDesignerMessages"
      ],
      "Awp0NewWorkflowProcessTemplateDesc": [
        "WorkflowDesignerMessages"
      ],
      "Awp0RemoveProcessTemplateDesc": [
        "InboxMessages"
      ],
      "Awp0ImportWorkflowTemplateDesc": [
        "WorkflowDesignerMessages"
      ],
      "Awp0ExportWorkflowTemplateDesc": [
        "WorkflowDesignerMessages"
      ],
      "Awp0ToggleTemplateChildrenDesc": [
        "WorkflowCommandPanelsMessages"
      ],
      "Awp0WorkflowGraphGridSettingsDesc": [
        "WorkflowDesignerMessages"
      ],
      "Awp0TemplateFiltersDesc": [
        "InboxMessages"
      ],
      "Awp0TemplateStartEditDesc": [
        "InboxMessages"
      ],
      "Awp0TemplateSaveEditDesc": [
        "WorkflowDesignerMessages"
      ],
      "Awp0ToggleShowTaskRelatedInfoDesc": [
        "WorkflowDesignerMessages"
      ],
      "Awp0TemplateConvertToParentDesc": [
        "WorkflowDesignerMessages"
      ],
      "Awp0AddHandlerArgumentPanelDesc": [
        "WorkflowDesignerMessages"
      ],
      "Awp0RuleHandlerTableAddDesc": [
        "WorkflowDesignerMessages"
      ],
      "Awp0TemplateAddNotificationHandlerDesc": [
        "InboxMessages"
      ],
      "Awp0TemplateShowNotificationHandlerInfoDesc1": [
        "WorkflowDesignerMessages"
      ],
      "Awp0TemplateRemoveNotificationHandlerDesc1": [
        "WorkflowDesignerMessages"
      ],
      "Awp0TemplateAddArgumentDesc": [
        "InboxMessages"
      ],
      "Awp0TemplateRemoveArgumentDesc": [
        "InboxMessages"
      ],
      "handlerCopyDesc": [
        "ZeroCompileCommandMessages"
      ],
      "Awp0RemoveHandlerArgumentPanelDesc": [
        "InboxMessages"
      ],
      "Awp0RemoveActionHandlerDesc": [
        "InboxMessages"
      ],
      "Awp0RemoveRuleHandlerDesc": [
        "InboxMessages"
      ],
      "Awp0StartActionHandlerEditDesc": [
        "InboxMessages"
      ],
      "Awp0ActionHandlerTableAddDesc": [
        "InboxMessages"
      ],
      "Awp0StartRuleHandlerEditDesc": [
        "InboxMessages"
      ],
      "Awp0StartArgumentEditDesc": [
        "InboxMessages"
      ],
      "Awp0TemplateEndEditDesc": [
        "WorkflowDesignerMessages"
      ],
      "Awp0StartActionTypeDesc": [
        "WorkflowDesignerMessages"
      ],
      "Awp0AssignActionTypeDesc": [
        "WorkflowDesignerMessages"
      ],
      "Awp0PerformActionTypeDesc": [
        "WorkflowDesignerMessages"
      ],
      "Awp0CompleteActionTypeDesc": [
        "WorkflowDesignerMessages"
      ],
      "Awp0SkipActionTypeDesc": [
        "WorkflowDesignerMessages"
      ],
      "Awp0SuspendActionTypeDesc": [
        "WorkflowDesignerMessages"
      ],
      "Awp0ResumeActionTypeDesc": [
        "WorkflowDesignerMessages"
      ],
      "Awp0AbortActionTypeDesc": [
        "WorkflowDesignerMessages"
      ],
      "Awp0UndoActionTypeDesc": [
        "WorkflowDesignerMessages"
      ],
      "Awp0StartActionTypeForRuleDesc": [
        "WorkflowDesignerMessages"
      ],
      "Awp0AssignActionTypeForRuleDesc": [
        "WorkflowDesignerMessages"
      ],
      "Awp0PerformActionTypeForRuleDesc": [
        "WorkflowDesignerMessages"
      ],
      "Awp0CompleteActionTypeForRuleDesc": [
        "WorkflowDesignerMessages"
      ],
      "Awp0SkipActionTypeForRuleDesc": [
        "WorkflowDesignerMessages"
      ],
      "Awp0SuspendActionTypeForRuleDesc": [
        "WorkflowDesignerMessages"
      ],
      "Awp0ResumeActionTypeForRuleDesc": [
        "WorkflowDesignerMessages"
      ],
      "Awp0AbortActionTypeForRuleDesc": [
        "WorkflowDesignerMessages"
      ],
      "Awp0UndoActionTypeForRuleDesc": [
        "WorkflowDesignerMessages"
      ],
      "Awp0SaveGraphPositionsDesc": [
        "WorkflowDesignerMessages"
      ],
      "Awp0ShowFixedLayoutDesc": [
        "WorkflowDesignerMessages"
      ],
      "Awp0ShowAutoLayoutDesc": [
        "WorkflowDesignerMessages"
      ],
      "editArguments": [
        "WorkflowDesignerMessages"
      ],
      "addTitle": [
        "WorkflowDesignerMessages"
      ],
      "Awp0TemplateEditNotificationHandlerInfoDesc": [
        "WorkflowDesignerMessages"
      ],
      "Awp0TemplateAddAssignmentHandlerDesc": [
        "WorkflowDesignerMessages"
      ],
      "Awp0TemplateRemoveAssignmentHandlerDesc": [
        "WorkflowDesignerMessages"
      ],
      "Awp0TemplateShowAssignmentHandlerInfoDesc": [
        "WorkflowDesignerMessages"
      ],
      "Awp0TemplateEditAssignmentHandlerInfoDesc": [
        "WorkflowDesignerMessages"
      ],
      "Awp0StartActionHandlerInfoDesc": [
        "WorkflowDesignerMessages"
      ],
      "Awp0StartRuleHandlerInfoDesc": [
        "WorkflowDesignerMessages"
      ],
      "createProcessAssignmentList": [
        "WorkflowPalMgmtMessages"
      ],
      "removePAL": [
        "WorkflowPalMgmtMessages"
      ],
      "aw_templateProfileCellCommand": [
        "WorkflowPalMgmtMessages"
      ],
      "awp0_templateAssignmentPanelAnchor": [
        "WorkflowPalMgmtMessages"
      ],
      "aw_templateAssignmentRight": [
        "WorkflowPalMgmtMessages"
      ],
      "Awp0TemplateAssignmentProfileCellCommandDesc": [
        "WorkflowCommandPanelsMessages"
      ],
      "Awp0AddTemplateUserAssignmentCmdDesc": [
        "WorkflowCommandPanelsMessages"
      ],
      "Awp0StartEditTemplateAssignmentDesc": [
        "WorkflowPalMgmtMessages"
      ],
      "Awp0SaveTemplateAssignmentDesc": [
        "WorkflowCommandPanelsMessages"
      ],
      "Awp0CancelTemplateAssignmentDesc": [
        "WorkflowCommandPanelsMessages"
      ],
      "Awp0CreateProcessAssignmentListDesc": [
        "WorkflowPalMgmtMessages"
      ],
      "Awp0RemovePALDesc": [
        "WorkflowPalMgmtMessages"
      ],
      "importPALDesc": [
        "WorkflowPalMgmtMessages"
      ],
      "exportPALDesc": [
        "WorkflowPalMgmtMessages"
      ]
    }
  },
  "indicators": {
    "fnd0TaskExecutionStatus": {
      "iconName": "Failed",
      "tooltip": {
        "showPropDisplayName": false,
        "propNames": [
          "fnd0TaskExecutionErrors"
        ]
      },
      "modelTypes": [
        "EPMTask",
        "Signoff"
      ],
      "conditions": {
        "fnd0TaskExecutionStatus": {
          "$eq": 2
        }
      }
    },
    "fnd0InProcess": {
      "iconName": "Workflow",
      "tooltip": {
        "showPropDisplayName": true,
        "propNames": [
          "fnd0InProcess"
        ]
      },
      "conditions": {
        "fnd0InProcess": {
          "$eq": true
        }
      },
      "modelTypes": [
        "WorkspaceObject"
      ]
    },
    "fnd0OfflineTaskTemplateIndiactor": {
      "iconName": "Incomplete",
      "tooltip": {
        "showPropDisplayName": true,
        "propNames": [
          "stage"
        ]
      },
      "conditions": {
        "stage": {
          "$eq": "1"
        }
      },
      "modelTypes": [
        "EPMTaskTemplate"
      ]
    },
    "fnd0OnlineTaskTemplateIndiactor": {
      "iconName": "ApprovedPass",
      "tooltip": {
        "showPropDisplayName": true,
        "propNames": [
          "stage"
        ]
      },
      "conditions": {
        "stage": {
          "$eq": "2"
        }
      },
      "modelTypes": [
        "EPMTaskTemplate"
      ]
    }
  },
  "states": {
    "newInboxComponentLocation": {
      "params": {
        "componentId": null,
        "embeddedLocationView": null,
        "uid": null
      },
      "url": "/newInboxComponentLocation",
      "view": "Awp0GoInbox"
    },
    "newReassignComponentLocation": {
      "params": {
        "componentId": null,
        "embeddedLocationView": null,
        "uid": null
      },
      "url": "/newReassignComponentLocation",
      "view": "Awp0ReassignTask"
    },
    "com_siemens_splm_client_inbox_tasksLocation": {
      "data": {
        "browserSubTitle": {
          "source": "/i18n/InboxMessages",
          "key": "tasksAppDisplayName"
        },
        "headerTitle": {
          "source": "/i18n/InboxMessages",
          "key": "tasksAppDisplayName"
        },
        "propertyPolicy": "/policies/tasksLocationPropertyPolicy.json"
      },
      "params": {
        "userId": null
      },
      "type": "location"
    },
    "myTasks": {
      "controller": "InboxSubLocationCtrl",
      "data": {
        "breadcrumbConfig": {
          "type": "search",
          "vm": "InboxFilterBreadCrumb",
          "noUpdate": true,
          "popuplist": "/html/defaultbreadcrumblist.html",
          "overflowIndex": 0
        },
        "priority": 0,
        "label": {
          "source": "/i18n/InboxMessages",
          "key": "myTasks"
        },
        "clientScopeURI": "fnd0mytasks",
        "nameToken": "com.siemens.splm.client.inbox:myTasksSubLocation",
        "context": {
          "search": {
            "provider": "Awp0InboxProvider",
            "criteria": {
              "searchInboxContentType": "myTasks"
            },
            "sortType": "Priority",
            "chartTitle": {
              "source": "/i18n/InboxMessages",
              "key": "inboxResultsChartTitle"
            }
          }
        },
        "viewBase": "inbox"
      },
      "dependencies": [
        "js/aw.inbox.sublocation.controller"
      ],
      "params": {
        "userId": null,
        "searchCriteria": null,
        "filter": null
      },
      "parent": "com_siemens_splm_client_inbox_tasksLocation",
      "templateUrl": "/html/aw.native.sublocation.html",
      "type": "subLocation",
      "url": "/myTasks"
    },
    "teamTasks": {
      "controller": "InboxSubLocationCtrl",
      "data": {
        "breadcrumbConfig": {
          "type": "search",
          "vm": "InboxFilterBreadCrumb",
          "noUpdate": true,
          "popuplist": "/html/defaultbreadcrumblist.html",
          "overflowIndex": 0
        },
        "priority": 1,
        "label": {
          "source": "/i18n/InboxMessages",
          "key": "teamTasks"
        },
        "clientScopeURI": "Awp0TeamTasks",
        "nameToken": "com.siemens.splm.client.inbox:teamTasksSubLocation",
        "context": {
          "search": {
            "provider": "Awp0InboxProvider",
            "criteria": {
              "searchInboxContentType": "teamTasks"
            },
            "sortType": "Priority",
            "chartTitle": {
              "source": "/i18n/InboxMessages",
              "key": "inboxResultsChartTitle"
            }
          }
        },
        "viewBase": "inbox"
      },
      "dependencies": [
        "js/aw.inbox.sublocation.controller"
      ],
      "params": {
        "userId": null,
        "searchCriteria": null,
        "filter": null
      },
      "parent": "com_siemens_splm_client_inbox_tasksLocation",
      "templateUrl": "/html/aw.native.sublocation.html",
      "type": "subLocation",
      "url": "/teamTasks"
    },
    "taskToTrack": {
      "controller": "InboxSubLocationCtrl",
      "data": {
        "breadcrumbConfig": {
          "type": "search",
          "vm": "InboxFilterBreadCrumb",
          "noUpdate": true,
          "popuplist": "/html/defaultbreadcrumblist.html",
          "overflowIndex": 0
        },
        "priority": 2,
        "label": {
          "source": "/i18n/InboxMessages",
          "key": "tasksToTrack"
        },
        "clientScopeURI": "Awp0TasksToTrack",
        "nameToken": "com.siemens.splm.client.inbox:tasksToTrackSubLocation",
        "context": {
          "search": {
            "provider": "Awp0InboxProvider",
            "criteria": {
              "searchInboxContentType": "taskToTrack"
            },
            "sortType": "Priority",
            "chartTitle": {
              "source": "/i18n/InboxMessages",
              "key": "inboxResultsChartTitle"
            }
          }
        },
        "viewBase": "inbox"
      },
      "dependencies": [
        "js/aw.inbox.sublocation.controller"
      ],
      "params": {
        "userId": null,
        "searchCriteria": null,
        "filter": null
      },
      "parent": "com_siemens_splm_client_inbox_tasksLocation",
      "templateUrl": "/html/aw.native.sublocation.html",
      "type": "subLocation",
      "url": "/taskToTrack"
    },
    "showTasks": {
      "controller": "InboxSubLocationCtrl",
      "data": {
        "breadcrumbConfig": {
          "type": "search",
          "vm": "InboxFilterBreadCrumb",
          "noUpdate": true,
          "popuplist": "/html/defaultbreadcrumblist.html",
          "overflowIndex": 0
        },
        "priority": 3,
        "label": {
          "source": "/i18n/InboxMessages",
          "key": "allTasks"
        },
        "clientScopeURI": "fnd0alltasks",
        "nameToken": "com.siemens.splm.client.inbox:allTasksSubLocation",
        "context": {
          "search": {
            "provider": "Awp0InboxProvider",
            "criteria": {
              "searchInboxContentType": "showTasks"
            },
            "sortType": "Priority",
            "chartTitle": {
              "source": "/i18n/InboxMessages",
              "key": "inboxResultsChartTitle"
            }
          }
        },
        "viewBase": "inbox"
      },
      "dependencies": [
        "js/aw.inbox.sublocation.controller"
      ],
      "params": {
        "userId": null,
        "searchCriteria": null,
        "filter": null
      },
      "parent": "com_siemens_splm_client_inbox_tasksLocation",
      "templateUrl": "/html/aw.native.sublocation.html",
      "type": "subLocation",
      "url": "/showTasks"
    },
    "surrogateTasks": {
      "controller": "InboxSubLocationCtrl",
      "data": {
        "breadcrumbConfig": {
          "type": "search",
          "vm": "InboxFilterBreadCrumb",
          "noUpdate": true,
          "popuplist": "/html/defaultbreadcrumblist.html",
          "overflowIndex": 0
        },
        "priority": 4,
        "label": {
          "source": "/i18n/InboxMessages",
          "key": "surrogateTasks"
        },
        "clientScopeURI": "fnd0surrogatescope",
        "nameToken": "com.siemens.splm.client.inbox:surrogateTasksSubLocation",
        "context": {
          "search": {
            "provider": "Awp0InboxProvider",
            "criteria": {
              "searchInboxContentType": "surrogateTasks"
            },
            "sortType": "Priority",
            "chartTitle": {
              "source": "/i18n/InboxMessages",
              "key": "inboxResultsChartTitle"
            }
          }
        },
        "viewBase": "inbox"
      },
      "dependencies": [
        "js/aw.inbox.sublocation.controller"
      ],
      "params": {
        "userId": null,
        "searchCriteria": null,
        "filter": null
      },
      "parent": "com_siemens_splm_client_inbox_tasksLocation",
      "templateUrl": "/html/aw.native.sublocation.html",
      "type": "subLocation",
      "url": "/surrogateTasks"
    },
    "remoteInboxes": {
      "controller": "InboxSubLocationCtrl",
      "data": {
        "breadcrumbConfig": {
          "type": "search",
          "vm": "InboxFilterBreadCrumb",
          "noUpdate": true,
          "popuplist": "/html/defaultbreadcrumblist.html",
          "overflowIndex": 0,
          "noBreadCrumb": true
        },
        "priority": 5,
        "label": {
          "source": "/i18n/InboxMessages",
          "key": "remoteInboxes"
        },
        "clientScopeURI": "fnd0remotetinboxes",
        "nameToken": "com.siemens.splm.client.inbox:remoteInboxesSubLocation",
        "context": {
          "search": {
            "provider": "Awp0ObjectSetRowProvider",
            "criteria": {
              "objectSet": "Fnd0RemoteInboxProvider.TaskInbox",
              "parentUid": "{{ctx.userSession.props.user.dbValues[0]}}"
            },
            "sortType": "Alphabetical",
            "sortCriteria": [
              {
                "fieldName": "last_mod_date",
                "sortDirection": "DESC"
              }
            ],
            "chartTitle": {
              "source": "/i18n/InboxMessages",
              "key": "inboxResultsChartTitle"
            }
          }
        },
        "viewBase": "inbox",
        "viewModes": {
          "TableView": {
            "primaryWorkArea": "table",
            "secondaryWorkArea": false
          }
        },
        "defaultDisplayMode": "TableView"
      },
      "dependencies": [
        "js/aw.inbox.sublocation.controller"
      ],
      "params": {
        "userId": null,
        "searchCriteria": null,
        "filter": null
      },
      "visibleWhen": {
        "expression": "ctx.preferences.AWC_Enable_Multisite[0] === 'true' && ctx.preferences.AWC_REMOTE_SITE_URL[0]"
      },
      "parent": "com_siemens_splm_client_inbox_tasksLocation",
      "templateUrl": "/html/aw.native.sublocation.html",
      "type": "subLocation",
      "url": "/remoteInboxes"
    },
    "com_siemens_splm_client_inbox_tasksGQLLocation": {
      "data": {
        "browserSubTitle": {
          "source": "/i18n/InboxMessages",
          "key": "tasksAppDisplayName"
        },
        "headerTitle": {
          "source": "/i18n/InboxMessages",
          "key": "tasksAppDisplayName"
        },
        "propertyPolicy": "/policies/tasksLocationPropertyPolicy.json"
      },
      "params": {
        "userId": null
      },
      "view": "tcLocation",
      "parent": "root",
      "url": "/igql"
    },
    "myTasksGQL": {
      "controller": "InboxSubLocationCtrl",
      "data": {
        "breadcrumbConfig": {
          "type": "search",
          "vm": "InboxFilterBreadCrumb",
          "noUpdate": true,
          "popuplist": "/html/defaultbreadcrumblist.html",
          "overflowIndex": 0
        },
        "priority": 0,
        "label": {
          "source": "/i18n/InboxMessages",
          "key": "myTasks"
        },
        "clientScopeURI": "fnd0mytasks",
        "nameToken": "com.siemens.splm.client.inbox:myTasksSubLocation",
        "context": {
          "search": {
            "provider": "Awp0InboxProvider",
            "criteria": {
              "searchInboxContentType": "myTasks"
            },
            "sortType": "Priority",
            "chartTitle": {
              "source": "/i18n/InboxMessages",
              "key": "inboxResultsChartTitle"
            }
          }
        },
        "viewBase": "inboxGQL"
      },
      "dependencies": [
        "js/aw.inbox.sublocation.controller"
      ],
      "params": {
        "userId": null,
        "searchCriteria": null,
        "filter": null
      },
      "parent": "com_siemens_splm_client_inbox_tasksGQLLocation",
      "templateUrl": "/html/aw.native.sublocation.html",
      "type": "subLocation",
      "url": "/myTasks"
    },
    "teamTasksGQL": {
      "controller": "InboxSubLocationCtrl",
      "data": {
        "breadcrumbConfig": {
          "type": "search",
          "vm": "InboxFilterBreadCrumb",
          "noUpdate": true,
          "popuplist": "/html/defaultbreadcrumblist.html",
          "overflowIndex": 0
        },
        "priority": 1,
        "label": {
          "source": "/i18n/InboxMessages",
          "key": "teamTasks"
        },
        "clientScopeURI": "Awp0TeamTasks",
        "nameToken": "com.siemens.splm.client.inbox:teamTasksSubLocation",
        "context": {
          "search": {
            "provider": "Awp0InboxProvider",
            "criteria": {
              "searchInboxContentType": "teamTasks"
            },
            "sortType": "Priority",
            "chartTitle": {
              "source": "/i18n/InboxMessages",
              "key": "inboxResultsChartTitle"
            }
          }
        },
        "viewBase": "inboxGQL"
      },
      "dependencies": [
        "js/aw.inbox.sublocation.controller"
      ],
      "params": {
        "userId": null,
        "searchCriteria": null,
        "filter": null
      },
      "parent": "com_siemens_splm_client_inbox_tasksGQLLocation",
      "templateUrl": "/html/aw.native.sublocation.html",
      "type": "subLocation",
      "url": "/teamTasks"
    },
    "taskToTrackGQL": {
      "controller": "InboxSubLocationCtrl",
      "data": {
        "breadcrumbConfig": {
          "type": "search",
          "vm": "InboxFilterBreadCrumb",
          "noUpdate": true,
          "popuplist": "/html/defaultbreadcrumblist.html",
          "overflowIndex": 0
        },
        "priority": 2,
        "label": {
          "source": "/i18n/InboxMessages",
          "key": "tasksToTrack"
        },
        "clientScopeURI": "Awp0TasksToTrack",
        "nameToken": "com.siemens.splm.client.inbox:tasksToTrackSubLocation",
        "context": {
          "search": {
            "provider": "Awp0InboxProvider",
            "criteria": {
              "searchInboxContentType": "taskToTrack"
            },
            "sortType": "Priority",
            "chartTitle": {
              "source": "/i18n/InboxMessages",
              "key": "inboxResultsChartTitle"
            }
          }
        },
        "viewBase": "inboxGQL"
      },
      "dependencies": [
        "js/aw.inbox.sublocation.controller"
      ],
      "params": {
        "userId": null,
        "searchCriteria": null,
        "filter": null
      },
      "parent": "com_siemens_splm_client_inbox_tasksGQLLocation",
      "templateUrl": "/html/aw.native.sublocation.html",
      "type": "subLocation",
      "url": "/taskToTrack"
    },
    "showTasksGQL": {
      "controller": "InboxSubLocationCtrl",
      "data": {
        "breadcrumbConfig": {
          "type": "search",
          "vm": "InboxFilterBreadCrumb",
          "noUpdate": true,
          "popuplist": "/html/defaultbreadcrumblist.html",
          "overflowIndex": 0
        },
        "priority": 3,
        "label": {
          "source": "/i18n/InboxMessages",
          "key": "allTasks"
        },
        "clientScopeURI": "fnd0alltasks",
        "nameToken": "com.siemens.splm.client.inbox:allTasksSubLocation",
        "context": {
          "search": {
            "provider": "Awp0InboxProvider",
            "criteria": {
              "searchInboxContentType": "showTasks"
            },
            "sortType": "Priority",
            "chartTitle": {
              "source": "/i18n/InboxMessages",
              "key": "inboxResultsChartTitle"
            }
          }
        },
        "viewBase": "inboxGQL"
      },
      "dependencies": [
        "js/aw.inbox.sublocation.controller"
      ],
      "params": {
        "userId": null,
        "searchCriteria": null,
        "filter": null
      },
      "parent": "com_siemens_splm_client_inbox_tasksGQLLocation",
      "templateUrl": "/html/aw.native.sublocation.html",
      "type": "subLocation",
      "url": "/showTasks"
    },
    "surrogateTasksGQL": {
      "controller": "InboxSubLocationCtrl",
      "data": {
        "breadcrumbConfig": {
          "type": "search",
          "vm": "InboxFilterBreadCrumb",
          "noUpdate": true,
          "popuplist": "/html/defaultbreadcrumblist.html",
          "overflowIndex": 0
        },
        "priority": 4,
        "label": {
          "source": "/i18n/InboxMessages",
          "key": "surrogateTasks"
        },
        "clientScopeURI": "fnd0surrogatescope",
        "nameToken": "com.siemens.splm.client.inbox:surrogateTasksSubLocation",
        "context": {
          "search": {
            "provider": "Awp0InboxProvider",
            "criteria": {
              "searchInboxContentType": "surrogateTasks"
            },
            "sortType": "Priority",
            "chartTitle": {
              "source": "/i18n/InboxMessages",
              "key": "inboxResultsChartTitle"
            }
          }
        },
        "viewBase": "inboxGQL"
      },
      "dependencies": [
        "js/aw.inbox.sublocation.controller"
      ],
      "params": {
        "userId": null,
        "searchCriteria": null,
        "filter": null
      },
      "parent": "com_siemens_splm_client_inbox_tasksGQLLocation",
      "templateUrl": "/html/aw.native.sublocation.html",
      "type": "subLocation",
      "url": "/surrogateTasks"
    },
    "remoteInboxesGQL": {
      "controller": "InboxSubLocationCtrl",
      "data": {
        "breadcrumbConfig": {
          "type": "search",
          "vm": "InboxFilterBreadCrumb",
          "noUpdate": true,
          "popuplist": "/html/defaultbreadcrumblist.html",
          "overflowIndex": 0,
          "noBreadCrumb": true
        },
        "priority": 5,
        "label": {
          "source": "/i18n/InboxMessages",
          "key": "remoteInboxes"
        },
        "clientScopeURI": "fnd0remotetinboxes",
        "nameToken": "com.siemens.splm.client.inbox:remoteInboxesSubLocation",
        "context": {
          "search": {
            "provider": "Awp0ObjectSetRowProvider",
            "criteria": {
              "objectSet": "Fnd0RemoteInboxProvider.TaskInbox",
              "parentUid": "{{ctx.userSession.props.user.dbValues[0]}}"
            },
            "sortType": "Alphabetical",
            "sortCriteria": [
              {
                "fieldName": "last_mod_date",
                "sortDirection": "DESC"
              }
            ],
            "chartTitle": {
              "source": "/i18n/InboxMessages",
              "key": "inboxResultsChartTitle"
            }
          }
        },
        "viewBase": "inboxGQL",
        "viewModes": {
          "TableView": {
            "primaryWorkArea": "table",
            "secondaryWorkArea": false
          }
        },
        "defaultDisplayMode": "TableView"
      },
      "dependencies": [
        "js/aw.inbox.sublocation.controller"
      ],
      "params": {
        "userId": null,
        "searchCriteria": null,
        "filter": null
      },
      "visibleWhen": {
        "expression": "ctx.preferences.AWC_Enable_Multisite[0] === 'true' && ctx.preferences.AWC_REMOTE_SITE_URL[0]"
      },
      "parent": "com_siemens_splm_client_inbox_tasksGQLLocation",
      "templateUrl": "/html/aw.native.sublocation.html",
      "type": "subLocation",
      "url": "/remoteInboxes"
    },
    "newWorkflowProcessComponent": {
      "params": {
        "componentId": null,
        "embeddedLocationView": null,
        "uid": null
      },
      "url": "/newWorkflowProcessComponentLocation",
      "view": "Awp0NewWorkflowProcess"
    },
    "workflowDesignerLocation": {
      "data": {
        "browserTitle": {
          "source": "/i18n/WorkflowDesignerMessages",
          "key": "workflowdesignerBrowserTitle"
        },
        "browserSubTitle": {
          "source": "/i18n/WorkflowDesignerMessages",
          "key": "workflowdesignerBrowserSubTitle"
        },
        "headerTitle": {
          "source": "/i18n/WorkflowDesignerMessages",
          "key": "workflowdesignerHeaderTitle"
        },
        "propertyPolicy": "/policies/workflowTemplateLocationPropertyPolicy.json"
      },
      "type": "location"
    },
    "availableTemplates": {
      "controller": "NativeSubLocationCtrl",
      "data": {
        "breadcrumbConfig": {
          "type": "search",
          "vm": "WorkflowTemplateFilterBreadCrumb",
          "noUpdate": true,
          "popuplist": "/html/defaultbreadcrumblist.html",
          "overflowIndex": 0
        },
        "priority": 0,
        "label": {
          "source": "/i18n/WorkflowDesignerMessages",
          "key": "availableTemplatesTitle"
        },
        "clientScopeURI": "Awp0AvailableTemplateLists",
        "nameToken": ":availableTemplates",
        "context": {
          "search": {
            "provider": "Awp0TaskSearchProvider",
            "criteria": {
              "taskProviderContentType": "EPMRootTaskProcessTemplate"
            },
            "sortType": "Alphabetical",
            "chartTitle": {
              "source": "/i18n/InboxMessages",
              "key": "inboxResultsChartTitle"
            }
          }
        },
        "selectionQueryParamKey": "uid",
        "viewBase": "workflowTemplates"
      },
      "dependencies": [
        "js/aw.native.sublocation.controller"
      ],
      "params": {
        "searchCriteria": null,
        "filter": null,
        "uid": null,
        "sc_uid": null,
        "ttab_name": null,
        "source_uid": null,
        "target_uid": null
      },
      "parent": "workflowDesignerLocation",
      "reloadOnSearch": false,
      "templateUrl": "/html/aw.native.sublocation.html",
      "type": "subLocation",
      "url": "/availableTemplates"
    },
    "com_siemens_splm_clientfx_tcui_xrt_showObject": {
      "params": {
        "uid": null,
        "sc_uid": null,
        "ttab_name": null,
        "source_uid": null,
        "target_uid": null
      },
      "type": "parameter"
    },
    "assignmentListLocation": {
      "data": {
        "browserSubTitle": {
          "source": "/i18n/WorkflowPalMgmtMessages",
          "key": "appDisplayName"
        },
        "headerTitle": {
          "source": "/i18n/WorkflowPalMgmtMessages",
          "key": "appDisplayName"
        },
        "propertyPolicy": "/policies/palmgmtLocationPropertyPolicy.json"
      },
      "type": "location"
    },
    "myPalLists": {
      "controller": "NativeSubLocationCtrl",
      "data": {
        "priority": 0,
        "label": {
          "source": "/i18n/WorkflowPalMgmtMessages",
          "key": "myPalLists"
        },
        "clientScopeURI": "Awp0MyPalLists",
        "nameToken": ":myPalListsSubLocation",
        "context": {
          "search": {
            "provider": "Awp0PALProvider",
            "criteria": {
              "palContentType": "myList"
            },
            "sortType": "Alphabetical",
            "chartTitle": {
              "source": "/i18n/InboxMessages",
              "key": "inboxResultsChartTitle"
            }
          }
        },
        "viewBase": "processAssignments"
      },
      "dependencies": [
        "js/aw.native.sublocation.controller"
      ],
      "params": {
        "filter": null
      },
      "parent": "assignmentListLocation",
      "templateUrl": "/html/aw.native.sublocation.html",
      "type": "subLocation",
      "url": "/myPalLists"
    },
    "myGroupPalLists": {
      "controller": "NativeSubLocationCtrl",
      "data": {
        "priority": 1,
        "label": {
          "source": "/i18n/WorkflowPalMgmtMessages",
          "key": "myGroupPalLists"
        },
        "clientScopeURI": "Awp0MyGroupPalLists",
        "nameToken": ":myGroupPalListsSubLocation",
        "context": {
          "search": {
            "provider": "Awp0PALProvider",
            "criteria": {
              "palContentType": "myGroupList"
            },
            "sortType": "Alphabetical",
            "chartTitle": {
              "source": "/i18n/InboxMessages",
              "key": "inboxResultsChartTitle"
            }
          }
        },
        "viewBase": "processAssignments"
      },
      "dependencies": [
        "js/aw.native.sublocation.controller"
      ],
      "params": {
        "filter": null
      },
      "parent": "assignmentListLocation",
      "templateUrl": "/html/aw.native.sublocation.html",
      "type": "subLocation",
      "url": "/myGroupPalLists"
    },
    "otherPalLists": {
      "controller": "NativeSubLocationCtrl",
      "data": {
        "priority": 2,
        "label": {
          "source": "/i18n/WorkflowPalMgmtMessages",
          "key": "otherPalLists"
        },
        "clientScopeURI": "Awp0OtherPalLists",
        "nameToken": ":otherPalListsSubLocation",
        "context": {
          "search": {
            "provider": "Awp0PALProvider",
            "criteria": {
              "palContentType": "othersList"
            },
            "sortType": "Alphabetical",
            "chartTitle": {
              "source": "/i18n/InboxMessages",
              "key": "inboxResultsChartTitle"
            }
          }
        },
        "viewBase": "processAssignments"
      },
      "dependencies": [
        "js/aw.native.sublocation.controller"
      ],
      "params": {
        "filter": null
      },
      "parent": "assignmentListLocation",
      "reloadOnSearch": false,
      "templateUrl": "/html/aw.native.sublocation.html",
      "type": "subLocation",
      "url": "/otherPalLists"
    }
  },
  "typeIconsRegistry": [
    {
      "type": {
        "names": [
          "EPMTask"
        ],
        "prop": {
          "names": [
            "fnd0PerformForm"
          ],
          "iconFileName": "typeFormTask48",
          "conditions": {
            "fnd0PerformForm": {
              "$ne": ""
            }
          }
        }
      }
    },
    {
      "type": {
        "names": [
          "EPMTask"
        ],
        "prop": {
          "names": [
            "root_task"
          ],
          "iconFileName": "typeWorkflowProcess48",
          "conditions": {
            "root_task": {
              "$eq": "{{uid}}"
            }
          }
        }
      }
    },
    {
      "type": {
        "names": [
          "Awp0UserAssignment"
        ],
        "prop": {
          "names": [
            "awp0User"
          ],
          "type": {
            "names": [
              "BusinessObject"
            ]
          }
        }
      }
    },
    {
      "type": {
        "names": [
          "Participant"
        ],
        "prop": {
          "names": [
            "assignee"
          ],
          "type": {
            "names": [
              "User"
            ]
          }
        }
      }
    },
    {
      "thumbnail": {
        "names": [
          "Awp0XRTObjectSetRow"
        ],
        "prop": {
          "names": [
            "awp0Target"
          ],
          "type": {
            "names": [
              "Participant"
            ],
            "prop": {
              "names": [
                "fnd0AssigneeUser"
              ],
              "type": {
                "names": [
                  "User"
                ]
              }
            }
          }
        }
      }
    },
    {
      "type": {
        "names": [
          "Awp0XRTObjectSetRow"
        ],
        "prop": {
          "names": [
            "awp0Target"
          ],
          "type": {
            "names": [
              "TaskInbox"
            ],
            "prop": {
              "names": [
                "owning_site"
              ],
              "iconFileName": "cmdOpenInbox24",
              "conditions": {
                "owning_site": {
                  "$notin": [
                    null,
                    ""
                  ]
                }
              }
            }
          }
        }
      }
    },
    {
      "type": {
        "names": [
          "TaskInbox"
        ],
        "prop": {
          "names": [
            "owning_site"
          ],
          "iconFileName": "cmdOpenInbox24",
          "conditions": {
            "owning_site": {
              "$notin": [
                null,
                ""
              ]
            }
          }
        }
      }
    },
    {
      "type": {
        "names": [
          "EPMTaskTemplate"
        ],
        "prop": {
          "names": [
            "template_classification"
          ],
          "iconFileName": "typeWorkflowTemplate48",
          "conditions": {
            "template_classification": {
              "$eq": "0"
            }
          }
        }
      }
    }
  ],
  "typeProperties": {
    "typeProperties": {
      "WorkspaceObject": {
        "additionalProperties": [
          {
            "name": "fnd0MyWorkflowTasks"
          },
          {
            "name": "fnd0InProcess"
          }
        ]
      },
      "TaskInbox": {
        "additionalProperties": [
          {
            "name": "contents"
          }
        ]
      },
      "EPMTaskTemplate": {
        "additionalProperties": [
          {
            "name": "template_classification"
          },
          {
            "name": "stage"
          },
          {
            "name": "object_name"
          },
          {
            "name": "object_type"
          },
          {
            "name": "is_modifiable"
          }
        ]
      }
    }
  },
  "propertyRendererTemplates": {
    "in_workflow_process_template": {
      "grids": [],
      "columns": [
        "fnd0InProcess"
      ],
      "tooltip": [
        "fnd0InProcess"
      ],
      "template": "",
      "templateUrl": "/propRenderTemplates/inWorkflowProcessRenderer.html",
      "renderFunction": "",
      "dependentServices": [
        "soa/kernel/clientDataModel"
      ]
    },
    "task_execution_status_error": {
      "grids": [],
      "columns": [
        "fnd0TaskExecutionStatus"
      ],
      "tooltip": [
        "fnd0TaskExecutionStatus"
      ],
      "template": "",
      "templateUrl": "/propRenderTemplates/taskExecutionStatusErrorRenderer.html",
      "renderFunction": "",
      "dependentServices": [
        "soa/kernel/clientDataModel"
      ]
    },
    "job_late_flag": {
      "grids": [],
      "columns": [
        "fnd0Late"
      ],
      "tooltip": [
        "fnd0Late"
      ],
      "template": "",
      "templateUrl": "/propRenderTemplates/lateWorkflowRenderer.html",
      "renderFunction": "",
      "dependentServices": [
        "soa/kernel/clientDataModel"
      ]
    },
    "workflow_taskAssignment_rendering_prop": {
      "grids": [
        "taskTreeTable"
      ],
      "columns": [
        "taskAssignment"
      ],
      "template": "",
      "templateUrl": "",
      "renderFunction": "workflowTaskAssignmentRendererFn",
      "deps": "propRenderTemplates/workflowTaskAssignmentCellRenderer",
      "dependentServices": []
    },
    "template_stage_process_template": {
      "grids": [],
      "columns": [
        "stage"
      ],
      "tooltip": [
        "stage"
      ],
      "template": "",
      "templateUrl": "/propRenderTemplates/processStageTemplateRender.html",
      "renderFunction": "",
      "dependentServices": [
        "soa/kernel/clientDataModel"
      ]
    },
    "template_classification_process_template": {
      "grids": [],
      "columns": [
        "template_classification"
      ],
      "tooltip": [
        "template_classification"
      ],
      "template": "",
      "templateUrl": "/propRenderTemplates/processClassificationTemplateRenderer.html",
      "renderFunction": "",
      "dependentServices": [
        "soa/kernel/clientDataModel"
      ]
    }
  },
  "dragAndDrop": {
    "actions": {
      "dragUserListStartAction": {
        "actionType": "syncFunction",
        "method": "dragUserListStartAction",
        "deps": "js/Awp0WorkflowAssignmentDragDropService"
      },
      "dragOverAssignmentAction": {
        "actionType": "syncFunction",
        "method": "dragOverAssignmentAction",
        "inputData": {
          "ctx": "{{ctx}}"
        },
        "deps": "js/Awp0WorkflowAssignmentDragDropService"
      },
      "dropOnAssignmentAction": {
        "actionType": "syncFunction",
        "method": "dropOnAssignmentAction",
        "inputData": {
          "ctx": "{{ctx}}"
        },
        "deps": "js/Awp0WorkflowAssignmentDragDropService"
      }
    },
    "dragHandlers": {
      "dragHandlerForList": {
        "views": [
          "UserTab",
          "ResourcePoolTab",
          "Users"
        ],
        "dragActions": {
          "dragStart": "dragUserListStartAction"
        }
      }
    },
    "dropHandlers": {
      "dropHandlerForTreeTable": {
        "views": [
          "Awp0TaskAssignmentSubPanel",
          "Awp0TaskTemplateAssignment",
          "Awp0SubmitToWorkflowCategoriesPanel",
          "Awp0SubmitToWorkflowCategoriesSubPanel",
          "Awp0NewWorkflowProcessParticipantAssignmentsSection"
        ],
        "dropActions": {
          "dragOver": "dragOverAssignmentAction",
          "drop": "dropOnAssignmentAction"
        }
      }
    }
  }
}
