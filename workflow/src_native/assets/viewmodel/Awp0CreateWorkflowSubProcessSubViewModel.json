{
    "schemaVersion":"1.0.0",
    "imports":
    [
        "js/visible-when.directive",
        "js/aw-panel-footer.directive",
        "js/aw-button.directive",
        "js/aw-i18n.directive",
        "js/aw-panel-body.directive",
        "js/aw-include.directive",
        "js/aw-panel-section.directive",
        "js/aw-command-panel-section.directive",
        "js/aw-widget.directive",
        "js/aw-listbox.directive",
        "js/aw-radiobutton.directive",
        "js/exist-when.directive",
        "js/aw-list.directive",
        "js/aw-flex-row.directive",
        "js/aw-default-cell.directive",
        "js/aw-scrollpanel.directive"
    ],

    "actions":{
        "reveal":
        {
            "actionType": "JSFunction",
            "method": "populatePanelData",
            "inputData":
            {
                "data": "{{data}}",
                "targetObjects": "{{ctx.workflow_process_candidates.workFlowObjects}}"
            },
            "deps": "js/Awp0NewWorkflowProcess"
        },

        "getValidTemplates":
        {
            "actionType": "JSFunction",
            "method": "getValidTemplates",
            "inputData":
            {
               "data": "{{data}}",
               "getFiltered": "{{function:getFiltered}}"
            },

            "outputData":
            {
                "templates": ""
            },

            "deps": "js/Awp0NewWorkflowProcess"

        },
        "getProcessParticipantAssignments":
        {
            "actionType": "JSFunction",
            "method": "checkForAssignmentSection",
            "inputData":
            {
               "data": "{{data}}",
               "ctx": "{{ctx}}"
            },
            "deps": "js/Awp0NewWorkflowProcess"

        },

        "getProcessParticipantAssignmentsInternal": {
            "actionType": "JSFunctionAsync",
            "method": "getProperties",
            "deps": "soa/dataManagementService",
            "inputData": {
                "uids": ["{{data.workflowTemplates.dbValue.uid}}"],
                "propNames": ["fnd0OptionalParticipants", "fnd0RequiredParticipants","assignment_lists","fnd0StoreParticipantsOnJob"]
            },
            "events":
            {
                "success":
                [
                    {
                        "name": "workflowProcessAssignement.propertiesLoaded"
                    }
                ]
            }
        },

        "populateProcessParticipants":
        {
            "actionType": "JSFunction",
            "method": "populateParticipantPanel",
            "inputData":
            {
                "data": "{{data}}",
                "workflowTemplate": "{{data.workflowTemplates.dbValue}}",
                "ctx": "{{ctx}}"
            },
            "deps":"js/Awp0NewWorkflowProcess"
        },
        "enableTheFlagForDifferentTemplateSelected": {
            "actionType": "JSFunction",
            "method": "enableTheFlagForDifferentTemplateSelected",
            "inputData":
            {
                "data": "{{data}}"
            },
            "deps":"js/Awp0NewWorkflowProcess"

        },

        "createSubProcess":
        {
            "actionType": "TcSoaService",
            "serviceName": "Workflow-2008-06-Workflow",
            "method": "createInstance",
            "inputData":
            {
                "startImmediately": true,
                "observerKey": "",
                "name": "{{data.workFlowName.dbValue}}",
                "subject": "",
                "description": "{{data.description.dbValue}}",
                "contextData":
                {
                    "processTemplate": "{{data.workflowTemplates.dbValue.props.template_name.dbValues[0]}}",
                    "attachmentCount": "{{ctx.workflow_process_candidates.workFlowObjects.length}}",
                    "attachments": "{{function:getUids}}",
                    "attachmentTypes": "{{function:getAttachmentTypes}}",
                    "processAssignmentList": "{{function:getProcessAssignmentList}}",
                    "dependencyTask": "{{function:getDependentTaskObject}}"
                }
            },
            "outputData":
            {
                "errorMsg": "{{function:populateErrorMessageOnNewWorkflowProcess}}",
                "createdProcess":"ServiceData.created"
            },
            "deps": "js/Awp0NewWorkflowProcess",
            "events":
            {
                "success":
                [
                    {
                        "name":"workflow.updateTaskCount"
                    },
                    {
                        "name": "cdm.relatedModified",
                        "condition": "data.createdProcess && ctx.locationContext['ActiveWorkspace:Location'] === 'com.siemens.splm.clientfx.tcui.xrt.showObjectLocation' && ctx.xrtSummaryContextObject",
                        "eventData": {
                            "refreshLocationFlag": true,
                            "relatedModified": [
                                "{{ctx.xrtSummaryContextObject}}"
                            ]
                        }
                    },
                    {
                        "name": "workflow.updateWorkflowGraphCtx",
                        "condition": "data.createdProcess && ctx.locationContext['ActiveWorkspace:Location'] === 'com.siemens.splm.client.inbox.tasksLocation' && ctx.xrtSummaryContextObject && ctx.xrtPageContext.secondaryXrtPageID === 'tc_xrt_Workflow' && ctx.xrtSummaryContextObject.uid !== ctx.selected.uid"
                    },
                    {
                        "name": "primaryWorkarea.reset",
                        "condition": "data.createdProcess && ctx.locationContext['ActiveWorkspace:Location'] === 'com.siemens.splm.client.inbox.tasksLocation' && ctx.xrtSummaryContextObject"
                    },
                    {
                        "name": "primaryWorkarea.reset",
                        "condition": "data.createdProcess && ctx.locationContext['ActiveWorkspace:Location'] === 'com.siemens.splm.client.inbox.tasksLocation' && !ctx.xrtSummaryContextObject && ctx.selected"
                    },
                    {
                        "name": "complete",
                        "eventData":
                        {
                            "source": "toolAndInfoPanel"
                        }
                    }
                ],

                "failure":
                [
                    {
                        "name": "newWorkflowProcess.submissionFailed",
                        "eventData":
                        {
                            "eventData": "{{data.errorMsg}}"
                        }
                    },
                    {
                        "name": "complete",
                        "eventData":
                        {
                            "source": "toolAndInfoPanel"
                        },
                        "condition": "(errorCode.code==33352) || (data.createdProcess && data.createdProcess.length>0) "
                    },
                    {
                        "name": "cdm.relatedModified",
                        "condition": "data.createdProcess && ctx.locationContext['ActiveWorkspace:Location'] === 'com.siemens.splm.clientfx.tcui.xrt.showObjectLocation' && ctx.xrtSummaryContextObject",
                        "eventData": {
                            "refreshLocationFlag": true,
                            "relatedModified": [
                                "{{ctx.xrtSummaryContextObject}}"
                            ]
                        }
                    },
                    {
                        "name": "workflow.updateWorkflowGraphCtx",
                        "condition": "data.createdProcess && ctx.locationContext['ActiveWorkspace:Location'] === 'com.siemens.splm.client.inbox.tasksLocation' && ctx.xrtSummaryContextObject && ctx.xrtPageContext.secondaryXrtPageID === 'tc_xrt_Workflow' && ctx.xrtSummaryContextObject.uid !== ctx.selected.uid"
                    },
                    {
                        "name": "primaryWorkarea.reset",
                        "condition": "data.createdProcess && ctx.locationContext['ActiveWorkspace:Location'] === 'com.siemens.splm.client.inbox.tasksLocation' && ctx.xrtSummaryContextObject"
                    },
                    {
                        "name": "primaryWorkarea.reset",
                        "condition": "data.createdProcess && ctx.locationContext['ActiveWorkspace:Location'] === 'com.siemens.splm.client.inbox.tasksLocation' && !ctx.xrtSummaryContextObject && ctx.selected"
                    }

                ]
            },

            "actionMessages":
            {
                "success":
                [
                    {
                        "condition": "ctx.workflow_process_candidates.workFlowObjects.length==1",
                        "message": "singleSubmitToSubWorkflowSuccess"
                    },

                    {
                        "condition": "ctx.workflow_process_candidates.workFlowObjects.length>1",
                        "message": "submitToSubWorkflowSuccess"
                    }
                ],
                "failure":
                [
                    {
                        "condition": "data.errorMsg && data.errorMsg.length > 0 && errorCode.code === 33352",
                        "message": "subProcessCreationBackgroundError"
                    },
                    {
                        "condition": "data.errorMsg && data.errorMsg.length > 0 && errorCode.code !== 33352",
                        "message": "subProcessCreationError"
                    }
                ]
            }
        },
        "closePanel": {
            "actionType": "Event",
            "method": "Event",
            "inputData":
            {
                "events":
                [
                    {
                        "name": "complete",
                        "eventData":
                        {
                            "source": "toolAndInfoPanel"
                        }
                    }
                ]
            }
        },
        "resetValue": {
            "actionType": "JSFunction",
            "method": "resetValue",
            "inputData":
            {
                "input": "{{data}}"
            },

            "deps": "js/Awp0NewWorkflowProcess"
        },
        "submitToHostAction":
        {
            "actionType": "JSFunction",
            "method": "sendEventToHost",
            "inputData": {
                "data": "{{data}}"
            },
            "deps": "js/Awp0NewWorkflowProcess"
        },
         "initDataProvider": {
            "actionType": "dataProvider",
            "method": "attachTargets"
        },
        "addProcessAttachments": {
            "actionType": "JSFunction",
            "method": "addProcessAttachments",
            "inputData": {
                "dataProvider": "{{data.dataProviders.attachTargets}}",
                "selectedObjects": "{{data.sourceObjects}}",
                "ctx": "{{ctx}}",
                "data": "{{data}}"
            },
            "deps": "js/Awp0NewWorkflowProcess"
        },
        "navigateToCreateSubProcessPanel":
        {
            "actionType": "Event",
            "method": "Event",
            "inputData":
            {
                "events":
                [
                    {
                        "name": "awPanel.navigate",
                        "eventData":
                        {
                            "destPanelId": "Awp0CreateWorkflowSubProcessSub",
                            "eventData": "{{data.eventData}}"
                        }
                    }
                ]
            }
        },
        "getRootTargetAttachment": {
            "actionType": "TcSoaService",
            "serviceName": "Internal-AWS2-2019-06-Finder",
            "method": "performSearchViewModel4",
            "inputData":
            {
                "searchInput":
                {
                    "maxToLoad": 50,
                    "maxToReturn": 50,
                    "columnFilters": [],
                    "providerName": "Awp0ObjectSetRowProvider",
                    "searchCriteria": {
                        "parentUid" : "{{ctx.selected.uid}}",
                        "objectSet": "root_target_attachments.WorkspaceObject,root_target_attachments.ItemRevision"
                    },
                    "searchFilterFieldSortType" : "",
                    "startIndex": "{{data.dataProviders.attachTargets.startIndex}}",
                    "searchSortCriteria": [{"fieldName": "object_string", "sortDirection": "ASC"}]
                }
            },
            "policy":
            {
                "types":
                [
                    {
                        "name": "BusinessObject",
                        "properties":
                        [
                            {
                                "name": "awp0CellProperties"
                            }
                        ]
                    },
                    {
                        "name": "Awp0XRTObjectSetRow",
                        "properties":
                        [
                            {
                                "name": "awp0Target"
                            }
                        ]
                    }
                ]
            },
            "outputData":
            {
                "totalTargetsFound": "totalFound",
                "totalTargetsLoaded": "totalLoaded",
                "targetSearchResults": "{{function:getWorkflowProcessTargets}}"
            },
            "deps": "js/Awp0NewWorkflowProcess"
        },
        "updateWorkflowGraphCtx": {
            "actionType": "JSFunction",
            "method": "registerCtx",
            "deps": "js/appCtxService",
            "inputData": {
                "name": "isSubProcessCreation",
                "value": true
            }
        },
        "collapseSection": {
            "actionType": "JSFunction",
            "method": "collapseSection",
            "inputData": {
                "eventData": "{{data.eventMap['awPanelSection.collapse']}}",
                "data":"{{data}}"
            },
            "deps": "js/Awp0NewWorkflowProcess"
        }
    },
    "preferences":
    [
        "CR_allow_alternate_procedures",
        "WRKFLW_use_legacy_template_filter",
        "WRKFLW_add_template_name_for_new_process"
    ],


    "data": {
        "mainPanelId": "Awp0CreateWorkflowSubProcessSub",
        "processAssignment":
        {
            "propertyDisplayName": "{{i18n.assignments}}",
            "uiValue": "{{i18n.assignments}}"
        },
        "allowAlternateProcedures":
        {
            "displayName": "",
            "type": "BOOLEAN",
            "propertyRadioTrueText": "{{i18n.All}}",
            "propertyRadioFalseText": "{{i18n.Assigned}}",
            "dbValue": true,
            "labelPosition": "PROPERTY_LABEL_AT_RIGHT"
        },

        "isAllowAlternateProcedures":
        {
            "displayName": "",
            "type": "BOOLEAN",
            "dbValue": false
        },

        "workflowTemplates":
        {
            "displayName": "{{i18n.Workflow_Template}}",
            "type": "STRING",
            "hasLov": true
        },

        "workFlowName":
        {
            "displayName": "{{i18n.Workflow_Name}}",
            "type": "STRING",
            "isRequired": "true",
            "maxLength": 128
        },

        "workFlowDescription":
        {
            "displayName": "{{i18n.Description}}",
            "type": "STRING",
            "isRequired": "false",
            "maxLength": 240,
            "numberOfLines": 3,
            "dbValue": ""
        },
        "addObjectCommands":"awp0_WorfklowAddTargetsCommands",
        "isAddButtonVisible": true,
        "processTargetAnchor": "workflow_process_attachment_anchor"
    },
    "dataProviders": {
        "attachTargets": {
            "action": "getRootTargetAttachment",
            "response": "{{data.targetSearchResults}}",
            "totalFound": "{{data.totalTargetsFound}}",
            "totalLoaded": "{{data.totalTargetsLoaded}}",
            "selectionModelMode": "multiple",
            "commandsAnchor": "sub_process_attachment_cell_anchor"
        }
    },

    "messages":
    {
        "singleSubmitToSubWorkflowSuccess":
        {
            "messageType": "INFO",
            "messageText": "{{i18n.singleSubmitToSubWorkflowSuccess}}",
            "messageTextParams":
            [
                "{{ctx.workflow_process_candidates.workFlowObjects[0].props.object_string.dbValues[0]}}"
            ]
        },

        "submitToSubWorkflowSuccess":
        {
            "messageType": "INFO",
            "messageText": "{{i18n.submitToSubWorkflowSuccess}}",
            "messageTextParams":
            [
                "{{ctx.workflow_process_candidates.workFlowObjects.length}}"
            ]
        },
        "subProcessCreationError":
        {
            "messageType": "ERROR",
            "messageText": "{{i18n.serverError}}",
            "messageTextParams": [
                "{{data.errorMsg}}"
            ]
        },
        "subProcessCreationBackgroundError":
        {
            "messageType": "INFO",
            "messageText": "{{i18n.serverError}}",
            "messageTextParams": [
                "{{data.errorMsg}}"
            ]
        }
    },

    "functions":
    {
        "getFiltered":
        {
            "functionName": "getFiltered",
            "parameters":
            [
                "{{data.allowAlternateProcedures.dbValue}}"
            ]
        },
        "getUids":
        {
            "functionName": "getUids",
            "parameters":
            [
                "{{data}}",
                "{{ctx.workflow_process_candidates.workFlowObjects}}",
                "{{data.processAssignmentParticipants}}",
                "{{ctx.taskAssignmentCtx.taskAssignmentDataObject}}",
                "{{ctx}}"
            ]
        },

        "getAttachmentTypes":
        {
            "functionName": "getAttachmentTypes",
            "parameters":
            [
                "{{ctx.workflow_process_candidates.workFlowObjects}}",
                "{{data.processAssignmentParticipants}}",
                "{{data}}"
            ]
        },
        "getProcessAssignmentList": {
            "functionName": "getProcessAssignmentList",
            "parameters":
            [
                "{{ctx.parentPanelData}}"
            ]
        },
        "getDependentTaskObject": {
            "functionName": "getDependentTaskObject",
            "parameters":
            [
                "{{ctx.selected}}"
            ]
        },
        "getWorkflowProcessTargets": {
            "functionName": "getWorkflowProcessTargets",
            "parameters":
            [
            ]
        }
    },

    "onEvent":
    [
        {
            "eventId": "workflowProcessAssignement.getProperties",
            "action": "getProcessParticipantAssignmentsInternal"
        },
        {
            "eventId": "awPanel.reveal",
            "criteria": {
               "panelId": "Awp0CreateWorkflowSubProcessSub"
           },

            "action": "reveal"
        },
        {
            "eventId": "awPanel.reveal",
            "criteria": {
                "panelId": "Awp0CreateWorkflowSubProcessSub"
            },

            "action": "initDataProvider"
        },

        {
            "eventId": "workflowProcessAssignement.propertiesLoaded",
            "action": "populateProcessParticipants"
        },

        {
            "eventId": "newWorkflowProcess.submissionSuccessful",
            "action": "resetValue"
        },
        {
            "eventId": "newWorkflowProcess.submissionFailed",
            "action": "resetValue"
        },
        {
            "eventId": "primaryWorkArea.selectionChangeEvent",
            "action": "closePanel"
        },
        {
            "eventId": "workflowProcess.addTargetAttachments",
            "action": "navigateToCreateSubProcessPanel",
            "cacheEventData": true
        },
        {
            "eventId": "workflowProcess.addTargetAttachments",
            "action": "addProcessAttachments",
            "cacheEventData": true
        },
        {
            "eventId": "workflow.updateWorkflowGraphCtx",
            "action": "updateWorkflowGraphCtx"
        },
        {
            "eventId": "awPanelSection.collapse",
            "cacheEventData": true,
            "action": "collapseSection"
        }

    ],

    "conditions":
    {
        "isAllowAlternateProcedures":
        {
            "expression": "data.isAllowAlternateProcedures.dbValue"
        },
        "isValidToSubmit":
        {
            "expression": "data.workFlowName.dbValue && data.workflowTemplates.dbValue!='No Template Available' && data.workflowTemplates.dbValue!='' && !data.submitActionInProgress"
        }
    },

    "i18n":
    {
        "assignments":
        [
            "WorkflowCommandPanelsMessages"
        ],
        "Submit":
        [
            "WorkflowCommandPanelsMessages"
        ],
        "singleSubmitToSubWorkflowSuccess":
        [
            "WorkflowCommandPanelsMessages"
        ],

        "submitToSubWorkflowSuccess":
        [
            "WorkflowCommandPanelsMessages"
        ],
        "none":
        [
            "WorkflowCommandPanelsMessages"
        ],
        "Workflow_Title":
        [
            "WorkflowCommandPanelsMessages"
        ],

        "Workflow":
        [
            "WorkflowCommandPanelsMessages"
        ],

        "Workflow_Name":
        [
            "WorkflowCommandPanelsMessages"
        ],

        "Workflow_Template":
        [
            "WorkflowCommandPanelsMessages"
        ],

        "Description":
        [
            "WorkflowCommandPanelsMessages"
        ],

        "All":
        [
            "WorkflowCommandPanelsMessages"
        ],

        "Assigned":
        [
            "WorkflowCommandPanelsMessages"
        ],
        "addReviewerLabelText":
        [
            "InboxMessages"
        ],
        "required": ["InboxMessages"],
        "additionalReviewers": [ "InboxMessages" ],
        "assignee": ["WorkflowCommandPanelsMessages"],
        "targets": ["WorkflowCommandPanelsMessages"],
        "notifyLabel": ["InboxMessages"],
        "acknowledge": ["InboxMessages"],
        "serverError": ["WorkflowCommandPanelsMessages"],
        "analystTypeName": ["PlantDataManagementConstants"],
        "responsibleUser": ["PlantDataManagementConstants"],
        "changeSpecialistTypeName": ["PlantDataManagementConstants"],
        "implementer": ["PlantDataManagementConstants"],
        "multipleCheckedOutError": ["WorkflowCommandPanelsMessages"],
        "singleCheckedOutError": ["WorkflowCommandPanelsMessages"]
    }
}
