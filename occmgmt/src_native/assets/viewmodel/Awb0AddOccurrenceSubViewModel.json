{
    "schemaVersion": "1.0.0",
    "imports": [
        "js/aw-panel-body.directive",
        "js/aw-panel-section.directive",
        "js/visible-when.directive",
        "js/aw-panel-footer.directive",
        "js/aw-button.directive",
        "js/aw-i18n.directive",
        "js/aw-list.directive",
        "js/aw-type-cell.directive",
        "js/aw-type-icon.directive",
        "js/aw-xrt.directive",
        "js/aw-command-panel-section.directive",
        "js/aw-default-cell.directive",
        "js/aw-form.directive",
        "js/exist-when.directive",
        "js/aw-panel-header.directive",
        "js/aw-title-link.directive"
    ],
    "actions": {
        "clearSelectedType": {
            "actionType": "JSFunction",
            "method": "clearSelectedType",
            "inputData": {
                "data": "{{data}}"
            },
            "deps": "js/addRevOccService"
        },
        "loadAllowableTypes": {
            "actionType": "dataProvider",
            "method": "getAllowableTypesProvider"
        },
        "handleTypeSelection": {
            "actionType": "JSFunction",
            "method": "handleTypeSelectionJs",
            "inputData": {
                "data": "{{data}}"
            },
            "deps": "js/addRevOccService"
        },
        "processAddElementInput": {
            "actionType": "JSFunction",
            "method": "processAddElementInput",
            "inputData": {},
            "outputData": {},
            "deps": "js/addElementService"
        },
        "ensureAllowableTypesLoaded": {
            "actionType": "JSFunctionAsync",
            "method": "ensureAllowableTypesLoadedJs",
            "inputData": {
                "data": "{{data}}"
            },
            "outputData": {
                "totalFound2": "totalFound",
                "searchResults2": "searchResults"
            },
            "events": {
                "success": [ {
                    "condition": "data.totalFound <= 0",
                    "name": "complete",
                    "eventData": {
                        "source": "toolAndInfoPanel"
                    }
                } ]
            },
            "policy": {
                "types": [ {
                    "name": "ImanType",
                    "properties": [ {
                            "name": "type_name"
                        },
                        {
                            "name": "parent_types"
                        }
                    ]
                } ]
            },
            "deps": "js/addRevOccService"
        },
        "getInfoForAddElementAction": {
            "actionType": "TcSoaService",
            "serviceName": "Internal-ActiveWorkspaceBom-2019-12-OccurrenceManagement",
            "method": "getInfoForAddElement3",
            "inputData": {
                "getInfoForElementIn": {
                    "parentElement": "{{ctx.aceActiveContext.context.addElement.parent}}",
                    "fetchAllowedOccRevTypes": true
                }
            },
            "outputData": {
                "allowedTypeInfo": "{{function:extractAllowedTypesInfoFromResponse}}"
            },
            "events": {
                "success": [ {
                    "name": "getInfoForAddElement.ensureTypesLoaded"
                } ]
            },
            "deps": "js/addElementService"
        },
        "initPanel": {
            "actionType": "JSFunction",
            "method": "subscribeTypeSelectionEvents",
            "inputData": {
                "data": "{{data}}"
            },
            "deps": "js/addRevOccService"
        },
        "getRevisionData": {
            "actionType": "JSFunction",
            "method": "getRevisionData",
            "inputData": {
                "data": "{{data}}"
            },
            "outputData": {
                "totalFound": "totalFound",
                "searchResults": "searchResults"
            },
            "deps": "js/addRevOccService"
        },
        "getChildRevision": {
            "actionType": "dataProvider",
            "method": "getChildRevisionDataProvider"
        },
        "clearCreatedElementField": {
            "actionType": "JSFunction",
            "method": "clearCreatedElementField",
            "inputData": {
                "data": "{{data}}"
            },
            "events": {
                "success": [ {
                    "name": "addElement.closePanel"
                } ]
            },
            "deps": "js/addElementService"
        },
        "addUsagePropertiesAndSetCreateInputContext": {
            "actionType": "batchJob",
            "steps": [ {
                    "action": "revOccAddUsageProperties"
                },
                {
                    "action": "revOccSetElementCreateInput"
                },
                {
                    "action": "loadCreatedObjects"
                },
                {
                    "action": "revOccAddElementsWithCreateInput"
                }
            ]
        },
        "revOccAddUsageProperties": {
            "actionType": "JSFunction",
            "method": "getCreateInput",
            "inputData": {
                "data": "{{data}}"
            },
            "outputData": {
                "elementCreateInput": ""
            },
            "deps": "js/addObjectUtils"
        },
        "revOccSetElementCreateInput": {
            "actionType": "JSFunction",
            "method": "updatePartialCtx",
            "inputData": {
                "path": "aceActiveContext.context.addElement.elementCreateInput",
                "value": ["{{data.elementCreateInput[0].createData}}"]
            },
            "deps": "js/appCtxService"
        },
        "loadCreatedObjects": {
            "actionType": "JSFunction",
            "method": "loadCreatedObjects",
            "inputData": {
                "data": "{{data}}"
            },
            "deps": "js/addRevOccService"
        },
        "revOccAddElementsWithCreateInput":{
            "actionType": "TcSoaService",
            "serviceName": "Internal-ActiveWorkspaceBom-2021-06-OccurrenceManagement",
            "method": "addObject3",
            "inputData": {
                "input": {
                    "objectsToBeAdded": "{{function:getElementsToAdd}}",
                    "parentElement": "{{ctx.aceActiveContext.context.addElement.parent}}",
                    "siblingElement": "{{ctx.aceActiveContext.context.addElement.siblingElement}}",
                    "inputCtxt": {
                        "productContext": "{{ctx.aceActiveContext.context.productContextInfo}}"
                    },
                    "sortCriteria": {
                        "propertyName": "{{ctx.aceActiveContext.context.sortCriteria[0].fieldName}}",
                        "sortingOrder": "{{ctx.aceActiveContext.context.sortCriteria[0].sortDirection}}"
                    },
                    "addObjectIntent": "{{ctx.aceActiveContext.context.addElement.addObjectIntent}}",
                    "fetchPagedOccurrences": "{{ctx.aceActiveContext.context.addElement.fetchPagedOccurrences}}",
                    "requestPref": {
                        "displayMode": [ "{{function:getDisplayMode}}" ],
                        "structExpanded": [ "{{function:getExpandedValue}}" ]
                    },
                    "numberOfElements": 1,
                    "createInputs": "{{ctx.aceActiveContext.context.addElement.elementCreateInput}}"
                }
            },
            "outputData": {
                "addElementResponse": "",
                "totalObjectsAdded": "{{function:getTotalNumberOfChildrenAdded}}"
            },
            "events": {
                "success": [
                    {
                        "name": "acePwa.reset",
                        "condition": "_internal.conditionStates.areNewElementsAdded && _internal.conditionStates.isPanelPinned && !_internal.conditionStates.isTreeMode"
                    },
                    {
                        "name": "addElement.elementsAdded",
                        "eventData": {
                            "objectsToSelect": "{{function:getNewlyAddedChildElements}}",
                            "addElementResponse": "{{data.addElementResponse}}",
                            "viewToReact": "{{ctx.aceActiveContext.key}}"
                        },
                        "condition": "_internal.conditionStates.areNewElementsAdded"
                    },
                    {
                        "name": "aceElementsSelectionUpdatedEvent",
                        "eventData": {
                            "objectsToSelect": "{{function:getNewlyAddedChildElements}}"
                        },
                        "condition": "_internal.conditionStates.areNewElementsAdded && !_internal.conditionStates.isPanelPinned && _internal.conditionStates.isTreeMode"
                    },
                    {
                        "name": "aceElementsSelectionUpdatedEvent",
                        "eventData": {
                            "objectsToSelect": "{{function:getNewlyAddedChildElements}}"
                        },
                        "condition": "_internal.conditionStates.areNewElementsAdded && !_internal.conditionStates.isPanelPinned && _internal.conditionStates.addingToOpenedElement && !_internal.conditionStates.isTreeMode"
                    },
                    {
                        "name": "acePwa.reset",
                        "condition": "_internal.conditionStates.areNewElementsAdded && !_internal.conditionStates.isPanelPinned && _internal.conditionStates.addingToOpenedElement && !_internal.conditionStates.isTreeMode"
                    },
                    {
                        "name": "addElement.updateSelectionInPWA",
                        "eventData": {
                            "objectToSelect": "{{ctx.aceActiveContext.context.addElement.parent.uid}}"
                        },
                        "condition": "_internal.conditionStates.areNewElementsAdded && ctx.aceActiveContext.context.addElementInput.parentElement.uid !== ctx.aceActiveContext.context.addElement.parent.uid"
                    },
                    {
                        "name": "addElement.elementsAddedToSelectedElementFromPWA",
                        "condition": "_internal.conditionStates.areNewElementsAdded && !_internal.conditionStates.isPanelPinned && _internal.conditionStates.addingToSelectedElementFromPWA"
                    },
                    {
                        "name": "addElement.clearCreatedElementField"
                    }
                ],
                "failure": [ {
                        "name": "addElement.clearCreatedElementField"
                    },
                    {
                        "name": "acePwa.reset",
                        "condition": "_internal.conditionStates.areNewElementsAdded && _internal.conditionStates.isPanelPinned && !_internal.conditionStates.isTreeMode"
                    },
                    {
                        "name": "addElement.elementsAdded",
                        "eventData": {
                            "objectsToSelect": "{{function:getNewlyAddedChildElements}}",
                            "addElementResponse": "{{data.addElementResponse}}",
                            "viewToReact": "{{ctx.aceActiveContext.key}}"
                        },
                        "condition": "_internal.conditionStates.areNewElementsAdded && _internal.conditionStates.isTreeMode"
                    },
                    {
                        "name": "aceElementsSelectionUpdatedEvent",
                        "eventData": {
                            "objectsToSelect": "{{function:getNewlyAddedChildElements}}"
                        },
                        "condition": "_internal.conditionStates.areNewElementsAdded && !_internal.conditionStates.isPanelPinned && _internal.conditionStates.isTreeMode"
                    },
                    {
                        "name": "aceElementsSelectionUpdatedEvent",
                        "eventData": {
                            "objectsToSelect": "{{function:getNewlyAddedChildElements}}"
                        },
                        "condition": "_internal.conditionStates.areNewElementsAdded && !_internal.conditionStates.isPanelPinned && _internal.conditionStates.addingToOpenedElement && !_internal.conditionStates.isTreeMode"
                    },
                    {
                        "name": "acePwa.reset",
                        "condition": "_internal.conditionStates.areNewElementsAdded && !_internal.conditionStates.isPanelPinned && _internal.conditionStates.addingToOpenedElement && !_internal.conditionStates.isTreeMode"
                    },
                    {
                        "name": "addElement.updateSelectionInPWA",
                        "eventData": {
                            "objectToSelect": "{{ctx.aceActiveContext.context.addElement.parent.uid}}"
                        },
                        "condition": "_internal.conditionStates.areNewElementsAdded && ctx.aceActiveContext.context.addElementInput.parentElement.uid !== ctx.aceActiveContext.context.addElement.parent.uid"
                    },
                    {
                        "name": "addElement.elementsAddedToSelectedElementFromPWA",
                        "condition": "_internal.conditionStates.areNewElementsAdded && !_internal.conditionStates.isPanelPinned && _internal.conditionStates.addingToSelectedElementFromPWA"
                    }
                ]
            },
            "actionMessages": {
                "failure": [ {
                    "message": "genericAddRevOccFailure"
                } ]
            },
            "deps": "js/addElementService"
        },
        "createAndAddElementWithUsage": {
            "actionType": "Event",
            "method": "Event",
            "inputData": {
                "events": [ {
                    "name": "awb0Element.addUsageProperties"
                    },
                    {
                        "name": "awPanel.loadNextValues",
                        "condition": "data.unpinnedToForm.dbValue"
                    }
                ]
            }
        },
        "closePanel": {
            "actionType": "Event",
            "method": "Event",
            "inputData": {
                "events": [ {
                    "name": "complete",
                    "condition": "!data._internal.isDestroyed && (!conditions.isPanelPinned || conditions.isPwaSelectionChanged)",
                    "eventData": {
                        "source": "toolAndInfoPanel"
                    }
                } ]
            }
        },
        "unregisterLocalContextAndClosePanel": {
            "actionType": "batchJob",
            "steps": [ {
                    "action": "clearContext"
                },
                {
                    "action": "closePanel"
                }
            ]
        },
        "clearContext": {
            "actionType": "JSFunction",
            "method": "clearContext",
            "deps": "js/addRevOccService"
        },
        "autoLoadUsageProperties": {
            "actionType": "JSFunction",
            "method": "autoLoadUsagePropertyValues",
            "inputData": {
                "data": "{{data}}"
            },
            "deps": "js/addRevOccService"
        },
        "clearAutoLoadUsagePropertiesOnContext": {
            "actionType": "JSFunction",
            "method": "clearAutoLoadUsagePropertyValues",
            "deps": "js/addRevOccService"
        }
    },
    "messages": {
        "genericAddRevOccFailure": {
            "messageType": "ERROR",
            "messageText": "{{errorCode}}"
        }
    },
    "onEvent": [ {
            "eventId": "awPanel.reveal",
            "criteria": {
                "panelId": "Awb0AddOccurrenceSub"
            },
            "action": "initPanel"
        },
        {
            "eventId": "awb0Element.addUsageProperties",
            "action": "addUsagePropertiesAndSetCreateInputContext"
        },
        {
            "eventId": "addRevOccService.processAddElementInput",
            "action": "processAddElementInput"
        },
        {
            "eventId": "addElement.getInfoForAddElementAction",
            "action": "getInfoForAddElementAction"
        },
        {
            "eventId": "addElement.clearCreatedElementField",
            "action": "clearCreatedElementField"
        },
        {
            "eventId": "addObject.revisionCreated",
            "cacheEventData": true,
            "action": "getChildRevision"
        },
        {
            "eventId": "awb0RemoveRevisionFromListEvent",
            "cacheEventData": true,
            "action": "getChildRevision"
        },
        {
            "eventId": "awb0RemoveRevisionFromListEvent",
            "action": "clearContext"
        },
        {
            "eventId": "addElement.closePanel",
            "condition": "conditions.isPanelUnpinned",
            "action": "unregisterLocalContextAndClosePanel"
        },
        {
            "eventId": "getInfoForAddElement.ensureTypesLoaded",
            "action": "loadAllowableTypes"
        },
        {
            "eventId": "getAllowableTypesProvider.selectionChangeEvent",
            "action": "handleTypeSelection"
        },
        {
            "eventId": "gwt.SubLocationContentSelectionChangeEvent",
            "action": "unregisterLocalContextAndClosePanel"
        },
        {
            "eventId": "getChildRevisionDataProvider.modelObjectsUpdated",
            "action": "autoLoadUsageProperties"
        },
        {
            "eventId": "awXRT.contentLoaded",
            "condition": "conditions.isRevisionDataPopulated",
            "action": "autoLoadUsageProperties"
        },
        {
            "eventId": "addElement.closePanel",
            "condition": "conditions.isPanelUnpinned",
            "action": "clearAutoLoadUsagePropertiesOnContext"
        }
    ],
    "data": {
        "selectedType": {
            "type": "STRING",
            "dbValue": ""
        },
        "selectedTypeDisplayName": {
            "type": "STRING",
            "dbValue": ""
        },
        "displayedType": {
            "displayName": "",
            "type": "STRING"
        },
        "addRevision": "aw_addRevision",
        "targetObjectToAdd": {}
    },
    "functions": {
        "getElementsToAdd": {
            "functionName": "getElementsToAdd",
            "parameters": [
                "{{data}}"
            ]
        },
        "getNewlyAddedChildElements": {
            "functionName": "getNewlyAddedChildElements",
            "parameters": [
                "{{data}}"
            ]
        },
        "extractAllowedTypesInfoFromResponse": {
            "functionName": "extractAllowedTypesInfoFromResponse",
            "parameters": []
        },
        "getDisplayMode": {
            "functionName": "getDisplayMode",
            "parameters": []
        },
        "getExpandedValue": {
            "functionName": "getExpandedValue",
            "parameters": []
        },
        "getTotalNumberOfChildrenAdded": {
            "functionName": "getTotalNumberOfChildrenAdded",
            "parameters": [ "{{data}}" ]
        }
    },
    "i18n": {
        "objectType": [
            "OccmgmtRevOccConstants"
        ],
        "toTitle": [
            "OccmgmtRevOccConstants"
        ],
        "part": [
            "OccmgmtRevOccConstants"
        ],
        "addElementBtn": [
            "OccmgmtRevOccConstants"
        ]
    },
    "conditions": {
        "isSelectedTypeEmpty": {
            "expression": "data.selectedType.dbValue =='' "
        },
        "isRevisionDataPopulated": {
            "expression": "data.dataProviders.getChildRevisionDataProvider.viewModelCollection.loadedVMObjects.length >= 1"
        },
        "areNewElementsAdded": {
            "expression": "data.totalObjectsAdded>0"
        },
        "isTreeMode": {
            "expression": "ctx.ViewModeContext && (ctx.ViewModeContext.ViewModeContext === 'TreeView' || ctx.ViewModeContext.ViewModeContext === 'TreeSummaryView')"
        },
        "addingToOpenedElement": {
            "expression": "ctx.aceActiveContext.context.openedElement.uid === ctx.aceActiveContext.context.addElement.parent.uid"
        },
        "addingToSelectedElementFromPWA": {
            "expression": "ctx.aceActiveContext.context.openedElement.uid !== ctx.aceActiveContext.context.addElement.parent.uid"
        },
        "isPanelPinned": {
            "expression": "data.pinnedToForm.dbValue === false"
        },
        "isPanelUnpinned": {
            "expression": "data.pinnedToForm.dbValue === true"
        },
        "isPwaSelectionChanged": {
            "expression": "ctx.aceActiveContext.context.addElement.previousSelectionUid !== ctx.selected.uid"
        },
        "isROCreationCase": {
            "expression": "data.vmo.modelType.typeHierarchyArray.indexOf( 'Fnd0AbstractOccRevisionCreI' ) > -1"
        }
    },
    "dataProviders": {
        "getChildRevisionDataProvider": {
            "action": "getRevisionData",
            "response": "{{data.searchResults}}",
            "totalFound": "{{data.totalFound}}",
            "preSelection": false,
            "selectionModelMode": "single",
            "policy": {
                "types": [ {
                        "name": "ItemRevision",
                        "properties": [
                            { "name": "object_desc" }
                        ]
                    },
                    {
                        "name": "Part Revision",
                        "properties": [
                            { "name": "object_desc" }
                        ]
                    }
                ]
            }
        },
        "getAllowableTypesProvider": {
            "action": "ensureAllowableTypesLoaded",
            "response": "{{data.searchResults2}}",
            "totalFound": "{{data.totalFound2}}",
            "selectionModelMode": "single"
        }
    }
}
