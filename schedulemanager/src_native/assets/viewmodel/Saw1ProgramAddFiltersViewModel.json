{
    "schemaVersion": "1.0.0",
    "imports": [
        "js/aw-panel-body.directive",
        "js/aw-listbox.directive",
        "js/aw-panel-footer.directive",
        "js/aw-button.directive",
        "js/aw-i18n.directive",
        "js/aw-widget.directive",
        "js/aw-list-filter.directive",
        "js/aw-break.directive",
        "js/enable-when.directive",
        "js/visible-when.directive",
        "js/aw-row.directive",
        "js/aw-label.directive",
        "js/aw-icon-button.directive",
        "js/aw-flex-row.directive",
        "js/aw-flex-column.directive"
    ],
    "actions": {
        "selectionChangeOfTypeContext": {
            "actionType": "JSFunction",
            "method": "selectionChangeOfTypeContext",
            "inputData": {
                "data": "{{data}}"
            },
            "deps": "js/Saw1ProgramAddFilterService"
        },
        "selectionChangeOfPropertyContext": {
            "actionType": "JSFunction",
            "method": "selectionChangeOfPropertyContext",
            "inputData": {
                "data": "{{data}}"
            },
            "deps": "js/Saw1ProgramAddFilterService",
            "actionMessages": {
                "failure": [
                    {
                        "message": "displayError"
                    }
                ]
            }
        },
        "selectionChangeOfOperatorContext": {
            "actionType": "JSFunction",
            "method": "selectionChangeOfOperatorContext",
            "inputData": {
                "data": "{{data}}"
            },
            "deps": "js/Saw1ProgramAddFilterService"
        },
        "checkForEditCondition": {
            "actionType": "JSFunction",
            "method": "editProgramViewFilterConditon",
            "inputData": {
                "ctx": "{{ctx}}",
                "data": "{{data}}"
            },
            "deps": "js/Saw1ProgramAddFilterService",
            "actionMessages": {
                "failure": [
                    {
                        "message": "displayError"
                    }
                ]
            }
        },
        "getPropertyPreferencesAction": {
            "actionType": "JSFunction",
            "method": "getPropertyPreferences",
            "inputData": {
                "typeInternalName" : "{{function:getFilterBOType}}",
                "ctx": "{{ctx}}",
                "data": "{{data}}",
                "noDisplay" : true
            },
            "events": {
                "success": [ {
                    "name": "checkForEditConditionEvent"
                } ]
            },
            "actionMessages": {
                "failure": [
                    {
                        "message": "displayError"
                    }
                ]
            },
            "deps": "js/Saw1ProgramAddFilterService"
        },
        "addConditionToFilter": {
            "actionType": "JSFunction",
            "method": "addProgramViewConditionToCtx",
            "inputData": {
                "ctx": "{{ctx}}",
                "data": "{{data}}"
            },
            "deps": "js/Saw1ProgramAddFilterService"
        },
        "saveValueAndShowResourcesPanel":{
            "actionType" : "JSFunction",
            "method": "saveResourceSelectionValues",
            "inputData": {
                "ctx": "{{ctx}}",
                "data": "{{data}}"
            },
            "events": {
                "success":[{
                    "name": "showResourcesPanelEvent"
                }]
            },
            "deps" : "js/Saw1ProgramAddFilterService"
        },
        "showResourcesPanel": {
            "actionType": "Event",
            "method": "Event",
            "inputData": {
                "events": [
                    {
                        "name": "awPanel.navigate",
                        "eventData": {
                            "destPanelId": "Saw1AddMembersToSchedule",
                            "title": "{{data.i18n.saw1AddResource}}",
                            "recreatePanel": true,
                            "supportGoBack": true
                        }
                    }
                ]
            }
        },
        "removeResource" : {
            "actionType": "JSFunction",
            "method": "removeResource",
            "inputData": {
                "filterResourceValue": "{{data.filterResourceValue}}"
            },
            "deps": "js/Saw1ProgramAddFilterService"
        },
        "cleanUp": {
            "actionType": "JSFunction",
            "method": "cleanUpEdit",
            "inputData": {
                "ctx": "{{ctx}}"
            },
            "deps": "js/Saw1ProgramAddFilterService"
        },
        "fieldsEmptyErrorAction": {
            "actionType": "Event",
            "method": "Event",
            "inputData": {
                "events": [ {
                    "name": "Saw1ProgramViewFilter.fieldsEmptyErrorMessage"
                } ]
            }
        },
        "workCompletePercentErrorAction": {
            "actionType": "Event",
            "method": "Event",
            "inputData": {
                "events": [ {
                    "name": "Saw1ProgramViewFilter.workCompletePercentErrorMessage"
                } ]
            }
        },
        "invalidHoursAction": {
            "actionType": "Event",
            "method": "Event",
            "inputData": {
                "events": [ {
                    "name": "Saw1ProgramViewFilter.invalidHoursMessage"
                } ]
            }
        }
    },
    "functions": {
        "getFilterBOType" : {
            "functionName": "getFilterBOType",
            "parameters":
            [
                "{{ctx}}",
                "{{data}}"
            ]
        }
    },
    "data": {
        "addButtonCommand" : {
            "action": "saveValueAndShowResourcesPanel",
            "iconName": "Add",
            "tooltip": "{{i18n.saw1_add}}"
        },
        "removeButtonCommand" : {
            "action": "removeResource",
            "iconName": "Delete",
            "tooltip": "{{i18n.delete}}"
        },
        "filterResourceValue": {
            "displayName": "{{i18n.saw1Resource}}",
            "type": "STRING",
            "dbValue": "",
            "uiValue": "",
            "isEditable": "false"
        },
        "conditionContext": {
            "displayName": "{{i18n.conditionSection}}",
            "type": "STRING",
            "isRequired": "true",
            "hasLov": "true",
            "dbValue": ""
        },
        "conditionContextValues": {
            "type": "STRING",
            "dbValue": [ {
                    "propDisplayValue": "{{i18n.and}}",
                    "propInternalValue": "And"
                },
                {
                    "propDisplayValue": "{{i18n.or}}",
                    "propInternalValue": "Or"
                }
            ]
        },
        "typeContext": {
            "displayName": "{{i18n.typeSection}}",
            "type": "STRING",
            "isRequired": "true",
            "hasLov": "true",
            "dbValue": ""
        },
        "typeContextValues": {
            "type": "STRING",
            "dbValue": [ {
                "propDisplayValue": "{{i18n.Saw1ScheduleTask}}",
                "propInternalValue": "ScheduleTask"
            },
            {
                "propDisplayValue": "{{i18n.Saw1Schedule}}",
                "propInternalValue": "Schedule"
            } ]
        },
        "propertyContext": {
            "displayName": "{{i18n.propertySection}}",
            "type": "STRING",
            "isRequired": "true",
            "hasLov": "true",
            "dbValue": ""
        },
        "propertyContextValues": {
            "type": "STRING",
            "dbValue": [ {} ]
        },
        "operatorTypeContext": {
            "displayName": "{{i18n.operatorSection}}",
            "type": "STRING",
            "isRequired": "true",
            "hasLov": "true",
            "dbValue": ""
        },
        "operatorTypeContextValues": {
            "type": "STRING",
            "dbValue": [ {} ]
        },
        "currentFieldValueType": {
            "type": "STRING",
            "dbValue": ""
        },
        "currentConditionValueType": {
            "type": "STRING",
            "dbValue": ""
        },
        "genericWidget": {
            "displayName": "",
            "type": "DATE",
            "isRequired": "true",
            "dbValue": ""
        },
        "genericEndWidget": {
            "displayName": "{{i18n.to}}",
            "type": "DATE",
            "isRequired": "true",
            "dbValue": ""
        },
        "genericValueContext": {
            "displayName": "",
            "type": "STRING",
            "isRequired": "true",
            "hasLov": "true",
            "dbValue": ""
        },
        "genericValueContextValues": {
            "type": "STRING",
            "dbValue": [ {} ]
        },
        "genericEndValueContext": {
            "displayName": "{{i18n.to}}",
            "type": "STRING",
            "isRequired": "true",
            "hasLov": "true",
            "dbValue": ""
        },
        "genericEndValueContextValues": {
            "type": "STRING",
            "dbValue": [ {} ]
        }
    },
    "messages": {
        "fieldsEmptyErrorMsg": {
            "messageType": "ERROR",
            "messageText": "{{i18n.fieldsEmptyErrorMsg}}"
        },
        "workCompletePercentErrorMsg": {
            "messageType": "ERROR",
            "messageText": "{{i18n.workCompletePercentErrorMsg}}"
        },
        "invalidHoursMsg": {
            "messageType": "ERROR",
            "messageText": "{{i18n.invalidHoursErrorMsg}}"
        },
        "displayError": {
                "messageType": "ERROR",
                "messageText": "{{errorCode}}"
            }
    },
    "onEvent": [ {
            "eventId": "awPanel.reveal",
            "cacheEventData": true,
            "action": "getPropertyPreferencesAction"
        },
        {
            "eventId": "checkForEditConditionEvent",
            "action": "checkForEditCondition"
        },
        {
            "eventId": "Saw1ProgramAddFilters.contentUnloaded",
            "action": "cleanUp"
        },
        {
            "eventId": "selectionChangeOfTypeContext",
            "cacheEventData": true,
            "action": "selectionChangeOfTypeContext"
        },
        {
            "eventId": "selectionChangeOfPropertyContext",
            "cacheEventData": true,
            "action": "selectionChangeOfPropertyContext"
        },
        {
            "eventId": "Saw1ProgramViewFilter.fieldsEmptyError",
            "action": "fieldsEmptyErrorAction"
        },
        {
            "eventId": "Saw1ProgramViewFilter.fieldsEmptyErrorMessage",
            "message": "fieldsEmptyErrorMsg"
        },
        {
            "eventId": "Saw1ProgramViewFilter.workCompletePercentError",
            "action": "workCompletePercentErrorAction"
        },
        {
            "eventId": "Saw1ProgramViewFilter.workCompletePercentErrorMessage",
            "message": "workCompletePercentErrorMsg"
        },
        {
            "eventId": "Saw1ProgramViewFilter.invalidHoursError",
            "action": "invalidHoursAction"
        },
        {
            "eventId": "Saw1ProgramViewFilter.invalidHoursMessage",
            "message": "invalidHoursMsg"
        },
        {
            "eventId": "showResourcesPanelEvent",
            "action": "showResourcesPanel"
        }
    ],
    "conditions": {
        "showValueWidget": {
            "expression": " data.genericWidget.dbValue || data.genericEndWidget.dbValue || data.genericValueContext.dbValue || data.genericEndValueContext.dbValue || data.filterResourceValue"
        },
        "showWidget": {
            "expression": "data.conditionContext.dbValue && data.typeContext.dbValue && data.propertyContext.dbValue && data.operatorTypeContext.dbValue"
        },
        "showAddWidget": {
            "expression": "!ctx.ProgramViewFilterConditonForEdit && conditions.showWidget && conditions.showValueWidget"
        },
        "showAddWidgetForResource": {
            "expression": "conditions.showWidget"
        },
        "showAddWidgetForResourcePanel": {
            "expression": "data.dataProviders.getResourcePool.selectedObjects.length > 0 || data.dataProviders.userPerformSearch.selectedObjects.length > 0 || data.dataProviders.getDisciplines.selectedObjects.length > 0"
        },
        "showSaveWidget": {
            "expression": "ctx.ProgramViewFilterConditonForEdit && conditions.showWidget && conditions.showValueWidget"
        },
        "showGenericWidget": {
            "expression": "conditions.showWidget && data.currentFieldValueType.dbValue !== 'LISTBOX' && data.currentFieldValueType.dbValue !== 'PANEL'"
        },
        "showGenericEndWidget": {
            "expression": "conditions.showGenericWidget && data.currentConditionValueType.dbValue"
        },
        "showConditionBox": {
            "expression": "(data.ProgramViewFiltersConditions && data.ProgramViewFiltersConditions.length > 0 && !ctx.ProgramViewFilterConditonForEdit) || (data.ProgramViewFiltersConditions[0].uid !== ctx.ProgramViewFilterConditonForEdit.uid)"
        },
        "checkForStringType": {
            "expression": "data.propertyContext.uiValue === 'Name' || data.propertyContext.uiValue === 'Description' || data.currentFieldValueType.dbValue === 'STRING'"
        },
        "checkOperatorType": {
            "expression": "conditions.checkBetweenOperator || data.currentFieldValueType.dbValue === 'PANEL' || conditions.checkForStringType"
        },
        "checkBetweenOperator": {
            "expression": "data.operatorTypeContext.dbValue === 'Between'"
        },
        "showGenericListBox": {
            "expression": "conditions.showWidget && data.currentFieldValueType.dbValue === 'LISTBOX'"
        },
        "showGenericEndListBox": {
            "expression": "conditions.showGenericListBox && data.currentConditionValueType.dbValue"
        },
        "showResourceAssignment": {
            "expression": "conditions.showAddWidgetForResource && data.currentFieldValueType.dbValue === 'PANEL'"
        }
    },
    "i18n": {
        "assigned": [
            "ScheduleManagerMessages"
        ],
        "Saw1Unassigned": [
            "ScheduleManagerMessages"
        ],
        "conditionSection": [
            "ScheduleManagerMessages"
        ],
        "and": [
            "ScheduleManagerMessages"
        ],
        "or": [
            "ScheduleManagerMessages"
        ],
        "typeSection": [
            "ScheduleManagerMessages"
        ],
        "Saw1ScheduleTask": [
            "ScheduleManagerMessages"
        ],
        "Saw1Schedule": [
            "ScheduleManagerMessages"
        ],
        "propertySection": [
            "ScheduleManagerMessages"
        ],
        "operatorSection": [
            "ScheduleManagerMessages"
        ],
        "Saw1EqualTo": [
            "ScheduleManagerMessages"
        ],
        "Saw1NotEqualTo": [
            "ScheduleManagerMessages"
        ],
        "Saw1LessThan": [
            "ScheduleManagerMessages"
        ],
        "Saw1GreaterThan": [
            "ScheduleManagerMessages"
        ],
        "Saw1LessThanOrEqTo": [
            "ScheduleManagerMessages"
        ],
        "Saw1GreaterThanOrEqTo": [
            "ScheduleManagerMessages"
        ],
        "Saw1Between": [
            "ScheduleManagerMessages"
        ],
        "ValueSection": [
            "ScheduleManagerMessages"
        ],
        "addButtonText": [
            "ScheduleManagerMessages"
        ],
        "saveBtnTitle": [
            "ScheduleManagerMessages"
        ],
        "filters": [
            "ScheduleManagerMessages"
        ],
        "filtersCommandTitle": [
            "ScheduleManagerMessages"
        ],
        "addFilter": [
            "ScheduleManagerMessages"
        ],
        "fieldsEmptyErrorMsg": [
            "ScheduleManagerMessages"
        ],
        "workCompletePercentErrorMsg": [
            "ScheduleManagerMessages"
        ],
        "invalidHoursErrorMsg": [
            "ScheduleManagerMessages"
        ],
        "saw1AddResource": [
            "ScheduleManagerMessages"
        ],
        "saw1Resource": [
            "ScheduleManagerMessages"
        ],
        "saw1_add": [
            "ScheduleManagerMessages"
        ],
        "delete": [
            "ScheduleManagerMessages"
        ]
    }
}
