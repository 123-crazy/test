{
  "name": "subscription",
  "description": "",
  "type": [
    "native"
  ],
  "srcDir": "src_native",
  "pathOffset": ".",
  "skipAudit": true,
  "skipTest": true,
  "version": "6.1.6",
  "author": "Siemens Product Lifecycle Management Software Inc.",
  "aliasRegistry": {
    "homeSubscription64": [
      "subscription"
    ],
    "typeWorkspaceObject48": [
      "ImanEventType"
    ]
  },
  "commandsViewModel": {
    "commands": {
      "Sub0SetPin": {
        "iconId": "cmdPin",
        "isGroup": false,
        "title": "{{i18n.PinPanelCommandTitle}}",
        "description": "{{i18n.panelPinButtonDesc}}"
      },
      "Sub0SetUnPin": {
        "iconId": "cmdUnpin",
        "isGroup": false,
        "title": "{{i18n.UnPinPanelCommandTitle}}",
        "description": "{{i18n.panelUnPinButtonDesc}}"
      },
      "Sub0EventAddCellCmd": {
        "iconId": "cmdAdd",
        "isGroup": false,
        "title": "{{i18n.addEventTitle}}",
        "description": "{{i18n.Sub0EventAddCellCmdDesc}}"
      },
      "Sub0EventRemoveCellCmd": {
        "iconId": "cmdRemove",
        "isGroup": false,
        "title": "{{i18n.removeEventTitle}}",
        "description": "{{i18n.Sub0EventRemoveCellCmdDesc}}"
      },
      "Sub0ShowObjectCell": {
        "iconId": "cmdOpen",
        "title": "{{i18n.open}}",
        "description": "{{i18n.Sub0ShowObjectCellDesc}}"
      },
      "Sub0SubscriptionShowObjectCell": {
        "iconId": "cmdOpen",
        "title": "{{i18n.open}}",
        "description": "{{i18n.Sub0SubscriptionShowObjectCellDesc}}"
      },
      "Sub0DeleteMessage": {
        "iconId": "cmdDelete",
        "title": "{{i18n.deleteMessagesTitle}}",
        "description": "{{i18n.Sub0DeleteMessageDesc}}"
      },
      "Sub0AddCriteria": {
        "iconId": "cmdAdd",
        "title": "{{i18n.followCondAddText}}",
        "description": "{{i18n.Sub0AddCriteriaDesc}}"
      },
      "Sub0EditCriteria": {
        "iconId": "cmdEdit",
        "title": "{{i18n.followCondEditText}}",
        "description": "{{i18n.Sub0EditCriteriaDesc}}"
      },
      "Sub0RemoveCriteria": {
        "iconId": "cmdRemove",
        "title": "{{i18n.removeCriteriaText}}",
        "description": "{{i18n.Sub0RemoveCriteriaDesc}}"
      },
      "Sub0MoveUpCriteria": {
        "iconId": "cmdMoveUp",
        "title": "{{i18n.moveUpCriteriaText}}",
        "description": "{{i18n.Sub0MoveUpCriteriaDesc}}"
      },
      "Sub0MoveDownCriteria": {
        "iconId": "cmdMoveDown",
        "title": "{{i18n.moveDownCriteriaText}}",
        "description": "{{i18n.Sub0MoveDownCriteriaDesc}}"
      },
      "Sub0TemporaryTransferNotification": {
        "iconId": "cmdSetTemporaryNotifier",
        "title": "{{i18n.transferNotification}}",
        "description": "{{i18n.Sub0TemporaryTransferNotificationDesc}}"
      },
      "Sub0Subscribe": {
        "iconId": "cmdFollow",
        "title": "{{i18n.followCommandTitle}}",
        "description": "{{i18n.Sub0SubscribeDesc}}"
      },
      "Sub0SubscribeType": {
        "iconId": "cmdAdd",
        "title": "{{i18n.followTypeCommandTitle}}",
        "description": "{{i18n.Sub0SubscribeTypeDesc}}"
      },
      "Sub0AddFollower": {
        "iconId": "cmdAdd",
        "title": "{{i18n.addFollowerCmd}}",
        "description": "{{i18n.Sub0AddFollowerDesc}}"
      },
      "Sub0RemoveFollower": {
        "iconId": "cmdRemove",
        "title": "{{i18n.removeFollowerCmd}}",
        "description": "{{i18n.Sub0RemoveFollowerDesc}}"
      },
      "Sub0AddFollowerTable": {
        "iconId": "cmdAdd",
        "title": "{{i18n.addFollowerCmd}}",
        "description": "{{i18n.Sub0AddFollowerTableDesc}}"
      },
      "Sub0RemoveFollowerTable": {
        "iconId": "cmdRemove",
        "title": "{{i18n.removeFollowerCmd}}",
        "description": "{{i18n.Sub0RemoveFollowerDesc}}"
      },
      "Sub0AddSubscription": {
        "iconId": "cmdAdd",
        "title": "{{i18n.addSubscriptionCmd}}",
        "description": "{{i18n.Sub0AddSubscriptionDesc}}"
      },
      "Sub0SaveAsSubscription": {
        "iconId": "cmdSaveAs",
        "title": "{{i18n.saveAsTitle}}",
        "description": "{{i18n.Sub0SaveAsSubscriptionDesc}}"
      },
      "Sub0NewsFeedFilters": {
        "iconId": "cmdfilter",
        "isGroup": false,
        "title": "{{i18n.searchFiltersTitle}}",
        "description": "{{i18n.Sub0NewsFeedFiltersDesc}}"
      },
      "Sub0UnFollowSubscriptions": {
        "iconId": "cmdUnfollow",
        "isGroup": false,
        "title": "{{i18n.unFollow}}",
        "description": "{{i18n.Sub0UnFollowSubscriptionsDesc}}"
      },
      "Awp0ShowAlertWithBubble": {
        "iconId": "cmdAlerts",
        "isGroup": false,
        "title": "{{i18n.AlertCmdTitle}}",
        "template": "<div>{{ctx.unreadMessageCount}}</div>",
        "description": "{{i18n.Awp0ShowAlertWithBubbleDesc}}"
      },
      "Awp0ShowAlertWithoutBubble": {
        "iconId": "cmdAlerts",
        "isGroup": false,
        "title": "{{i18n.AlertCmdTitle}}",
        "description": "{{i18n.Awp0ShowAlertWithoutBubbleDesc}}"
      },
      "Awp0OpenLineItem": {
        "iconId": "cmdOpen",
        "isGroup": false,
        "title": ""
      }
    },
    "commandHandlers": {
      "Sub0SetPinCommandHandler": {
        "id": "Sub0SetPin",
        "action": "Sub0SetPin",
        "activeWhen": {
          "condition": "conditions.isSub0PanelPinned"
        },
        "visibleWhen": {
          "condition": "conditions.isSub0PanelPinned"
        }
      },
      "Sub0SetUnPinCommandHandler": {
        "id": "Sub0SetUnPin",
        "action": "Sub0SetUnPin",
        "activeWhen": {
          "condition": "conditions.isSub0PanelUnPinned"
        },
        "visibleWhen": {
          "condition": "conditions.isSub0PanelUnPinned"
        }
      },
      "Sub0ShowEventAddCellCommandHandler": {
        "id": "Sub0EventAddCellCmd",
        "action": "Sub0EventAddCellCmdAction",
        "activeWhen": true,
        "visibleWhen": true
      },
      "Sub0ShowEventRemoveCellCommandHandler": {
        "id": "Sub0EventRemoveCellCmd",
        "action": "Sub0EventRemoveCellCmdAction",
        "activeWhen": true,
        "visibleWhen": true
      },
      "Sub0ShowOpenCellCommandHandler": {
        "id": "Sub0ShowObjectCell",
        "action": "newsfeedOpenCellCommand",
        "activeWhen": true,
        "visibleWhen": true
      },
      "Sub0SubscriptionShowObjectCellCommandHandler": {
        "id": "Sub0SubscriptionShowObjectCell",
        "action": "subscriptionOpenCellCommand",
        "activeWhen": true,
        "visibleWhen": true
      },
      "Sub0DeleteMessageCommandHandler": {
        "id": "Sub0DeleteMessage",
        "action": "Sub0DeleteMessageCommandAction",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.Sub0DeleteMessageCommandCondition"
        }
      },
      "Sub0AddCriteriaCommandHandler": {
        "id": "Sub0AddCriteria",
        "action": "Sub0AddCriteriaAction",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isEditingAndNotImanSubscriptionForDelete"
        }
      },
      "SubscriptionChangeOwnerHandler": {
        "id": "Awp0ChangeOwner",
        "action": "openChangeOwnerPanelforSub",
        "activeWhen": {
          "condition": "conditions.subscriptionChangeOwnerCommandActiveCondition"
        },
        "visibleWhen": {
          "condition": "conditions.subscriptionChangeOwnerCommandActiveCondition"
        }
      },
      "Sub0EditCriteriaCommandHandler": {
        "id": "Sub0EditCriteria",
        "action": "Sub0EditCriteriaAction",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isEditingAndNonSystemCriteriaSelected"
        }
      },
      "Sub0RemoveCriteriaCommandHandler": {
        "id": "Sub0RemoveCriteria",
        "action": "Sub0RemoveCriteriaAction",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isEditingAndNonSystemCriteriaSelected"
        }
      },
      "Sub0MoveUpCriteriaCommandHandler": {
        "id": "Sub0MoveUpCriteria",
        "action": "Sub0MoveUpCriteriaAction",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isEditingAndNonSystemCriteriaSelected"
        }
      },
      "Sub0MoveDownCriteriaCommandHandler": {
        "id": "Sub0MoveDownCriteria",
        "action": "Sub0MoveDownCriteriaAction",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isEditingAndNonSystemCriteriaSelected"
        }
      },
      "Sub0TemporaryTransferNotificationCommandHandler": {
        "id": "Sub0TemporaryTransferNotification",
        "action": "Sub0TemporaryTransferAction",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isSub0TempTransferNotificationVisible"
        }
      },
      "Sub0SubscribeCommandHandler": {
        "id": "Sub0Subscribe",
        "action": "resetSelectedFollowType",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.Sub0SubscribeCommandCondition"
        }
      },
      "Sub0SubscribeObjectTypeCommandHandler": {
        "id": "Sub0SubscribeType",
        "action": "subscribeObjectType",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.Sub0SubscribeTypeCommandCondition"
        }
      },
      "Sub0AddFollowerCommandHandler": {
        "id": "Sub0AddFollower",
        "action": "addFollowers",
        "activeWhen": true,
        "visibleWhen": true
      },
      "Sub0RemoveFollowerCommandHandler": {
        "id": "Sub0RemoveFollower",
        "action": "removeFollower",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isSub0RemoveFollowerCmdVisible"
        }
      },
      "Sub0AddFollowerTableCommandHandler": {
        "id": "Sub0AddFollowerTable",
        "action": "addFollowersToTable",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isEditing"
        }
      },
      "Sub0RemoveFollowerTableCommandHandler": {
        "id": "Sub0RemoveFollowerTable",
        "action": "removeFollowerFromTable",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isEditingAndNonSubscriberSelected"
        }
      },
      "Sub0AddSubscriptionCommandHandler": {
        "id": "Sub0AddSubscription",
        "action": "addSubscription",
        "activeWhen": true,
        "visibleWhen": true
      },
      "Sub0SaveAsSubscriptionCommandHandler": {
        "id": "Sub0SaveAsSubscription",
        "action": "Sub0SaveAsAction",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isSub0SaveAsSelected"
        }
      },
      "Sub0NewsFeedFiltersCommandHandler": {
        "id": "Sub0NewsFeedFilters",
        "action": "openNewsFeedFiltersPanel",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.Sub0NewsFeedFiltersCmdCondition"
        }
      },
      "Sub0InContextReportsCommandHandlerOverride": {
        "id": "Awp0InContextReports",
        "activeWhen": {
          "condition": "conditions.Sub0HideCommandForSubscription"
        },
        "visibleWhen": false
      },
      "Sub0UnFollowSubscriptionsCommandHandler": {
        "id": "Sub0UnFollowSubscriptions",
        "action": "Sub0UnFollowSubscriptionsAction",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.Sub0UnFollowSubscriptionCmdCondition"
        }
      },
      "showAlertCommandHandlerWithBubble": {
        "id": "Awp0ShowAlertWithBubble",
        "action": "activateNotificationPanel",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.enableAlertWihBubbleCommand"
        }
      },
      "showAlertCommandHandlerWithoutBubble": {
        "id": "Awp0ShowAlertWithoutBubble",
        "action": "activateNotificationPanel",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.enableAlertWihoutBubbleCommand"
        }
      },
      "openNotificationCommandHandler": {
        "id": "Awp0OpenLineItem",
        "action": "openNotification",
        "activeWhen": {
          "condition": "conditions.enableOpenNotificationCommand"
        },
        "visibleWhen": {
          "condition": "conditions.enableOpenNotificationCommand"
        }
      }
    },
    "commandPlacements": {
      "Sub0SetPinPlacement": {
        "id": "Sub0SetPin",
        "uiAnchor": "Sub0_oneStepPinCommands",
        "priority": 100
      },
      "Sub0SetUnPinPlacement": {
        "id": "Sub0SetUnPin",
        "uiAnchor": "Sub0_oneStepPinCommands",
        "priority": 100
      },
      "Sub0EventAddCellCmdCommandPlacement": {
        "id": "Sub0EventAddCellCmd",
        "uiAnchor": "aw_eventAddCellCommandAction",
        "areas": [
          "com.siemens.splm.clientfx.ui.modelObjectListActionCommands"
        ],
        "priority": 300,
        "cellDisplay": {
          "hover": true,
          "position": "TOP_RIGHT",
          "selected": true
        }
      },
      "Sub0EventRemoveCellCmdCommandPlacement": {
        "id": "Sub0EventRemoveCellCmd",
        "uiAnchor": "aw_eventRemoveCellCommandAction",
        "areas": [
          "com.siemens.splm.clientfx.ui.modelObjectListActionCommands"
        ],
        "priority": 300,
        "cellDisplay": {
          "hover": true,
          "position": "TOP_RIGHT",
          "selected": true
        }
      },
      "Sub0ShowObjectCellCommandPlacement": {
        "id": "Sub0ShowObjectCell",
        "uiAnchor": "aw_newsfeedShowObjectCellCommandAction",
        "priority": 0,
        "cellDisplay": {
          "hover": true,
          "position": "TOP_RIGHT",
          "selected": true
        }
      },
      "Sub0SubscriptionShowObjectCellCommandPlacement": {
        "id": "Sub0SubscriptionShowObjectCell",
        "uiAnchor": "aw_subscriptionShowObjectCellCommandAction",
        "priority": 0,
        "cellDisplay": {
          "hover": true,
          "position": "TOP_RIGHT",
          "selected": true
        }
      },
      "Sub0DeleteMessageaw_oneStepCommand": {
        "id": "Sub0DeleteMessage",
        "uiAnchor": "aw_rightWall",
        "priority": 535,
        "parentGroupId": "Awp0EditGroup"
      },
      "Sub0AddCriteriaCommandPlacement": {
        "id": "Sub0AddCriteria",
        "uiAnchor": "sub0_criteriaTableCommands",
        "priority": 0
      },
      "Sub0EditCriteriaCommandPlacement": {
        "id": "Sub0EditCriteria",
        "uiAnchor": "sub0_criteriaTableCommands",
        "priority": 100
      },
      "Sub0RemoveCriteriaCommandPlacement": {
        "id": "Sub0RemoveCriteria",
        "uiAnchor": "sub0_criteriaTableCommands",
        "priority": 200
      },
      "Sub0MoveUpCriteriaCommandPlacement": {
        "id": "Sub0MoveUpCriteria",
        "uiAnchor": "sub0_criteriaTableCommands",
        "priority": 300
      },
      "Sub0MoveDownCriteriaCommandPlacement": {
        "id": "Sub0MoveDownCriteria",
        "uiAnchor": "sub0_criteriaTableCommands",
        "priority": 400
      },
      "Sub0SubscribeCommandPlacement": {
        "id": "Sub0Subscribe",
        "uiAnchor": "aw_rightWall",
        "priority": 90,
        "parentGroupId": "Awp0ShareGroup"
      },
      "Sub0TemporaryTransferNotificationCommandPlacement": {
        "id": "Sub0TemporaryTransferNotification",
        "uiAnchor": "aw_rightWall",
        "priority": 280,
        "parentGroupId": "Awp0ShareGroup"
      },
      "Sub0SubscribeObjectTypeCommandPlacement": {
        "id": "Sub0SubscribeType",
        "uiAnchor": "aw_rightWall",
        "priority": 100,
        "parentGroupId": "Awp0ShareGroup"
      },
      "Sub0AddFollowerCommandPlacement": {
        "id": "Sub0AddFollower",
        "uiAnchor": "sub0_addFollowerCommands",
        "priority": 101
      },
      "Sub0RemoveFollowerCommandPlacement": {
        "id": "Sub0RemoveFollower",
        "uiAnchor": "sub0_addFollowerCommands",
        "priority": 101
      },
      "Sub0AddFollowerTableCommandPlacement": {
        "id": "Sub0AddFollowerTable",
        "uiAnchor": "sub0_addFollowerCustomPanelCommands",
        "priority": 101
      },
      "Sub0RemoveFollowerTableCommandPlacement": {
        "id": "Sub0RemoveFollowerTable",
        "uiAnchor": "sub0_addFollowerCustomPanelCommands",
        "priority": 101
      },
      "Sub0AddSubscriptionCommandPlacement": {
        "id": "Sub0AddSubscription",
        "uiAnchor": "sub0_addSubscriptionCommands",
        "priority": 102
      },
      "Sub0SaveAsSubscriptionCommandPlacement": {
        "id": "Sub0SaveAsSubscription",
        "uiAnchor": "aw_rightWall",
        "priority": 640,
        "parentGroupId": "Awp0NewGroup"
      },
      "Sub0NewsFeedFiltersCommandPlacement": {
        "id": "Sub0NewsFeedFilters",
        "uiAnchor": "aw_primaryWorkArea",
        "priority": 1170
      },
      "Sub0UnFollowSubscriptionsCommandPlacement": {
        "id": "Sub0UnFollowSubscriptions",
        "uiAnchor": "aw_primaryWorkArea",
        "priority": 1190
      },
      "showAlertGlobalToolbarWithBubble": {
        "id": "Awp0ShowAlertWithBubble",
        "uiAnchor": "aw_globalToolbar",
        "relativeTo": "Awp0ChangeTheme",
        "priority": 1
      },
      "showAlertUserSessionbarWithBubble": {
        "id": "Awp0ShowAlertWithBubble",
        "uiAnchor": "aw_userSessionbar",
        "priority": 3
      },
      "showAlertGlobalToolbarWithoutBubble": {
        "id": "Awp0ShowAlertWithoutBubble",
        "uiAnchor": "aw_globalToolbar",
        "relativeTo": "Awp0ChangeTheme",
        "priority": 1
      },
      "showAlertUserSessionbarWithoutBubble": {
        "id": "Awp0ShowAlertWithoutBubble",
        "uiAnchor": "aw_userSessionbar",
        "priority": 3
      },
      "openNotificationCommandPlacement": {
        "id": "Awp0OpenLineItem",
        "uiAnchor": "none",
        "priority": 1
      }
    },
    "actions": {
      "Sub0SetPin": {
        "actionType": "Event",
        "method": "Event",
        "inputData": {
          "events": [
            {
              "name": "createSubscription.Sub0SetPin",
              "eventData": {
                "data": "{{commandContext}}"
              }
            }
          ]
        }
      },
      "Sub0SetUnPin": {
        "actionType": "Event",
        "method": "Event",
        "inputData": {
          "events": [
            {
              "name": "createSubscription.Sub0SetUnPin",
              "eventData": {
                "data": "{{commandContext}}"
              }
            }
          ]
        }
      },
      "Sub0EventAddCellCmdAction": {
        "actionType": "JSFunction",
        "method": "addToEventConfig",
        "deps": "js/Sub0UserEventsConfigService"
      },
      "Sub0EventRemoveCellCmdAction": {
        "actionType": "JSFunction",
        "method": "removeFromEventConfig",
        "deps": "js/Sub0UserEventsConfigService"
      },
      "newsfeedOpenCellCommand": {
        "actionType": "JSFunction",
        "method": "messageOpenDelegateJS",
        "deps": "js/awMessageService",
        "inputData": {
          "selectedCell": "{{commandContext.vmo}}",
          "uidPropertyPath": "{{commandContext.vmo.uid}}",
          "openInEditMode": false
        }
      },
      "subscriptionOpenCellCommand": {
        "actionType": "JSFunction",
        "method": "openObject",
        "deps": "js/Sub0SubscribeCommandPanelService",
        "inputData": {
          "selectedCell": "{{commandContext.vmo}}"
        }
      },
      "Sub0DeleteMessageCommandAction": {
        "actionType": "Event",
        "method": "Event",
        "inputData": {
          "events": [
            {
              "name": "Sub0DeleteSubscriptionDeleteCmdEvent"
            }
          ]
        }
      },
      "confirmSubscriptionDelete": {
        "actionType": "Event",
        "method": "Event",
        "inputData": {
          "events": [
            {
              "name": "confirmSingleSubscriptionDeleteEvent",
              "condition": "ctx.mselected.length === 1"
            },
            {
              "name": "confirmMultiSubscriptionDeleteEvent",
              "condition": "ctx.mselected.length > 1"
            }
          ]
        }
      },
      "deleteObjects": {
        "actionType": "TcSoaService",
        "serviceName": "Core-2006-03-DataManagement",
        "method": "deleteObjects",
        "inputData": {
          "objects": "{{ctx.mselected}}"
        },
        "outputData": {
          "deletePartialErrors": "partialErrors"
        },
        "events": {
          "success": [
            {
              "name": "primaryWorkarea.reset"
            }
          ],
          "failure": [
            {
              "name": "primaryWorkarea.reset"
            }
          ]
        },
        "actionMessages": {
          "success": [
            {
              "message": "deletedSuccessfulMessage"
            }
          ],
          "failure": [
            {
              "condition": "(ctx.mselected && ctx.mselected.length === 1)",
              "message": "deleteSingleFailure"
            },
            {
              "condition": "(ctx.mselected && ctx.mselected.length > 1)",
              "message": "deleteMultipleFailure"
            }
          ]
        }
      },
      "Sub0AddCriteriaAction": {
        "actionType": "JSFunction",
        "method": "activateCommandPanel",
        "inputData": {
          "commandId": "Sub0CriteriaPanel",
          "location": "aw_toolsAndInfo"
        },
        "deps": "js/commandPanel.service"
      },
      "openChangeOwnerPanelforSub": {
        "actionType": "JSFunction",
        "method": "activateCommandPanel",
        "deps": "js/commandPanel.service",
        "inputData": {
          "commandId": "Sub0ChangeOwner",
          "location": "aw_toolsAndInfo",
          "context": "{{commandContext}}"
        }
      },
      "Sub0EditCriteriaAction": {
        "actionType": "JSFunction",
        "method": "activateCommandPanel",
        "inputData": {
          "commandId": "Sub0CriteriaPanel",
          "location": "aw_toolsAndInfo",
          "context": "{{ctx.selected}}"
        },
        "deps": "js/commandPanel.service"
      },
      "Sub0RemoveCriteriaAction": {
        "actionType": "JSFunction",
        "method": "removeCriteria",
        "inputData": {
          "criteriaObjects": "{{ctx.sub0Criteria.criteriaObjects}}",
          "selectedObj": "{{ctx.selected}}"
        },
        "events": {
          "success": [
            {
              "name": "subscriptionCriteriaObjects.updated"
            }
          ]
        },
        "deps": "js/awSubscriptionCriteriaTableService"
      },
      "Sub0MoveUpCriteriaAction": {
        "actionType": "JSFunction",
        "method": "moveCriteria",
        "inputData": {
          "criteriaObjects": "{{ctx.sub0Criteria.criteriaObjects}}",
          "selectedObj": "{{ctx.selected}}",
          "eventType": "{{ctx.sub0Criteria.eventType}}",
          "isMoveUp": true
        },
        "events": {
          "success": [
            {
              "name": "subscriptionCriteriaObjects.updated"
            }
          ]
        },
        "deps": "js/awSubscriptionCriteriaTableService"
      },
      "Sub0MoveDownCriteriaAction": {
        "actionType": "JSFunction",
        "method": "moveCriteria",
        "inputData": {
          "criteriaObjects": "{{ctx.sub0Criteria.criteriaObjects}}",
          "selectedObj": "{{ctx.selected}}",
          "eventType": "{{ctx.sub0Criteria.eventType}}",
          "isMoveUp": false
        },
        "events": {
          "success": [
            {
              "name": "subscriptionCriteriaObjects.updated"
            }
          ]
        },
        "deps": "js/awSubscriptionCriteriaTableService"
      },
      "Sub0SaveAsAction": {
        "actionType": "JSFunction",
        "method": "activateCommandPanel",
        "deps": "js/commandPanel.service",
        "inputData": {
          "commandId": "Sub0SaveAsSubscription",
          "location": "aw_toolsAndInfo"
        }
      },
      "Sub0TemporaryTransferAction": {
        "actionType": "JSFunction",
        "method": "activateCommandPanel",
        "deps": "js/commandPanel.service",
        "inputData": {
          "commandId": "Sub0TemporaryTransferNotification",
          "location": "aw_toolsAndInfo"
        }
      },
      "subscribeObject": {
        "actionType": "Event",
        "method": "Event",
        "inputData": {
          "events": [
            {
              "name": "getFindSubscriptionsInputEvent"
            }
          ]
        }
      },
      "resetSelectedFollowType": {
        "actionType": "JSFunction",
        "method": "resetSelectedFollowType",
        "deps": "js/Sub0SubscribeCommandPanelService",
        "inputData": {},
        "events": {
          "success": [
            {
              "name": "subscribeObjectEvent"
            }
          ]
        }
      },
      "subscribeMultiObject": {
        "actionType": "TcSoaService",
        "serviceName": "Internal-Subscription-2018-12-SubscriptionManagement",
        "method": "validateSubscribableTypes",
        "deps": "js/Sub0SubscribeCommandPanelService",
        "inputData": {
          "objectsOrTypes": "{{data.target}}"
        },
        "outputData": {
          "ctx.subscriptionCtx": "{{function:loadSubscriptionCtx}}"
        },
        "events": {
          "success": [
            {
              "condition": "ctx.subscriptionCtx.nonSubscribableObjects.length===0 && ctx.subscriptionCtx.subscribableObjects.uids.length > 0",
              "name": "getCommonEventTypesEvent"
            }
          ]
        },
        "actionMessages": {
          "success": [
            {
              "condition": "ctx.subscriptionCtx.nonSubscribableObjects.length > 0 && ctx.subscriptionCtx.subscribableObjects.uids.length>0",
              "message": "confirmMultiObjectSubscriptionCreateEvent"
            },
            {
              "condition": "ctx.subscriptionCtx.nonSubscribableObjects.length > 0 && ctx.subscriptionCtx.subscribableObjects.uids.length===0",
              "message": "NoObjectsToFollowErrorMessage"
            }
          ],
          "failure": [
            {
              "condition": "ctx.subscriptionCtx.nonSubscribableObjects.length > 0 && ctx.subscriptionCtx.subscribableObjects.uids.length>0",
              "message": "confirmMultiObjectSubscriptionCreateEvent"
            }
          ]
        }
      },
      "getCommonEventTypes": {
        "actionType": "TcSoaService",
        "serviceName": "Internal-Subscription-2018-12-SubscriptionManagement",
        "method": "getApplicableCommonEventTypes",
        "inputData": {
          "objectsOrTypes": "{{ctx.subscriptionCtx.subscribableObjects.uids}}"
        },
        "outputData": {
          "ctx.subscriptionCtx.eventTypeList": "{{function:processEventTypes}}"
        },
        "policy": {
          "types": [
            {
              "name": "ImanEventType",
              "properties": [
                {
                  "name": "eventtype_id"
                }
              ]
            }
          ]
        },
        "events": {
          "success": [
            {
              "name": "activateCreatePanel",
              "condition": "ctx.subscriptionCtx.eventTypeList.length>0"
            }
          ],
          "failure": [
            {
              "name": "activateCreatePanel",
              "condition": "ctx.subscriptionCtx.eventTypeList.length>0"
            }
          ]
        },
        "actionMessages": {
          "success": [
            {
              "condition": "ctx.subscriptionCtx.eventTypeList.length < 1",
              "message": "NoEventsToSubscribe"
            }
          ],
          "failure": [
            {
              "condition": "ctx.subscriptionCtx.eventTypeList.length < 1",
              "message": "NoEventsToSubscribe"
            }
          ]
        },
        "deps": "js/Sub0SubscribeCommandPanelService"
      },
      "getFindSubscriptionsInput": {
        "actionType": "JSFunction",
        "method": "getObjectOrTypes",
        "deps": "js/Sub0SubscribeCommandPanelService",
        "inputData": {
          "ctx": "{{ctx}}"
        },
        "outputData": {
          "target": ""
        },
        "events": {
          "success": [
            {
              "name": "subscribeSingleObjectEvent",
              "condition": "ctx.mselected.length === 1 && data.target.length === 1"
            },
            {
              "name": "subscribeMultiObjectEvent",
              "condition": "ctx.mselected.length > 1 && ctx.mselected.length <= ctx.preferences.AWC_followMultiObject_max && data.target.length > 1"
            }
          ]
        },
        "actionMessages": {
          "success": [
            {
              "message": "multiObjectSelectionLimitErrorMessage",
              "condition": "ctx.mselected.length > ctx.preferences.AWC_followMultiObject_max"
            },
            {
              "message": "invalidTargetErrorMessage",
              "condition": "data.target.length === 0"
            }
          ]
        }
      },
      "subscribeSingleObject": {
        "actionType": "TcSoaService",
        "serviceName": "Internal-Notification-2015-03-SubscriptionManagement",
        "method": "findSubscriptions",
        "deps": "js/Sub0SubscribeCommandPanelService",
        "inputData": {
          "input": {
            "subscriber": "{{ctx.user}}",
            "target": "{{data.target[0]}}"
          }
        },
        "outputData": {
          "ctx.subscriptions": "subscriptions",
          "ctx.subscriptions.uids": "ServiceData.updated",
          "ctx.subscriptionCtx": "{{function:loadSubscriptionCtx}}"
        },
        "events": {
          "success": [
            {
              "name": "listSubscriptions",
              "condition": "ctx.subscriptions.length>0"
            },
            {
              "name": "activateCreatePanel",
              "condition": "!ctx.subscriptions"
            }
          ]
        }
      },
      "subscribeObjectType": {
        "actionType": "JSFunction",
        "method": "activateCommandPanel",
        "deps": "js/commandPanel.service",
        "inputData": {
          "commandId": "Sub0SubscribeType",
          "location": "aw_toolsAndInfo"
        }
      },
      "listExistingSubscription": {
        "actionType": "JSFunction",
        "method": "activateCommandPanel",
        "deps": "js/commandPanel.service",
        "inputData": {
          "commandId": "Sub0Subscribe",
          "location": "aw_toolsAndInfo"
        }
      },
      "loadCreatePanel": {
        "actionType": "JSFunction",
        "method": "activateCommandPanel",
        "deps": "js/commandPanel.service",
        "inputData": {
          "commandId": "Sub0CreateSubscription",
          "location": "aw_toolsAndInfo"
        }
      },
      "addFollowersToTable": {
        "actionType": "JSFunction",
        "method": "activateCommandPanel",
        "deps": "js/commandPanel.service",
        "inputData": {
          "commandId": "Sub0AddFollower",
          "location": "aw_toolsAndInfo"
        }
      },
      "removeFollowerFromTable": {
        "actionType": "JSFunction",
        "method": "removeFollower",
        "inputData": {
          "followerObjects": "{{ctx.sub0Follower.followerObjects}}",
          "selectedObj": "{{ctx.selected}}"
        },
        "events": {
          "success": [
            {
              "name": "subscriptionFollowerObjects.updated"
            }
          ]
        },
        "deps": "js/awSubscriptionFollowerTableService"
      },
      "addFollowers": {
        "actionType": "Event",
        "method": "Event",
        "inputData": {
          "events": [
            {
              "name": "awPanel.navigate",
              "eventData": {
                "destPanelId": "Sub0AddFollowerSub",
                "title": "{{i18n.users}}",
                "isolateMode": true,
                "recreatePanel": true,
                "supportGoBack": true
              }
            }
          ]
        }
      },
      "removeFollower": {
        "actionType": "Event",
        "method": "Event",
        "inputData": {
          "events": [
            {
              "name": "sub0RemoveFollowerCmdActionEvent"
            }
          ]
        }
      },
      "addSubscription": {
        "actionType": "Event",
        "method": "Event",
        "inputData": {
          "events": [
            {
              "name": "awPanel.navigate",
              "eventData": {
                "destPanelId": "Sub0CreateSubscriptionSub",
                "isolateMode": false,
                "recreatePanel": false,
                "supportGoBack": false
              }
            }
          ]
        }
      },
      "openNewsFeedFiltersPanel": {
        "actionType": "JSFunction",
        "method": "activateCommandPanel",
        "deps": "js/commandPanel.service",
        "inputData": {
          "commandId": "Sub0NewsFeedFilters",
          "location": "aw_navigation"
        }
      },
      "Sub0UnFollowSubscriptionsAction": {
        "actionType": "Event",
        "method": "Event",
        "inputData": {
          "events": [
            {
              "name": "unFollowSingleSubscriptionConfirmation",
              "condition": "ctx.mselected.length === 1"
            },
            {
              "name": "unFollowMultipleSubscriptionsConfirmation",
              "condition": "ctx.mselected.length > 1"
            }
          ]
        }
      },
      "unFollowSubscriptions": {
        "actionType": "Event",
        "method": "Event",
        "inputData": {
          "events": [
            {
              "name": "deleteSubscriptionsEvent",
              "condition": "ctx.locationContext['ActiveWorkspace:SubLocation'] === 'com.siemens.splm.client.subscription.follow.Subscriptions'"
            },
            {
              "name": "unsubscribeSubscriptionsEvent",
              "condition": "ctx.locationContext['ActiveWorkspace:SubLocation'] === 'com.siemens.splm.client.subscription.follow.FollowedSubscriptions'"
            }
          ]
        }
      },
      "unsubscribeSubscriptions": {
        "actionType": "TcSoaService",
        "serviceName": "Internal-Notification-2015-10-SubscriptionManagement",
        "method": "unsubscribe",
        "inputData": {
          "subscriptions": "{{ctx.mselected}}"
        },
        "outputData": {
          "unFollowPartialErrors": "ServiceData.partialErrors"
        },
        "events": {
          "success": [
            {
              "name": "primaryWorkarea.reset"
            }
          ],
          "failure": [
            {
              "name": "primaryWorkarea.reset"
            }
          ]
        },
        "actionMessages": {
          "success": [
            {
              "message": "unFollowMultipleSubscriptionsSuccessfulMessage"
            }
          ],
          "failure": [
            {
              "message": "unFollowMultipleSubscriptionsFailureMessage"
            }
          ]
        }
      },
      "deleteSubscriptions": {
        "actionType": "TcSoaService",
        "serviceName": "Core-2006-03-DataManagement",
        "method": "deleteObjects",
        "inputData": {
          "objects": "{{ctx.mselected}}"
        },
        "outputData": {
          "unFollowPartialErrors": "partialErrors"
        },
        "events": {
          "success": [
            {
              "name": "primaryWorkarea.reset"
            }
          ],
          "failure": [
            {
              "name": "primaryWorkarea.reset"
            }
          ]
        },
        "actionMessages": {
          "success": [
            {
              "message": "unFollowMultipleSubscriptionsSuccessfulMessage"
            }
          ],
          "failure": [
            {
              "message": "unFollowMultipleSubscriptionsFailureMessage"
            }
          ]
        }
      },
      "openNotification": {
        "actionType": "Navigate",
        "navigateTo": "com_siemens_splm_clientfx_tcui_xrt_showObject",
        "navigationParams": {
          "uid": "{{commandContext.lineItem.object.uid}}"
        },
        "events": {
          "success": [
            {
              "name": "NotificationMessage.markRead"
            }
          ]
        }
      },
      "activateNotificationPanel": {
        "actionType": "JSFunction",
        "method": "show",
        "inputData": {
          "data": {
            "declView": "showAlert",
            "options": {
              "reference": "button[button-id='Awp0ShowAlertWithoutBubble'], button[button-id='Awp0ShowAlertWithBubble']",
              "detachMode": true,
              "resizeToClose": true,
              "whenParentScrolls": "close",
              "placement": "right-end",
              "hasArrow": true,
              "arrowOptions": {
                "alignment": "center",
                "shift": 5
              },
              "width": 300,
              "height": 300
            }
          }
        },
        "deps": "js/popupService"
      }
    },
    "onEvent": [
      {
        "eventId": "getFindSubscriptionsInputEvent",
        "action": "getFindSubscriptionsInput"
      },
      {
        "eventId": "Sub0DeleteSubscriptionDeleteCmdEvent",
        "action": "confirmSubscriptionDelete"
      },
      {
        "eventId": "confirmSingleSubscriptionDeleteEvent",
        "message": "confirmSingleDeleteMessage"
      },
      {
        "eventId": "confirmMultiSubscriptionDeleteEvent",
        "message": "confirmMultiDeleteMessage"
      },
      {
        "eventId": "listSubscriptions",
        "action": "listExistingSubscription"
      },
      {
        "eventId": "activateCreatePanel",
        "action": "loadCreatePanel"
      },
      {
        "eventId": "subscribeSingleObjectEvent",
        "action": "subscribeSingleObject"
      },
      {
        "eventId": "getCommonEventTypesEvent",
        "action": "getCommonEventTypes"
      },
      {
        "eventId": "subscribeMultiObjectEvent",
        "action": "subscribeMultiObject"
      },
      {
        "eventId": "unFollowMultipleSubscriptionsConfirmation",
        "message": "unFollowMultipleSubscriptionsConfirmationMessage"
      },
      {
        "eventId": "deleteSubscriptionsEvent",
        "action": "deleteSubscriptions"
      },
      {
        "eventId": "unsubscribeSubscriptionsEvent",
        "action": "unsubscribeSubscriptions"
      },
      {
        "eventId": "subscribeObjectEvent",
        "action": "subscribeObject"
      }
    ],
    "messages": {
      "confirmSingleDeleteMessage": {
        "messageType": "WARNING",
        "messageText": "{{i18n.deleteSingleConfirmation}}",
        "messageTextParams": [
          "{{ctx.selected.props.object_string.dbValues[0]}}"
        ],
        "navigationOptions": [
          {
            "option": "Cancel",
            "text": "{{i18n.cancel}}"
          },
          {
            "option": "Delete",
            "text": "{{i18n.delete}}",
            "action": "deleteObjects"
          }
        ]
      },
      "confirmMultiDeleteMessage": {
        "messageType": "WARNING",
        "messageText": "{{i18n.deleteMultipleConfirmation}}",
        "messageTextParams": [
          "{{ctx.mselected.length}}"
        ],
        "navigationOptions": [
          {
            "option": "Cancel",
            "text": "{{i18n.cancel}}"
          },
          {
            "option": "Delete",
            "text": "{{i18n.delete}}",
            "action": "deleteObjects"
          }
        ]
      },
      "deletedSuccessfulMessage": {
        "messageType": "INFO",
        "messageText": "{{i18n.deleteSuccessMsg}}",
        "messageTextParams": [
          "{{ctx.mselected.length}}",
          "{{ctx.mselected.length}}"
        ]
      },
      "deleteSingleFailure": {
        "messageType": "ERROR",
        "messageText": "{{i18n.deleteFailureMsg}}",
        "messageTextParams": [
          "{{ctx.mselected[0].props.object_string.uiValues[0]}}",
          "{{data.deletePartialErrors[0].errorValues[0].message}}"
        ]
      },
      "deleteMultipleFailure": {
        "expression": {
          "successCount": "ctx.mselected.length - data.deletePartialErrors.length"
        },
        "messageType": "ERROR",
        "messageKey": "deleteNotyError",
        "messageTextParams": [
          "{{expression.successCount}}",
          "{{ctx.mselected.length}}"
        ],
        "messageData": {
          "partialErrors": "{{data.deletePartialErrors}}"
        }
      },
      "NoEventsToSubscribe": {
        "messageType": "ERROR",
        "messageText": "{{i18n.noEventsToSubscribe}}"
      },
      "NoObjectsToFollowErrorMessage": {
        "messageType": "ERROR",
        "messageText": "{{i18n.createMultiObjectSubscriptionConfirmation}}",
        "messageTextParams": [
          "{{ctx.subscriptionCtx.subscribableObjects.uids.length}}",
          "{{ctx.mselected.length}}",
          "{{ctx.subscriptionCtx.error}}"
        ]
      },
      "confirmMultiObjectSubscriptionCreateEvent": {
        "messageType": "WARNING",
        "messageText": "{{i18n.createMultiObjectSubscriptionConfirmation}}",
        "messageTextParams": [
          "{{ctx.subscriptionCtx.subscribableObjects.uids.length}}",
          "{{ctx.mselected.length}}",
          "{{ctx.subscriptionCtx.error}}"
        ],
        "navigationOptions": [
          {
            "option": "Cancel",
            "text": "{{i18n.cancel}}"
          },
          {
            "option": "Proceed",
            "text": "{{i18n.proceed}}",
            "action": "getCommonEventTypes"
          }
        ]
      },
      "multiObjectSelectionLimitErrorMessage": {
        "messageType": "ERROR",
        "messageText": "{{i18n.multiObjectSelectionLimit}}",
        "messageTextParams": [
          "{{ctx.preferences.AWC_followMultiObject_max}}"
        ]
      },
      "invalidTargetErrorMessage": {
        "messageType": "ERROR",
        "messageText": "{{i18n.invalidTargetErrorMessage}}"
      },
      "unFollowMultipleSubscriptionsConfirmationMessage": {
        "messageType": "WARNING",
        "messageText": "{{i18n.unFollowMultipleSubscriptionsConfirmationMsg}}",
        "messageTextParams": [
          "{{ctx.mselected.length}}"
        ],
        "navigationOptions": [
          {
            "option": "Cancel",
            "text": "{{i18n.cancel}}"
          },
          {
            "option": "unFollow",
            "text": "{{i18n.unFollow}}",
            "action": "unFollowSubscriptions"
          }
        ]
      },
      "unFollowMultipleSubscriptionsFailureMessage": {
        "expression": {
          "successCount": "ctx.mselected.length - data.unFollowPartialErrors.length"
        },
        "messageType": "ERROR",
        "messageKey": "unFollowSubscriptionsError",
        "messageTextParams": [
          "{{expression.successCount}}",
          "{{ctx.mselected.length}}"
        ],
        "messageData": {
          "partialErrors": "{{data.unFollowPartialErrors}}"
        }
      },
      "unFollowMultipleSubscriptionsSuccessfulMessage": {
        "messageType": "INFO",
        "messageText": "{{i18n.unFollowMultipleSubscriptionsSuccessfulMsg}}",
        "messageTextParams": [
          "{{ctx.mselected.length}}",
          "{{ctx.mselected.length}}"
        ]
      }
    },
    "functions": {
      "getObjectOrTypes": {
        "functionName": "getObjectOrTypes",
        "parameters": [
          "{{ctx}}"
        ]
      }
    },
    "conditions": {
      "Sub0DeleteSubscriptionCommandCondition": {
        "expression": "ctx.visibleServerCommands.Sub0DeleteSubscription && ctx.selected.type==='ImanSubscription'"
      },
      "Sub0DeleteMessageCommandCondition": {
        "expression": "ctx.selected.type==='Fnd0Message'"
      },
      "subscriptionChangeOwnerCommandActiveCondition": {
        "expression": "ctx.selected.type==='ImanSubscription' && conditions.Awp0ChangeOwnerVisibleCondition"
      },
      "isEditing": {
        "expression": "ctx.editInProgress"
      },
      "isEditingAndNonSystemCriteriaSelected": {
        "expression": "ctx.editInProgress && ctx.selected.type === 'Sub0Criteria' && ( ( ctx.sub0Criteria.eventType !== '__Attach' && ctx.sub0Criteria.eventType !== '__Attained_Release_Status' && ctx.sub0Criteria.eventType !== '__Item_Rev_Create' ) || ctx.selected.criteriaId !== 1 )"
      },
      "isEditingAndNonSubscriberSelected": {
        "expression": "ctx.editInProgress && ctx.selected.type === 'Sub0Follower' && ctx.sub0Follower.subscriber!==ctx.selected.props.handler_parameters.dbValue"
      },
      "isEditingAndNotImanSubscriptionForDelete": {
        "expression": "ctx.editInProgress && ctx.sub0Criteria.eventType !== '__Delete'"
      },
      "isSub0RemoveFollowerCmdVisible": {
        "expression": "commandContext.dataProviders.followers_provider.selectedObjects.length> 0 && ctx.activeToolsAndInfoCommand.commandId !== 'Sub0TemporaryTransferNotification'"
      },
      "Sub0SubscribeCommandCondition": {
        "expression": "(conditions.isTcVersion116OrLater || (!conditions.isTcVersion116OrLater && ctx.mselected.length===1) ) && conditions.isFollowVisible && !conditions.isFollowSubLocation"
      },
      "isTcVersion116OrLater": {
        "expression": "(ctx.tcSessionData.tcMajorVersion > 11 || (ctx.tcSessionData.tcMajorVersion === 11 && (ctx.tcSessionData.tcMinorVersion > 2 || (ctx.tcSessionData.tcMinorVersion === 2 && ctx.tcSessionData.tcQRMNumber >= 7))))"
      },
      "isFollowVisible": {
        "expression": "ctx.visibleServerCommands.Sub0Subscribe || ctx.selected.modelType.typeHierarchyArray.indexOf( 'Awb0Element' ) > -1"
      },
      "Sub0SubscribeTypeCommandCondition": {
        "expression": "conditions.isFollowSubLocation"
      },
      "isFollowSubLocation": {
        "expression": "ctx.locationContext['ActiveWorkspace:SubLocation'] === 'com.siemens.splm.client.subscription.follow.Subscriptions'"
      },
      "isSub0SaveAsSelected": {
        "expression": "(ctx.selected.props.subscriber.uiValues[0] !== ctx.userSession.props.user.uiValues[0]) && ctx.selected.type=== 'ImanSubscription' && ctx.mselected.length === 1"
      },
      "isSub0TempTransferNotificationVisible": {
        "expression": "ctx.selected.type==='ImanSubscription' && ctx.visibleServerCommands.Sub0TemporaryTransferNotification"
      },
      "Sub0NewsFeedFiltersCmdCondition": {
        "expression": "(ctx.search.totalFound > 0 || ctx.search.criteria.searchString) && ctx.search.provider === 'Sub0NotificationProvider' && ctx.sublocation.clientScopeURI==='fnd0MySubscriptionMessages'"
      },
      "Sub0HideCommandForSubscription": {
        "expression": "ctx.selected.type === 'ImanSubscription' || ctx.pselected.type === 'ImanSubscription'"
      },
      "Sub0UnFollowSubscriptionCmdCondition": {
        "expression": "(conditions.isFollowSubLocation || conditions.isAddedAsFollowerSubLocation) && (ctx.mselected.length > 1 || ctx.selected.props.subscriber.dbValues[0] === ctx.userSession.props.user.dbValues[0] || ctx.selected.props.handler_parameters.dbValues.includes(ctx.userSession.props.user_id.dbValues[0]))"
      },
      "isAddedAsFollowerSubLocation": {
        "expression": "ctx.locationContext['ActiveWorkspace:SubLocation'] === 'com.siemens.splm.client.subscription.follow.FollowedSubscriptions'"
      },
      "isSub0PanelPinned": {
        "expression": "commandContext.pinnedToForm.dbValue"
      },
      "isSub0PanelUnPinned": {
        "expression": "commandContext.unpinnedToForm.dbValue"
      },
      "enableAlertWihBubbleCommand": {
        "expression": "ctx.unreadMessageCount>0 && ctx.preferences.AWS_Notifications_Polling_Interval && ctx.preferences.AWS_Notifications_Polling_Interval[0] > 0"
      },
      "enableAlertWihoutBubbleCommand": {
        "expression": "ctx.unreadMessageCount<=0 && ctx.preferences.AWS_Notifications_Polling_Interval && ctx.preferences.AWS_Notifications_Polling_Interval[0] > 0"
      },
      "enableOpenNotificationCommand": {
        "expression": "commandContext.group.groupName!=='DOCMGMT' &&  commandContext.group.groupName!=='REQ_MAN' && commandContext.group.groupName!=='COMPARE' && commandContext.group.groupName!=='CLONE_CONTENT_SUCCESSFUL'&& commandContext.group.groupName!=='TCSIM'&& commandContext.group.groupName!=='CONTMGMT' && commandContext.group.groupName!=='CBA' && commandContext.group.groupName!=='GENERATE_ROLLUP_REPORT_SUCCESS' && commandContext.group.groupName!=='BOM' && commandContext.group.groupName!=='ACTIVE_COLLABORATION' && commandContext.group.groupName!=='SOLUTION_VARIANT' && commandContext.group.groupName!=='MBM' "
      }
    },
    "i18n": {
      "addEventTitle": [
        "SubscriptionMessages"
      ],
      "removeEventTitle": [
        "SubscriptionMessages"
      ],
      "deleteMessagesTitle": [
        "SubscriptionMessages"
      ],
      "deleteSubscriptionsTitle": [
        "SubscriptionMessages"
      ],
      "deleteSuccessMsg": [
        "SubscriptionMessages"
      ],
      "deleteFailureMsg": [
        "SubscriptionMessages"
      ],
      "deleteSingleConfirmation": [
        "SubscriptionMessages"
      ],
      "deleteMultipleConfirmation": [
        "SubscriptionMessages"
      ],
      "cancel": [
        "SubscriptionMessages"
      ],
      "delete": [
        "SubscriptionMessages"
      ],
      "followCondAddText": [
        "SubscriptionMessages"
      ],
      "followCondEditText": [
        "SubscriptionMessages"
      ],
      "removeCriteriaText": [
        "SubscriptionMessages"
      ],
      "moveUpCriteriaText": [
        "SubscriptionMessages"
      ],
      "moveDownCriteriaText": [
        "SubscriptionMessages"
      ],
      "followTypeCommandTitle": [
        "SubscriptionMessages"
      ],
      "users": [
        "SubscriptionMessages"
      ],
      "addSubscriptionCmd": [
        "SubscriptionMessages"
      ],
      "removeFollowerCmd": [
        "SubscriptionMessages"
      ],
      "addFollowerCmd": [
        "SubscriptionMessages"
      ],
      "followCommandTitle": [
        "SubscriptionMessages"
      ],
      "open": [
        "SubscriptionMessages"
      ],
      "saveAsTitle": [
        "SubscriptionMessages"
      ],
      "transferNotification": [
        "SubscriptionMessages"
      ],
      "createMultiObjectSubscriptionConfirmation": [
        "SubscriptionMessages"
      ],
      "noEventsToSubscribe": [
        "SubscriptionMessages"
      ],
      "proceed": [
        "SubscriptionMessages"
      ],
      "nonSubscribableObjectMessage": [
        "SubscriptionMessages"
      ],
      "multiObjectSelectionLimit": [
        "SubscriptionMessages"
      ],
      "aw_eventAddCellCommandAction": [
        "SubscriptionMessages"
      ],
      "aw_eventRemoveCellCommandAction": [
        "SubscriptionMessages"
      ],
      "aw_newsfeedShowObjectCellCommandAction": [
        "SubscriptionMessages"
      ],
      "aw_subscriptionShowObjectCellCommandAction": [
        "SubscriptionMessages"
      ],
      "sub0_criteriaTableCommands": [
        "SubscriptionMessages"
      ],
      "sub0_addFollowerCommands": [
        "SubscriptionMessages"
      ],
      "sub0_addFollowerCustomPanelCommands": [
        "SubscriptionMessages"
      ],
      "sub0_addSubscriptionCommands": [
        "SubscriptionMessages"
      ],
      "searchFiltersTitle": [
        "SearchMessages"
      ],
      "unFollow": [
        "SubscriptionMessages"
      ],
      "unFollowMultipleSubscriptionsConfirmationMsg": [
        "SubscriptionMessages"
      ],
      "PinPanelCommandTitle": [
        "SubscriptionMessages"
      ],
      "UnPinPanelCommandTitle": [
        "SubscriptionMessages"
      ],
      "invalidTargetErrorMessage": [
        "SubscriptionMessages"
      ],
      "Sub0EventAddCellCmdDesc": [
        "SubscriptionMessages"
      ],
      "Sub0EventRemoveCellCmdDesc": [
        "SubscriptionMessages"
      ],
      "Sub0ShowObjectCellDesc": [
        "SubscriptionMessages"
      ],
      "Sub0SubscriptionShowObjectCellDesc": [
        "SubscriptionMessages"
      ],
      "Sub0DeleteMessageDesc": [
        "SubscriptionMessages"
      ],
      "Sub0AddCriteriaDesc": [
        "SubscriptionMessages"
      ],
      "Sub0EditCriteriaDesc": [
        "SubscriptionMessages"
      ],
      "Sub0MoveUpCriteriaDesc": [
        "SubscriptionMessages"
      ],
      "Sub0MoveDownCriteriaDesc": [
        "SubscriptionMessages"
      ],
      "Sub0TemporaryTransferNotificationDesc": [
        "SubscriptionMessages"
      ],
      "Sub0SubscribeTypeDesc": [
        "SubscriptionMessages"
      ],
      "Sub0AddFollowerDesc": [
        "SubscriptionMessages"
      ],
      "Sub0RemoveFollowerDesc": [
        "SubscriptionMessages"
      ],
      "Sub0AddFollowerTableDesc": [
        "SubscriptionMessages"
      ],
      "Sub0AddSubscriptionDesc": [
        "SubscriptionMessages"
      ],
      "Sub0SaveAsSubscriptionDesc": [
        "SubscriptionMessages"
      ],
      "Sub0NewsFeedFiltersDesc": [
        "SearchMessages"
      ],
      "Sub0SubscribeDesc": [
        "SubscriptionMessages"
      ],
      "Sub0RemoveCriteriaDesc": [
        "SubscriptionMessages"
      ],
      "Sub0UnFollowSubscriptionsDesc": [
        "SubscriptionMessages"
      ],
      "unFollowMultipleSubscriptionsSuccessfulMsg": [
        "SubscriptionMessages"
      ],
      "AlertCmdTitle": [
        "NotificationMessages"
      ],
      "aw_globalToolbar": [
        "NotificationMessages"
      ],
      "Awp0ShowAlertWithBubbleDesc": [
        "NotificationMessages"
      ],
      "Awp0ShowAlertWithoutBubbleDesc": [
        "NotificationMessages"
      ]
    },
    "preferences": [
      "AWS_Notifications_Polling_Interval"
    ]
  },
  "saveHandlers": [
    {
      "conditions": {
        "$and": [
          {
            "editInProgress": {
              "$eq": true
            }
          },
          {
            "$or": [
              {
                "selected.modelType.typeHierarchyArray": {
                  "$in": [
                    "ImanSubscription"
                  ]
                }
              },
              {
                "pselected.modelType.typeHierarchyArray": {
                  "$in": [
                    "ImanSubscription"
                  ]
                }
              },
              {
                "locationContext['ActiveWorkspace:SubLocation']": {
                  "$eq": "com.siemens.splm.client.subscription.follow.Subscriptions"
                }
              }
            ]
          }
        ]
      },
      "target": {
        "method": "getSaveHandler",
        "deps": "js/subscriptionService"
      }
    }
  ],
  "states": {
    "com_siemens_splm_client_subscription_follow_internal_MySubscriptionLocation": {
      "data": {
        "browserSubTitle": {
          "source": "/i18n/SubscriptionMessages",
          "key": "mySybscriptionsTitle"
        },
        "headerTitle": {
          "source": "/i18n/SubscriptionMessages",
          "key": "mySybscriptionsTitle"
        },
        "propertyPolicy": "/policies/subscriptionObjectPropertyPolicy.json"
      },
      "type": "location"
    },
    "com_siemens_splm_client_subscription_follow_NewsFeedSubscriptions": {
      "controller": "NewsFeedSubLocationCtrl",
      "data": {
        "breadcrumbConfig": {
          "type": "search",
          "vm": "newsFeedBreadCrumb",
          "noUpdate": true,
          "popuplist": "/html/defaultbreadcrumblist.html",
          "overflowIndex": 0,
          "inContentBoxNotActive": true
        },
        "priority": 0,
        "label": {
          "source": "/i18n/SubscriptionMessages",
          "key": "inboxNewsFeedTitle"
        },
        "clientScopeURI": "fnd0MySubscriptionMessages",
        "nameToken": "com.siemens.splm.client.subscription.follow.internal.myNewsFeedSubLocation",
        "context": {
          "search": {
            "provider": "Sub0NotificationProvider",
            "criteria": {
              "Fnd0Message": "*"
            },
            "sortType": "Alphabetical",
            "sortCriteria": [
              {
                "fieldName": "fnd0SentDate",
                "sortDirection": "DESC"
              }
            ],
            "maxToLoad": 50,
            "maxToReturn": 200,
            "tableViewProperties": [
              "fnd0Subject",
              "fnd0TargetObject",
              "fnd0SentDate",
              "fnd0Priority",
              "fnd0EventType"
            ]
          }
        },
        "viewBase": "newsFeed"
      },
      "dependencies": [
        "js/aw.newsfeed.sublocation.controller"
      ],
      "params": {
        "userId": null,
        "searchCriteria": null,
        "filter": null
      },
      "templateUrl": "/html/aw.native.sublocation.html",
      "parent": "com_siemens_splm_client_subscription_follow_internal_MySubscriptionLocation",
      "type": "subLocation",
      "url": "/com.siemens.splm.client.subscription.follow.NewsFeedSubscriptions"
    },
    "com_siemens_splm_client_subscription_follow_Subscriptions": {
      "data": {
        "priority": 1,
        "label": {
          "source": "/i18n/SubscriptionMessages",
          "key": "mySubscriptionFollowingSubLocationTitle"
        },
        "clientScopeURI": "fnd0MySubscriptions",
        "nameToken": "com.siemens.splm.client.subscription.follow.internal.xrt.mySubscriptionsSubLocation",
        "context": {
          "search": {
            "provider": "Sub0SubscriptionProvider",
            "criteria": {
              "ImanSubscription": "MySubscriptions"
            },
            "sortType": "Alphabetical",
            "sortCriteria": [
              {
                "fieldName": "fnd0Name",
                "sortDirection": "ASC"
              }
            ],
            "maxToLoad": 50,
            "maxToReturn": 200,
            "tableViewProperties": [
              "fnd0Name",
              "target",
              "event_type",
              "expiration_date",
              "fnd0Frequency",
              "fnd0Priority",
              "fnd0IsActive"
            ]
          }
        },
        "viewBase": "subscription",
        "viewModes": {
          "SummaryView": {
            "primaryWorkArea": "list",
            "secondaryWorkArea": true
          },
          "TableSummaryView": {
            "primaryWorkArea": "table",
            "secondaryWorkArea": true
          }
        }
      },
      "parent": "com_siemens_splm_client_subscription_follow_internal_MySubscriptionLocation",
      "type": "subLocation",
      "url": "/com.siemens.splm.client.subscription.follow.Subscriptions"
    },
    "com_siemens_splm_client_subscription_follow_FollowedSubscriptions": {
      "data": {
        "priority": 2,
        "label": {
          "source": "/i18n/SubscriptionMessages",
          "key": "mySubscriptionAddedAsFollowersSubLocationTitle"
        },
        "clientScopeURI": "Sub0FollowedSubscriptions",
        "nameToken": "com.siemens.splm.client.subscription.follow.internal.xrt.mySubscriptionsSubLocation",
        "context": {
          "search": {
            "provider": "Sub0SubscriptionProvider",
            "criteria": {
              "ImanSubscription": "AddedAsFollowers"
            },
            "sortType": "Alphabetical",
            "sortCriteria": [
              {
                "fieldName": "fnd0Name",
                "sortDirection": "ASC"
              }
            ],
            "maxToLoad": 50,
            "maxToReturn": 200,
            "tableViewProperties": [
              "fnd0Name",
              "target",
              "event_type",
              "subscriber",
              "expiration_date",
              "fnd0Frequency",
              "fnd0Priority",
              "fnd0IsActive"
            ]
          }
        },
        "viewBase": "subscription",
        "viewModes": {
          "SummaryView": {
            "primaryWorkArea": "list",
            "secondaryWorkArea": true
          },
          "TableSummaryView": {
            "primaryWorkArea": "table",
            "secondaryWorkArea": true
          }
        }
      },
      "parent": "com_siemens_splm_client_subscription_follow_internal_MySubscriptionLocation",
      "type": "subLocation",
      "url": "/com.siemens.splm.client.subscription.follow.FollowedSubscriptions"
    }
  },
  "typeIconsRegistry": [
    {
      "type": {
        "names": [
          "ImanSubscription"
        ],
        "prop": {
          "names": [
            "target"
          ],
          "type": {
            "names": [
              "BusinessObject"
            ]
          }
        }
      }
    },
    {
      "type": {
        "names": [
          "Fnd0Message"
        ],
        "prop": {
          "names": [
            "fnd0TargetObject"
          ],
          "type": {
            "names": [
              "BusinessObject"
            ]
          }
        }
      }
    }
  ],
  "typeProperties": {
    "typeProperties": {
      "ImanSubscription": {
        "displayProperty": "object_string",
        "additionalProperties": [
          {
            "name": "subscriber"
          },
          {
            "name": "is_modifiable"
          },
          {
            "name": "fnd0EventHandlers",
            "modifiers": [
              {
                "name": "withProperties",
                "Value": "true"
              }
            ]
          },
          {
            "name": "notification",
            "modifiers": [
              {
                "name": "withProperties",
                "Value": "true"
              }
            ]
          },
          {
            "name": "event_handler",
            "modifiers": [
              {
                "name": "withProperties",
                "Value": "true"
              }
            ]
          },
          {
            "name": "fnd0Condition"
          },
          {
            "name": "target"
          },
          {
            "name": "attribute_names"
          },
          {
            "name": "attribute_values"
          },
          {
            "name": "logic_operators"
          },
          {
            "name": "math_operators"
          },
          {
            "name": "handler_parameters"
          }
        ]
      },
      "Fnd0NotificationTemplate": {
        "additionalProperties": [
          {
            "name": "subject"
          },
          {
            "name": "message"
          },
          {
            "name": "properties"
          }
        ]
      },
      "ImanActionHandler": {
        "additionalProperties": [
          {
            "name": "handler_id"
          }
        ]
      },
      "ImanEventType": {
        "additionalProperties": [
          {
            "name": "eventtype_id"
          },
          {
            "name": "fnd0eventtype_name"
          }
        ]
      },
      "Fnd0Message": {
        "additionalProperties": [
          {
            "name": "fnd0TargetObject"
          }
        ]
      }
    }
  },
  "bootstrap": {
    "postInit": [
      "import('js/eventBus').then(function(eventBus){eventBus.subscribe('sessionInfo.updated',function(){import('js/notification.polling.service').then(function(notificationPollingService){notificationPollingService.init();});});});"
    ]
  }
}
