{
    "schemaVersion": "1.0.0",
    "imports": 
    [      
        "js/aw-panel-section.directive",
        "js/aw-panel-body.directive",
        "js/aw-panel-footer.directive",
        "js/aw-listbox.directive",
        "js/aw-list.directive",
        "js/aw-button.directive",
        "js/aw-i18n.directive",
        "js/aw-date.directive",
        "js/visible-when.directive",
        "js/aw-command-panel-section.directive",
          "js/aw-changeowner-cell.directive"
    ],
    "actions": 
    {
        "isValidtoTranserNotification":
        {
            "actionType": "JSFunction",
            "method": "validateInputDates",
            "deps": "js/Sub0TempTransferNotificationService",
            "inputData": {
                "data" : "{{data}}"
            },
            "outputData": {
                "isValidInputDates": ""
            },
            "events": {
                "success": [ {
                    "name": "transferNotify.performTransferNotification",
                    "condition":"data.isValidInputDates"
                },
                {
                    "name": "transferNotify.showInvalidDateMessage",
                    "condition":"!data.isValidInputDates"
                } ]
            }
        },
        "transferNotification":
        {
            "actionType": "TcSoaService",
             "serviceName": "Internal-Notification-2015-03-SubscriptionManagement",
             "method": "transferNotifications",
             "deps":"js/Sub0TempTransferNotificationService",         
             "inputData": {
              "input": {
                "subscriptions": "{{ctx.mselected}}",
                 "notifier":
                    {
                        "type":"{{data.dataProviders.followers_provider.viewModelCollection.loadedVMObjects[0].props.user.referenceTypeName}}",
                        "uid":"{{data.dataProviders.followers_provider.viewModelCollection.loadedVMObjects[0].props.user.dbValue}}"
                    },
                "notificationDateRange": {
                    "fromDate": "{{function:getStartDate}}",
                    "toDate": "{{function:getEndDate}}"
                    }
                }
             },
             "outputData":
             {
                "transferNotificationPartialErrors":"ServiceData.partialErrors"
             },
             "events":
            {
              "success":
              [
                {
                    "name": "primaryWorkarea.reset"
                },
                {
                    "name": "complete",
                    "eventData": 
                    {
                        "source": "toolAndInfoPanel"
                    }
                }
              ],
              "failure":
              [
                {
                    "name": "primaryWorkarea.reset"
                },
                {
                    "name": "complete",
                    "eventData": 
                    {
                        "source": "toolAndInfoPanel"
                    }
                }
              ]
            },
            "actionMessages":
            {
                "failure": 
                 [
                    {
                        "message": "failureTemporaryTransferNotification",
                        "condition": "(ctx.mselected && ctx.mselected.length === 1)"
                        
                    }
                ],
                "success": 
                [   
                    {
                        "message": "successfulTemporaryTransferNotification",
                        "condition": "(ctx.mselected && ctx.mselected.length === 1)"                        
                    }
                ]
            }
        }
    },
    "messages": 
    {
        "successfulTemporaryTransferNotification":
        {
            "messageType": "INFO",
            "messageText": "{{i18n.successfulTransferNotification}}",
            "messageTextParams": [
                "{{ctx.selected.props.object_string.dbValues[0]}}",
                "{{data.dataProviders.followers_provider.viewModelCollection.loadedVMObjects[0].props.user.uiValues[0]}}"
            ]
        },
        "failureTemporaryTransferNotification":
        {
            "messageType": "ERROR",
            "messageText": "{{i18n.errorTransferNotification}}",
            "messageTextParams": [
                "{{ctx.selected.props.object_string.dbValues[0]}}",
                "{{data.dataProviders.followers_provider.viewModelCollection.loadedVMObjects[0].props.user.uiValues[0]}}"
            ]
        },
        "showInvalidDateMessage":
        {
            "messageType": "ERROR",
            "messageText": "{{i18n.invalidDateRange}}"
        }
    },
    "data": 
    {
        "sub0startDate": 
        {
            "displayName": "{{i18n.startDateText}}",
            "type": "DATE",
            "isRequired": "true",
            "labelPosition": "PROPERTY_LABEL_AT_TOP"
        },
        "sub0endDate": 
        {
            "displayName": "{{i18n.endDateText}}",
            "type": "DATE",
            "isRequired": "true",
            "labelPosition": "PROPERTY_LABEL_AT_TOP"
        },
         "addFollowersCommand":"sub0_addFollowerCommands"
    },
    "dataProviders": {
     "followers_provider":
      {
         "response": "{{data.addedObject.dbValues[0]}}",
         "totalFound": "{{data.addedObject.dbValues[0].length}}",
         "selectionModelMode": "single"
      }
   },
    "functions": {
        "getStartDate":
        {
              "functionName": "getStartDate",
            "parameters": [ "{{data}}" ]
        },
        "getEndDate":
        {
            "functionName": "getEndDate",
            "parameters": [ "{{data}}" ]
        }
    },
    "conditions": 
    {
        "isValidToDoTransfer":
        {
            "expression":"data.sub0startDate.uiValue.length > 0 && data.sub0endDate.uiValue.length > 0 && data.dataProviders.followers_provider.viewModelCollection.totalFound > 0"
        }
    },
    "onEvent": [
        {
             "eventId":"transferNotify.performTransferNotification",
             "action":"transferNotification"
        },
        {
             "eventId":"transferNotify.showInvalidDateMessage",
             "message":"showInvalidDateMessage"
        }
    ],
    "i18n": 
    {
        "startDateText": ["SubscriptionMessages"], 
        "endDateText": ["SubscriptionMessages"],
        "transferButtonTitle": ["SubscriptionMessages"],
        "temporaryNotifier": ["SubscriptionMessages"],
        "transferNotification":["SubscriptionMessages"],
         "EmailAddress": [ "SubscriptionMessages" ],
         "PhoneNumber": [ "SubscriptionMessages" ],
         "successfulTransferNotification": [ "SubscriptionMessages" ],
         "errorTransferNotification": [ "SubscriptionMessages" ],
         "invalidDateRange":["SubscriptionMessages"]
    }
}
