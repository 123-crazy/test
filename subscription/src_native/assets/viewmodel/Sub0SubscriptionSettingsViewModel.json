{
   "schemaVersion" : "1.0.0",
   "imports":
    [
        "js/aw-panel-body.directive",
        "js/aw-checkbox.directive",
        "js/aw-listbox.directive",
        "js/aw-panel-section.directive",
        "js/aw-panel.directive",
        "js/aw-widget.directive",
        "js/aw-label.directive",
        "js/aw-property-label.directive"
    ],
    "onEvent": [
        {
            "eventId": "editHandlerStateChange",
            "condition": "state === 'saved' && data.newsfeedPurgeThreshold.dbValue!==ctx.preferences.SCM_newsfeed_purge_threshold[0]",
            "action": "setNewsfeedPurgeThreshold"
        },
        {
            "eventId": "editHandlerStateChange",
            "condition": "state === 'canceling'",
            "action": "resetNewsfeedPurgeThreshold"
        }
    ],
    "actions":
    {
        "reveal":
        {
            "actionType": "JSFunction",
            "method": "loadPreference",
            "inputData":
            {
                "data": "{{data}}"
            },
            "deps": "js/aw.subscription.settings.service"
        },
        "notificationModeUpdated": {
           "actionType": "JSFunction",
            "method": "notificationModeUpdated",
            "inputData":
            {
                "data": "{{data}}"
            },
            "deps": "js/aw.subscription.settings.service"
        },
        "usePeriodicDigestClick": {
            "actionType": "JSFunction",
            "method": "usePeriodicDigestClick",
            "inputData":
            {
                "data": "{{data}}"
            },
            "deps": "js/aw.subscription.settings.service"
        },
        "setNewsfeedPurgeThreshold": {
            "actionType": "JSFunction",
            "method": "setNewsFeedPurgeThreshold",
            "inputData":
            {
                "data": "{{data}}"
            },
            "actionMessages":
            {
                "success":
                [
                    {
                        "condition":"data.newsfeedPurgeError!==''",
                        "message": "invalidValueInfoMessage"
                    }
                ]
            },
            "deps": "js/aw.subscription.settings.service"
        },
        "resetNewsfeedPurgeThreshold": {
            "actionType": "JSFunction",
            "method": "resetNewsFeedPurgeThreshold",
            "inputData":
            {
                "data": "{{data}}"
            },
            "deps": "js/aw.subscription.settings.service"
        }
    },
    "preferences":
    [
        "SCM_notification_mode",
        "SCM_notification_digest"
    ],
    "data":
    {
        "usePeriodicDigest":
        {
            "displayName": "{{i18n.usePeriodicDigestLabel}}",
            "type": "BOOLEAN",
            "isRequired": "true",
            "isEditable": "true",
            "labelPosition": "PROPERTY_LABEL_AT_RIGHT"
        },
        "notificationModes":
        {
            "displayName": "{{i18n.notificationMethodTitle}}",
            "type": "STRING",
            "hasLov": true,
            "dbValue":"{{ctx.preferences.SCM_notification_mode[0]}}"
        },
        "notificationModeValues":
        {
            "type": "STRING",
            "dbValue":
            [
                {"propDisplayValue" :"{{i18n.emailNotificationText}}","dispValue" :"{{i18n.emailNotificationText}}", "propInternalValue" : "1"},
                {"propDisplayValue" :"{{i18n.newsfeedNotificationText}}", "dispValue" :"{{i18n.newsfeedNotificationText}}", "propInternalValue" : "2"},
                {"propDisplayValue" :"{{i18n.allNotificationsText}}", "dispValue" :"{{i18n.allNotificationsText}}", "propInternalValue" : "3"}
            ]
        },
        "newsfeedPurgeThreshold":{
            "displayName": "{{i18n.newsfeedPurgeThresholdTitle}}",
            "type": "INTEGER",
            "isRequired": "false",
            "labelPosition": "PROPERTY_LABEL_AT_TOP",
            "dbValue":"{{ctx.preferences.SCM_newsfeed_purge_threshold[0]}}",
            "dispValue":"{{ctx.preferences.SCM_newsfeed_purge_threshold[0]}}",
            "validationCriteria": [
                {
                    "condition": "conditions.invalidRetainNewsfeedThreshold",
                    "value": "{{i18n.invalidRetainNewsfeedThreshold}}"
                }
            ]
        },
        "newsfeedPurgeErrorProp":{
            "displayName": "{{i18n.newsfeedPurgeThresholdTitle}}",
            "type": "STRING",
            "isRequired": "false",
            "dbValue":"{{i18n.invalidConfigurationValueLabel}}",
            "dispValue":"{{i18n.invalidConfigurationValueLabel}}"
        }
    },
    "messages": {
        "invalidValueInfoMessage": {
            "messageType": "INFO",
            "messageText": "{{i18n.invalidValueInfoMessage}}"
        }
    },
    "conditions":
    {
        "isNewsfeedPurgeAvailable":
        {
            "expression": "ctx.preferences.SCM_newsfeed_purge_threshold"
        },
        "invalidRetainNewsfeedThreshold": {
            "expression": "data.newsfeedPurgeThreshold.dbValue<0"
        }
    },
    "i18n" :
    {
        "mySybscriptionsTitle":["SubscriptionMessages"],
        "usePeriodicDigestLabel" :["SubscriptionMessages"],
        "emailNotificationText" :["SubscriptionMessages"],
        "newsfeedNotificationText" :["SubscriptionMessages"],
        "allNotificationsText" :["SubscriptionMessages"],
        "notificationMethodTitle":["SubscriptionMessages"],
        "newsfeedPurgeThresholdTitle":["SubscriptionMessages"],
        "invalidRetainNewsfeedThreshold":["SubscriptionMessages"],
        "invalidValueInfoMessage":["SubscriptionMessages"],
        "invalidConfigurationValueLabel":["SubscriptionMessages"],
        "keepAlwaysValueLabel":["SubscriptionMessages"]
    }
}
