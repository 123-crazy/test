{
  "name": "capa",
  "description": "",
  "type": [
    "native"
  ],
  "srcDir": "src_native",
  "pathOffset": ".",
  "skipAudit": true,
  "skipTest": true,
  "version": "6.1.6",
  "author": "Siemens Product Lifecycle Management Software Inc.",
  "themeExtensions": [
    "_capaTheme"
  ],
  "aliasRegistry": {
    "typeDefectiveObject48": [
      "CAW0Defect"
    ],
    "typeIshikawaObject48": [
      "CAW0Ishikawa"
    ],
    "typeFiveWhy48": [
      "CAW05Why"
    ]
  },
  "commandsViewModel": {
    "commands": {
      "CAW0EditCorrectionAction": {
        "iconId": "cmdEdit",
        "isGroup": false,
        "title": "{{i18n.Awp0StartEditTitle}}"
      },
      "CAW0AssignResponsibleUser": {
        "iconId": "cmdAssignTask",
        "title": "{{i18n.cawAssignResponsibleUser}}",
        "description": "{{i18n.CAW0AssignResponsibleUserDesc}}"
      },
      "CAW0AddCauseGroup": {
        "iconId": "cmdIshikawaCauseGroup",
        "title": "{{i18n.cawAddCauseGroup}}",
        "description": "{{i18n.CAW0AddCauseGroupDesc}}"
      },
      "showRootCauseCommand": {
        "iconId": "cmdApply",
        "title": "{{i18n.markNewDefectCommandTitle}}",
        "description": "{{i18n.showRootCauseCommandDesc}}"
      },
      "showRootCauseCommandRP": {
        "iconId": "cmdApply",
        "title": "{{i18n.markNewDefectCommandTitle}}",
        "description": "{{i18n.showRootCauseCommandDesc}}"
      },
      "showRemoveRootCauseCommand": {
        "iconId": "cmdRemove",
        "title": "{{i18n.showRemoveRootCauseCommandTitle}}",
        "description": "{{i18n.showRemoveRootCauseCommandTitleDesc}}"
      },
      "showRemoveRootCauseCommandRP": {
        "iconId": "cmdRemove",
        "title": "{{i18n.showRemoveRootCauseCommandTitle}}",
        "description": "{{i18n.showRemoveRootCauseCommandTitleDesc}}"
      },
      "CAW0AddDefectInPD": {
        "iconId": "cmdAdd",
        "title": "{{i18n.caw0add}}",
        "description": "{{i18n.CAW0AddDefectInPDDesc}}"
      },
      "CAW0AddRootCause": {
        "iconId": "cmdAddDefect",
        "title": "{{i18n.caw0defect}}",
        "description": "{{i18n.CAW0AddRootCauseDesc}}"
      },
      "CAW0Add5Why": {
        "iconId": "cmdAddFiveWhy",
        "title": "{{i18n.caw05why}}",
        "description": "{{i18n.CAW0Add5WhyDesc}}"
      },
      "CAW0AddWhy": {
        "iconId": "cmdAddQuestion",
        "title": "{{i18n.caw0why}}",
        "description": "{{i18n.CAW0AddWhyDesc}}"
      },
      "CAW0AddIshikawa": {
        "iconId": "cmdAddIshikawa",
        "title": "{{i18n.caw0Ishikawa}}",
        "description": "{{i18n.CAW0AddIshikawaDesc}}"
      },
      "CAW0AddCause": {
        "iconId": "cmdAddIshikawaCause",
        "title": "{{i18n.caw0Cause}}",
        "description": "{{i18n.CAW0AddCauseDesc}}"
      },
      "CAW0AddFailureToDefect": {
        "iconId": "cmdAdd",
        "title": "{{i18n.caw0addFailureSpec}}",
        "description": "{{i18n.CAW0AddFailureToDefectDesc}}"
      },
      "CAW0AddItemToDefect": {
        "iconId": "cmdAdd",
        "title": "{{i18n.caw0add}}",
        "description": "{{i18n.caw0AddDefectiveItemDesc}}"
      },
      "CAW0ReplaceFailureToDefect": {
        "iconId": "cmdReplace",
        "title": "{{i18n.caw0replace}}",
        "description": "{{i18n.CAW0ReplaceFailureToDefectDesc}}"
      },
      "CAW0ReplaceitemToDefect": {
        "iconId": "cmdReplace",
        "title": "{{i18n.caw0replace}}",
        "description": "{{i18n.cawReplaceDefectiveItemDesc}}"
      },
      "CAW0SetPinWhy": {
        "iconId": "cmdPin",
        "isGroup": false,
        "title": "{{i18n.psi0PinButtonToolTip}}",
        "description": "{{i18n.panelPinButtonDesc}}"
      },
      "CAW0SetUnPinWhy": {
        "iconId": "cmdUnpin",
        "isGroup": false,
        "title": "{{i18n.psi0UnpinButtonToolTip}}",
        "description": "{{i18n.panelUnPinButtonDesc}}"
      },
      "CAW0InContextReports": {
        "iconId": "cmdGenerateReport",
        "title": "{{i18n.inContextCommandName}}"
      },
      "CAW0AddDefectToIssue": {
        "iconId": "cmdAdd",
        "title": "{{i18n.caw0add}}",
        "description": "{{i18n.CAW0AddDefectToIssueDesc}}"
      },
      "CAW0SaveAs": {
        "iconId": "cmdSaveAs",
        "title": "{{i18n.caw0SaveAs}}",
        "description": "{{i18n.CAW0SaveAsDesc}}"
      },
      "CAW0AddSymptomDefectInDrive": {
        "iconId": "cmdAdd",
        "title": "{{i18n.caw0AddSymptomDefect}}",
        "isGroup": false
      },
      "CAW0RemoveSymptomDefectCell": {
        "iconId": "cmdRemove",
        "isGroup": false,
        "title": "{{i18n.caw0SymptomDefectTitle}}"
      },
      "CAW0SaveGraphPrintView": {
        "iconId": "cmdSave",
        "title": "{{i18n.savePrintViewTitle}}"
      },
      "CAW0PrintGraphView": {
        "iconId": "cmdPrint",
        "title": "{{i18n.saveGraphViewTitle}}"
      },
      "CAW0AddFailureToDefectCreate": {
        "iconId": "cmdAdd",
        "title": "{{i18n.caw0addFailureSpec}}",
        "description": "{{i18n.CAW0AddFailureToDefectDesc}}"
      },
      "CAW0RemoveFailureCell": {
        "iconId": "cmdRemove",
        "isGroup": false,
        "title": "{{i18n.caw0removeFailureTitle}}"
      },
      "Caw0CreateScheduleInPSP": {
        "iconId": "cmdCreateSchedule",
        "isGroup": false,
        "title": "{{i18n.createScheduleTitle}}",
        "description": "{{i18n.Csi1CreateScheduleInPlanItemsDesc}}"
      },
      "Caw0CreateScheduleFromTemplateInPSP": {
        "iconId": "cmdCreateSchedule",
        "title": "{{i18n.createScheduleFromTemplateTitle}}",
        "description": "{{i18n.Saw1CreateScheduleFromTemplateDesc}}"
      },
      "Caw0CreateScheduleGroup": {
        "iconId": "cmdAdd",
        "isGroup": true,
        "title": "{{i18n.Awp0AddObjectTitle}}"
      },
      "CAW0objectSetViewModeGroup": {
        "isShuttle": true
      },
      "CAW0objectSetTableViewMode": {
        "iconId": "cmdTableView",
        "title": "{{i18n.showTableViewText}}",
        "description": "{{i18n.Awp0ShowTableViewDesc}}"
      },
      "CAW0objectSetCompareViewMode": {
        "iconId": "cmdCompareView",
        "title": "{{i18n.compareTitle}}",
        "description": "{{i18n.objectSetCompareViewModeDesc}}"
      },
      "CAW0ChangeFiltersGroup": {
        "iconId": "cmdfilter",
        "isGroup": true
      },
      "CAW0showCommonProbItem": {
        "title": "{{i18n.commonProbTitle}}"
      },
      "CAW0showCommonFailure": {
        "title": "{{i18n.commonFailureTitle}}"
      },
      "CAW0ExportToExcel": {
        "iconId": "cmdExport",
        "title": "{{i18n.Awp0ExportToExcelTitle}}",
        "description": "{{i18n.Awp0ExportToExcelDesc}}"
      },
      "caw0RemoveParticipantForEstTeam": {
        "iconId": "cmdRemove",
        "isGroup": false,
        "title": "{{i18n.RemoveParticipant}}",
        "description": "{{i18n.Awp0RemoveParticipantDesc}}"
      },
      "caw0RemoveParticipantForCapaOwner": {
        "iconId": "cmdRemove",
        "isGroup": false,
        "title": "{{i18n.RemoveParticipant}}",
        "description": "{{i18n.Awp0RemoveParticipantDesc}}"
      },
      "caw0RemoveParticipantForCapaApprover": {
        "iconId": "cmdRemove",
        "isGroup": false,
        "title": "{{i18n.RemoveParticipant}}",
        "description": "{{i18n.Awp0RemoveParticipantDesc}}"
      },
      "caw0RemoveParticipantForCapaSupplier": {
        "iconId": "cmdRemove",
        "isGroup": false,
        "title": "{{i18n.RemoveParticipant}}",
        "description": "{{i18n.Awp0RemoveParticipantDesc}}"
      },
      "caw0RemoveParticipantForChangeContributor": {
        "iconId": "cmdRemove",
        "isGroup": false,
        "title": "{{i18n.RemoveParticipant}}",
        "description": "{{i18n.Awp0RemoveParticipantDesc}}"
      },
      "CAW0addLinkToRC": {
        "iconId": "cmdLinkToChangeNotice",
        "title": "{{i18n.Caw0LinkToRC}}"
      },
      "CAW0UnlinkToRC": {
        "iconId": "cmdUnlink",
        "title": "{{i18n.Caw0UnlinkToRC}}"
      },
      "CAW0FullScreen": {
        "iconId": "cmdFullScreen",
        "isGroup": false,
        "title": "{{i18n.taskbarFullScreen}}"
      },
      "CAW0PasteCOE": {
        "iconId": "cmdPaste",
        "isGroup": false,
        "title": "{{i18n.paste}}",
        "extendedTooltip": {
          "view": "extendedTooltipDefault"
        }
      },
      "Caw0ExpandOut": {
        "iconId": "cmdShowOutgoingRelations",
        "isGroup": false,
        "title": "{{i18n.outgoing}}"
      },
      "CAW0SearchVendorTableData": {
        "iconId": "cmdAdd",
        "title": "{{i18n.Awp0AddObjectTitle}}",
        "description": "{{i18n.caw0addVendorDesc}}"
      },
      "CAW0RemoveVendorTableData": {
        "iconId": "cmdRemove",
        "isGroup": false,
        "title": "{{i18n.caw0RemoveObjectTitle}}",
        "description": "{{i18n.caw0RemoveToolTipDesc}}"
      },
      "CAW0RemoveProjectPlanTableData": {
        "iconId": "cmdRemove",
        "isGroup": false,
        "title": "{{i18n.caw0RemoveObjectTitle}}",
        "description": "{{i18n.caw0RemoveToolTipDesc}}"
      },
      "CAW0RemoveEventPlanTableData": {
        "iconId": "cmdRemove",
        "isGroup": false,
        "title": "{{i18n.caw0RemoveObjectTitle}}",
        "description": "{{i18n.caw0RemoveToolTipDesc}}"
      },
      "CAW0AddTemplateSectionCmd": {
        "iconId": "cmdAdd",
        "isGroup": false,
        "title": "{{i18n.Add}}"
      },
      "CAW0RemoveTemplateSectionCmd": {
        "iconId": "cmdRemove",
        "isGroup": false,
        "title": "{{i18n.saw1remove}}"
      },
      "CAW0AddReportToPSPDashboardCmd": {
        "iconId": "cmdAdd",
        "title": "{{i18n.addReportToDashboard}}",
        "description": "{{i18n.caw0AddReportTooltip}}"
      }
    },
    "commandHandlers": {
      "CAW0FullScreenHandler": {
        "id": "CAW0FullScreen",
        "action": "caw0FullViewModelAction",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.Caw0FullScreenCmdCondition"
        }
      },
      "CAW0Awp0ExportToExcelCommandHandler": {
        "id": "Awp0ExportToExcel",
        "action": "activateExportToExcelPanel",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.whenToShowExportToExcel"
        }
      },
      "CAW0BriefcaseCheckOutDelegate": {
        "id": "Awp0BriefcaseCheckout",
        "activeWhen": {
          "condition": "conditions.CAW0DisableRHTCmdsForClosedIssueAndPSPCondition"
        },
        "visibleWhen": false
      },
      "CAW0ExportToBriefcaseDelegate": {
        "id": "exportToBriefcaseCommand",
        "activeWhen": {
          "condition": "conditions.isUserOnProblemSolving"
        },
        "visibleWhen": false
      },
      "CAW0MarkAndSuspectDelegate": {
        "id": "Arm0MarkAndSuspect",
        "activeWhen": {
          "condition": "conditions.isUserOnProblemSolving"
        },
        "visibleWhen": false
      },
      "CAW0CreateValidationRequestDelegate": {
        "id": "Crt1CreateValidationContract",
        "activeWhen": {
          "condition": "conditions.isUserOnProblemSolving"
        },
        "visibleWhen": false
      },
      "CAW0CreateCoDesignDelegate": {
        "id": "Eda1NewCollaboration",
        "activeWhen": {
          "condition": "conditions.isUserOnProblemSolving"
        },
        "visibleWhen": false
      },
      "CAW0CreateAliasIdDelegate": {
        "id": "Awp0CreateAliasId",
        "activeWhen": {
          "condition": "conditions.isUserOnProblemSolving"
        },
        "visibleWhen": false
      },
      "CAW0OpenInSolidEdgeDelegate": {
        "id": "Awp0OpenInSEEC",
        "activeWhen": {
          "condition": "conditions.isUserOnProblemSolving"
        },
        "visibleWhen": false
      },
      "CAW0OpenInNXDelegate": {
        "id": "Awn0OpenNxTcXml",
        "activeWhen": {
          "condition": "conditions.isUserOnIssueRevision"
        },
        "visibleWhen": true
      },
      "CAW0OpenInRACDelegate": {
        "id": "Awp0OpenInRAC",
        "activeWhen": {
          "condition": "conditions.isUserOnProblemSolving"
        },
        "visibleWhen": false
      },
      "CAW0OpenInVisualizationDelegate": {
        "id": "Awp0OpenVVI",
        "activeWhen": {
          "condition": "conditions.isUserOnIssueRevision"
        },
        "visibleWhen": true
      },
      "CAW0OpenInIllustratorDelegate": {
        "id": "openInIllustrator",
        "activeWhen": {
          "condition": "conditions.isUserOnProblemSolving"
        },
        "visibleWhen": false
      },
      "CAW0EditReportDelegate": {
        "id": "Awp0StartEdit",
        "activeWhen": {
          "condition": "conditions.isUserOnReportTab"
        },
        "visibleWhen": false
      },
      "CAW0DeleteReportDelegate": {
        "id": "Awp0Delete",
        "activeWhen": {
          "condition": "conditions.isUserOnReportTab"
        },
        "visibleWhen": false
      },
      "CAW0RemoveParticipantsDelegate": {
        "id": "Awp0RemoveParticipant",
        "activeWhen": {
          "condition": "conditions.isUserOnTeamSublocation"
        },
        "visibleWhen": false
      },
      "CAW0EditCorrectionActionHandler": {
        "id": "CAW0EditCorrectionAction",
        "action": "objectEditActionCOE",
        "activeWhen": {
          "condition": "conditions.isCorrectiveActionPageWithNone"
        },
        "visibleWhen": {
          "condition": "conditions.isCorrectiveActionPageWithNone"
        }
      },
      "CAW0Delete5WhyActionHandler": {
        "id": "Awp0Delete",
        "action": "delete5Why",
        "activeWhen": {
          "condition": "conditions.is5WhyDeleting"
        },
        "visibleWhen": {
          "condition": "conditions.is5WhyDeleting"
        },
        "enableWhen": {
          "condition": "conditions.CAW0EnableDeleteCmdForDefectCondition"
        }
      },
      "CAW0DeleteWhyActionHandler": {
        "id": "Awp0Delete",
        "action": "deleteWhy",
        "activeWhen": {
          "condition": "conditions.isWhyDeleting"
        },
        "visibleWhen": {
          "condition": "conditions.isWhyDeleting"
        },
        "enableWhen": {
          "condition": "conditions.CAW0EnableDeleteCmdForDefectCondition"
        }
      },
      "CAW0DeleteCauseActionHandler": {
        "id": "Awp0Delete",
        "activeWhen": {
          "condition": "conditions.isCauseDeletingInMethodology"
        },
        "visibleWhen": false
      },
      "CAW0DeleteAttachmentActionHandler": {
        "id": "Awp0Delete",
        "action": "Awp0DeleteAttachCommandAction",
        "activeWhen": {
          "condition": "conditions.isAttachmentDeleting"
        },
        "visibleWhen": true,
        "enableWhen": {
          "condition": "conditions.CAW0DeleteAttachmentCmdEnableCondition"
        }
      },
      "CAW0DisablerDeleteOnOveriewDelegate": {
        "id": "Awp0Delete",
        "activeWhen": {
          "condition": "conditions.caw0DisableCutCmdOverview"
        },
        "visibleWhen": false
      },
      "CAW0EditGraphDelegate": {
        "id": "Awp0StartEdit",
        "action": "startGraphEdit",
        "activeWhen": {
          "condition": "conditions.isMethodologytoEdit"
        },
        "visibleWhen": {
          "condition": "conditions.isMethodologytoEdit"
        },
        "enableWhen": {
          "condition": "conditions.PSPIsNotClosed"
        }
      },
      "CAW0EditGraphDelegateTest": {
        "id": "Awp0StartEdit",
        "action": "startGraphEdit",
        "activeWhen": {
          "condition": "conditions.isMethodologyEditing"
        },
        "visibleWhen": false
      },
      "objectEditCommandHandlerDelegateCOE": {
        "id": "Awp0StartEdit",
        "action": "objectEditActionCOE",
        "activeWhen": {
          "condition": "conditions.isCorrectiveActionPage"
        },
        "visibleWhen": {
          "condition": "conditions.isCorrectiveActionPage"
        },
        "enableWhen": {
          "condition": "conditions.PSPIsNotClosed"
        }
      },
      "objectEditCommandHandlerDelegate5Why": {
        "id": "Awp0SaveEdits",
        "action": "checkEditingPDChild",
        "activeWhen": {
          "condition": "conditions.isOnRootCauseLocation"
        },
        "visibleWhen": {
          "condition": "conditions.isOnRootCauseLocation"
        }
      },
      "CAW0SaveEditGraphDelegate": {
        "id": "Awp0SaveEdits",
        "action": "saveGraphEdit",
        "activeWhen": {
          "condition": "conditions.isMethodologyEditing"
        },
        "visibleWhen": {
          "condition": "conditions.isMethodologyEditing"
        }
      },
      "CAW0SaveEditRiskEvaluationDelegate": {
        "id": "Awp0SaveEdits",
        "action": "saveRiskEvaluation",
        "activeWhen": {
          "condition": "conditions.isRiskEvaluationEditing"
        },
        "visibleWhen": {
          "condition": "conditions.isRiskEvaluationEditing"
        }
      },
      "CAW0SaveEditVisibleInReportDelegate": {
        "id": "Awp0SaveEdits",
        "action": "validateVisibleInReport",
        "activeWhen": {
          "condition": "conditions.isVisibleInReportEditing"
        },
        "visibleWhen": {
          "condition": "conditions.isVisibleInReportEditing"
        }
      },
      "CAW0CancleEditGraphDelegate": {
        "id": "Awp0CancelEdits",
        "action": "cancleGraphEdit",
        "activeWhen": {
          "condition": "conditions.isMethodologyEditing"
        },
        "visibleWhen": {
          "condition": "conditions.isMethodologyEditing"
        }
      },
      "objectEditGraphSummaryDelegateRC": {
        "id": "Awp0StartEditSummary",
        "activeWhen": {
          "condition": "conditions.isMethodology"
        },
        "visibleWhen": false
      },
      "objectEditCommandHandlerDelegateRC": {
        "id": "Awp0StartEditSummary",
        "activeWhen": {
          "condition": "conditions.isRootCauseAnalysisAndNotFirstNode"
        },
        "visibleWhen": false
      },
      "CAW0Add5WhyHandler": {
        "id": "CAW0Add5Why",
        "action": "CAW0Add5Why",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.adding5Why"
        },
        "enableWhen": {
          "condition": "conditions.CAW0AddCmdEnableCondition"
        }
      },
      "CAW0AddWhyHandler": {
        "id": "CAW0AddWhy",
        "action": "CAW0AddWhy",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.is5WhySelected"
        },
        "enableWhen": {
          "condition": "conditions.CAW0AddCmdEnableCondition"
        }
      },
      "CAW0AddIshikawaHandler": {
        "id": "CAW0AddIshikawa",
        "action": "CAW0AddIshikawa",
        "activeWhen": {
          "condition": "conditions.isIshikawaAdding"
        },
        "visibleWhen": {
          "condition": "conditions.isIshikawaAdding"
        },
        "enableWhen": {
          "condition": "conditions.CAW0AddCmdEnableCondition"
        }
      },
      "CAW0AddCauseCommandHandler": {
        "id": "CAW0AddCause",
        "action": "CAW0AddCause",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isIshikawaSelected"
        },
        "enableWhen": {
          "condition": "conditions.CAW0AddCmdEnableCondition"
        }
      },
      "CAW0AddCauseFromGraphCommandHandler": {
        "id": "CAW0AddCause",
        "action": "CAW0AddCauseInGraph",
        "activeWhen": {
          "condition": "conditions.isCauseSelectedInGraph"
        },
        "visibleWhen": {
          "condition": "conditions.isCauseSelectedInGraph"
        },
        "enableWhen": {
          "condition": "conditions.CAW0AddCmdEnableCondition"
        }
      },
      "CAW0AssignResponsibleUserCommandHandler": {
        "id": "CAW0AssignResponsibleUser",
        "action": "CAW0AssignResponsibleUserPanel",
        "activeWhen": {
          "condition": "conditions.isCorrectiveActionPageLocation"
        },
        "visibleWhen": {
          "condition": "conditions.CAW0CorrectiveActionTableSpecificVisibity"
        },
        "enableWhen": {
          "condition": "conditions.PSPOrIssueIsNotClosed"
        }
      },
      "CAW0AssignResponsibleUserCommandHandlerDelegate": {
        "id": "CAW0AssignResponsibleUser",
        "action": "CAW0AssignResponsibleUserPanel",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isQualityActionSelected"
        },
        "enableWhen": {
          "condition": "conditions.CAW0AddCmdEnableCondition"
        }
      },
      "CAW0AddRootCauseCommandHandler": {
        "id": "CAW0AddRootCause",
        "action": "addRootCausePanel",
        "activeWhen": {
          "condition": "conditions.isAddingDefectinRC"
        },
        "visibleWhen": {
          "condition": "conditions.isRootCauseAnalysis"
        },
        "enableWhen": {
          "condition": "conditions.CAW0AddCmdEnableCondition"
        }
      },
      "CAW0CopyCommandHandlerDelegate": {
        "id": "Awp0Copy",
        "activeWhen": {
          "condition": "conditions.CAW0cmdCopyCommandVisible"
        },
        "visibleWhen": false
      },
      "CAW0ContextCopyCommandHandlerDelegate": {
        "id": "Awp0CopyContextMenu",
        "activeWhen": {
          "condition": "conditions.CAW0cmdCopyCommandVisible"
        },
        "visibleWhen": false
      },
      "CAW0ShowRootCauseTC12CommandHandler": {
        "id": "showRootCauseCommand",
        "action": "attachDefectToCapaAsRootCauseFor12",
        "activeWhen": {
          "condition": "conditions.isRootCauseAnalysisWithout5WhyAndIshikawaForTC12"
        },
        "visibleWhen": {
          "condition": "conditions.isRootCauseAnalysisWithout5WhyAndIshikawaForTC12"
        },
        "selectWhen": false,
        "enableWhen": {
          "condition": "conditions.PSPIsNotClosed"
        }
      },
      "showRootCauseCommandRPTC12CommandHandler": {
        "id": "showRootCauseCommandRP",
        "action": "attachDefectToCapaAsRootCauseFor12",
        "activeWhen": {
          "condition": "conditions.isRootCauseAnalysisWithout5WhyAndIshikawaForTC12"
        },
        "visibleWhen": {
          "condition": "conditions.isRootCauseAnalysisWithout5WhyAndIshikawaForTC12"
        },
        "selectWhen": false,
        "enableWhen": {
          "condition": "conditions.PSPIsNotClosed"
        }
      },
      "CAW0ShowRootCauseCommandHandler": {
        "id": "showRootCauseCommand",
        "action": "attachDefectToCapaAsRootCause",
        "activeWhen": {
          "condition": "conditions.isRootCauseAnalysisWithout5WhyAndIshikawa"
        },
        "visibleWhen": {
          "condition": "conditions.isRootCauseAnalysisWithout5WhyAndIshikawa"
        },
        "selectWhen": false
      },
      "showRootCauseCommandRPCommandHandler": {
        "id": "showRootCauseCommandRP",
        "action": "attachDefectToCapaAsRootCause",
        "activeWhen": {
          "condition": "conditions.isRootCauseAnalysisWithout5WhyAndIshikawa"
        },
        "visibleWhen": {
          "condition": "conditions.isRootCauseAnalysisWithout5WhyAndIshikawa"
        },
        "selectWhen": false,
        "enableWhen": {
          "condition": "conditions.PSPIsNotClosed"
        }
      },
      "CAW0ShowRemoveRootCauseCommandHandler": {
        "id": "showRemoveRootCauseCommand",
        "action": "removeRootCauseMark",
        "activeWhen": {
          "condition": "conditions.isRootCauseAnalysisWithout5WhyAndIshikawaWithMark"
        },
        "visibleWhen": {
          "condition": "conditions.isRootCauseAnalysisWithout5WhyAndIshikawaWithMark"
        },
        "selectWhen": false,
        "enableWhen": {
          "condition": "conditions.PSPIsNotClosed"
        }
      },
      "showRootRemoveRootCauseCommandRPCommandHandler": {
        "id": "showRemoveRootCauseCommandRP",
        "action": "removeRootCauseMark",
        "activeWhen": {
          "condition": "conditions.isRootCauseAnalysisWithout5WhyAndIshikawaWithMark"
        },
        "visibleWhen": {
          "condition": "conditions.isRootCauseAnalysisWithout5WhyAndIshikawaWithMark"
        },
        "selectWhen": false,
        "enableWhen": {
          "condition": "conditions.PSPIsNotClosed"
        }
      },
      "CAW0DefectCheckoutHandler": {
        "id": "Awp0Checkout",
        "activeWhen": {
          "condition": "conditions.isRootCauseAnalysis"
        },
        "visibleWhen": {
          "condition": "conditions.isRootCauseAnalysis"
        }
      },
      "CAW0DefectChangeOwnerHandler": {
        "id": "Awp0ChangeOwner",
        "activeWhen": {
          "condition": "conditions.isRootCauseAnalysis"
        },
        "visibleWhen": false
      },
      "CAW0DefectCopyHandler": {
        "id": "Awp0Copy",
        "activeWhen": {
          "condition": "conditions.isRootCauseAnalysis"
        },
        "enableWhen": false
      },
      "CAW0DefectContextCopyHandler": {
        "id": "Awp0CopyContextMenu",
        "activeWhen": {
          "condition": "conditions.isRootCauseAnalysis"
        },
        "visibleWhen": false
      },
      "cutCtxMenuQualityActCommandDelegateHandler": {
        "id": "Awp0CutContextMenu",
        "action": "cutQualityActionDelegate",
        "activeWhen": {
          "condition": "conditions.cutQualityActVisibilityDelegate"
        },
        "visibleWhen": {
          "condition": "conditions.cutQualityActVisibilityDelegate"
        }
      },
      "cutCtxMenuOfDefectinOverviewDelegateHandler": {
        "id": "Awp0CutContextMenu",
        "activeWhen": {
          "condition": "conditions.caw0DisableCutCmdOverview"
        },
        "visibleWhen": false
      },
      "CAW0AddDefectInPDCommandHandler": {
        "id": "CAW0AddDefectInPD",
        "action": "toCheckDefectInPD",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isDefectInPD"
        },
        "enableWhen": {
          "condition": "conditions.PSPIsNotClosed"
        }
      },
      "CAW0AddDefectToIssueCommandHandler": {
        "id": "CAW0AddDefectToIssue",
        "action": "toCheckDefectOfIssue",
        "activeWhen": true,
        "visibleWhen": true,
        "enableWhen": {
          "condition": "conditions.IssueIsNotClosed"
        }
      },
      "CAW0TeamCutHandler": {
        "id": "Awp0Cut",
        "action": "removeTeamMember",
        "activeWhen": {
          "condition": "conditions.CAW0cmdCUtCommandVisible"
        },
        "visibleWhen": {
          "condition": "conditions.CAW0cmdCUtCommandVisible"
        },
        "enableWhen": {
          "condition": "conditions.CAW0cmdCUtCommandVisible"
        }
      },
      "CAW0TeamCutCtxMenuHandler": {
        "id": "Awp0CutContextMenu",
        "action": "removeTeamMember",
        "activeWhen": {
          "condition": "conditions.CAW0cmdCUtCommandVisible"
        },
        "visibleWhen": {
          "condition": "conditions.CAW0cmdCUtCommandVisible"
        }
      },
      "caw0CutDefectInPDCommandDelegateHandler": {
        "id": "Awp0Cut",
        "action": "cutConfiguredRevs",
        "activeWhen": {
          "condition": "conditions.caw0DisableCutCmdPDCondition"
        },
        "visibleWhen": {
          "condition": "conditions.caw0DisableCutCmdPDCondition"
        },
        "enableWhen": false
      },
      "caw0CutDefectInPDCtxCommandDelegateHandler": {
        "id": "Awp0CutContextMenu",
        "action": "cutConfiguredRevs",
        "activeWhen": {
          "condition": "conditions.caw0DisableCutCmdPDCondition"
        },
        "visibleWhen": false
      },
      "caw0CutDefectInOveriveCommandDelegateHandler": {
        "id": "Awp0Cut",
        "action": "cutConfiguredRevs",
        "activeWhen": {
          "condition": "conditions.caw0DisableCutCmdOverview"
        },
        "visibleWhen": {
          "condition": "conditions.caw0DisableCutCmdOverview"
        },
        "enableWhen": false
      },
      "CAW0AddFailureToDefectCommandHandler": {
        "id": "CAW0AddFailureToDefect",
        "action": "toCheckFailureLinkToDefect",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isFailureLinked"
        },
        "enableWhen": {
          "condition": "conditions.isDefectModifiable"
        }
      },
      "CAW0AddItemToDefectCommandHandler": {
        "id": "CAW0AddItemToDefect",
        "action": "additemRevisionToDefectPanel",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isDefectSelected"
        },
        "enableWhen": {
          "condition": "conditions.isDefectModifiable"
        }
      },
      "CAW0ReplaceFailureToDefectCommandHandler": {
        "id": "CAW0ReplaceFailureToDefect",
        "action": "addFailureToDefectPanel",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.CAW0FailureCutCommandVisible"
        },
        "enableWhen": {
          "condition": "conditions.isDefectModifiable"
        }
      },
      "CAW0ReplaceitemToDefectCommandHandler": {
        "id": "CAW0ReplaceitemToDefect",
        "action": "additemRevisionToDefectPanel",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isItemRevisionSelected"
        },
        "enableWhen": {
          "condition": "conditions.isDefectModifiable"
        }
      },
      "CAW0FailureCutHandler": {
        "id": "Awp0Cut",
        "action": "cutFailureObjDelegate",
        "activeWhen": {
          "condition": "conditions.CAW0FailureCutCommandVisible"
        },
        "visibleWhen": {
          "condition": "conditions.CAW0FailureCutCommandVisible"
        },
        "enableWhen": {
          "condition": "conditions.isDefectModifiable"
        }
      },
      "CAW0FailureCutCtxMenuHandler": {
        "id": "Awp0CutContextMenu",
        "action": "cutFailureObjDelegate",
        "activeWhen": {
          "condition": "conditions.CAW0FailureCutCommandVisible"
        },
        "visibleWhen": {
          "condition": "conditions.CAW0FailureCutCommandVisible"
        },
        "enableWhen": {
          "condition": "conditions.isDefectModifiable"
        }
      },
      "CAW0OpenVVIDelegateHandler": {
        "id": "Awp0OpenVVI",
        "activeWhen": {
          "condition": "conditions.isUserOnCAPASublocation"
        },
        "visibleWhen": false
      },
      "CAW0OpenInRACDelegateHandler": {
        "id": "Awp0OpenInRAC",
        "activeWhen": {
          "condition": "conditions.isUserOnCAPASublocation"
        },
        "visibleWhen": false
      },
      "CAW0CheckoutDelegateHandler": {
        "id": "Awp0Checkout",
        "activeWhen": {
          "condition": "conditions.isUserOnCAPASublocation"
        },
        "visibleWhen": false
      },
      "CAW0CreateLineItemCommandDelegateHandler": {
        "id": "Sc1CreateLineItem",
        "activeWhen": {
          "condition": "conditions.isUserOnCAPASublocation"
        },
        "visibleWhen": false
      },
      "CAW0CreateExchangeCommandDelegateHandler": {
        "id": "Sc1CreateExchange",
        "activeWhen": {
          "condition": "conditions.isUserOnCAPASublocation"
        },
        "visibleWhen": false
      },
      "CAW0ExportToOfficeAppCommandDelegateHandler": {
        "id": "Arm0ExportToOfficeApp",
        "activeWhen": {
          "condition": "conditions.isUserOnCAPASublocation"
        },
        "visibleWhen": false
      },
      "CAW0Cm1ShowCreateChangeDelegateHandler": {
        "id": "Cm1ShowCreateChangeInContext",
        "activeWhen": {
          "condition": "conditions.isUserOnCAPASublocation"
        },
        "visibleWhen": false
      },
      "CAW0Awn0OpenNxTcXmlDelegateHandler": {
        "id": "Awn0OpenNxTcXml",
        "activeWhen": {
          "condition": "conditions.isUserOnCAPASublocation"
        },
        "visibleWhen": false
      },
      "CAW0Awp0OpenInSEECDelegateHandler": {
        "id": "Awp0OpenInSEEC",
        "activeWhen": {
          "condition": "conditions.isUserOnCAPASublocation"
        },
        "visibleWhen": false
      },
      "CAW0SetPinWhyCommandHandler": {
        "id": "CAW0SetPinWhy",
        "action": "CAW0SetPinWhy",
        "activeWhen": {
          "condition": "conditions.isCAW0SetPinWhy"
        },
        "visibleWhen": {
          "condition": "conditions.isCAW0SetPinWhy"
        }
      },
      "CAW0SetUnPinWhyCommandHandler": {
        "id": "CAW0SetUnPinWhy",
        "action": "CAW0SetUnPinWhy",
        "activeWhen": {
          "condition": "conditions.isCAW0SetUnPinWhy"
        },
        "visibleWhen": {
          "condition": "conditions.isCAW0SetUnPinWhy"
        }
      },
      "Caw0ShowObjectOpenCommandHandler": {
        "id": "Awp0ShowObject",
        "action": "CAW0Show5Why",
        "activeWhen": {
          "condition": "conditions.CAW0Show5WhyActiveCondition"
        },
        "visibleWhen": {
          "condition": "conditions.CAW0Show5WhyVisibleCondition"
        }
      },
      "Caw0ShowObjectOpenInNewWindowCommandHandler": {
        "id": "Awp0OpenInNewWindow",
        "action": "CAW0ShowInNewWindow5Why",
        "activeWhen": {
          "condition": "conditions.CAW0Show5WhyActiveCondition"
        },
        "visibleWhen": {
          "condition": "conditions.CAW0Show5WhyVisibleCondition"
        }
      },
      "Caw0ShowObjectOpenInNewtabCommandHandler": {
        "id": "Awp0OpenInNewTab",
        "action": "CAW0ShowInNewTab5Why",
        "activeWhen": {
          "condition": "conditions.CAW0Show5WhyActiveCondition"
        },
        "visibleWhen": {
          "condition": "conditions.CAW0Show5WhyVisibleCondition"
        }
      },
      "Awp0StartEditTableCommandHandlerDelegate": {
        "id": "Awp0StartEditTable",
        "activeWhen": {
          "condition": "conditions.isRootCauseAnalysisLocation"
        },
        "visibleWhen": false
      },
      "CAW0AddCauseGroupActionHandler": {
        "id": "CAW0AddCauseGroup",
        "action": "addCauseGroup",
        "activeWhen": {
          "condition": "conditions.isIshikawaSelectedInMethodology"
        },
        "visibleWhen": true
      },
      "CAW0InContextCommandHandler": {
        "id": "Awp0InContextReports",
        "action": "CAW0SubscribeEventOfReport",
        "activeWhen": {
          "condition": "conditions.showCAW0GenerateReportCommand"
        },
        "visibleWhen": true
      },
      "Evm1ShowRecipeCommandHandlerDelegate": {
        "id": "Evm1ShowRecipe",
        "activeWhen": {
          "condition": "conditions.isOnCAPARelationTab"
        },
        "visibleWhen": false
      },
      "Awp0RemoveParticipantsDelegateHandlerForEstTeam": {
        "id": "caw0RemoveParticipantForEstTeam",
        "action": "removeParticipantCommandAction",
        "activeWhen": {
          "condition": "conditions.showRemoveParticipantCondForEstTeam"
        },
        "visibleWhen": {
          "condition": "conditions.showRemoveParticipantCondForEstTeam"
        }
      },
      "Awp0RemoveParticipantsDelegateHandlerForCapaOwner": {
        "id": "caw0RemoveParticipantForCapaOwner",
        "action": "removeParticipantCommandAction",
        "activeWhen": {
          "condition": "conditions.showRemoveParticipantCondForCapaOwner"
        },
        "visibleWhen": {
          "condition": "conditions.showRemoveParticipantCondForCapaOwner"
        }
      },
      "Awp0RemoveParticipantsDelegateHandlerForCapaApprover": {
        "id": "caw0RemoveParticipantForCapaApprover",
        "action": "removeParticipantCommandAction",
        "activeWhen": {
          "condition": "conditions.showRemoveParticipantCondForCapaApprover"
        },
        "visibleWhen": {
          "condition": "conditions.showRemoveParticipantCondForCapaApprover"
        }
      },
      "Awp0RemoveParticipantsDelegateHandlerForCapaSupplier": {
        "id": "caw0RemoveParticipantForCapaSupplier",
        "action": "removeParticipantCommandAction",
        "activeWhen": {
          "condition": "conditions.showRemoveParticipantCondForCapaSupplier"
        },
        "visibleWhen": {
          "condition": "conditions.showRemoveParticipantCondForCapaSupplier"
        }
      },
      "Awp0RemoveParticipantsDelegateHandlerForChangeContributor": {
        "id": "caw0RemoveParticipantForChangeContributor",
        "action": "removeParticipantCommandAction",
        "activeWhen": {
          "condition": "conditions.showRemoveParticipantCondForChangeContributor"
        },
        "visibleWhen": {
          "condition": "conditions.showRemoveParticipantCondForChangeContributor"
        }
      },
      "Awp0PasteDelegateHandler": {
        "id": "Awp0Paste",
        "activeWhen": {
          "condition": "conditions.isOnPDandDefectSelected"
        },
        "visibleWhen": true,
        "enableWhen": false
      },
      "Awp0PasteCtxMenuDelegateHandler": {
        "id": "Awp0PasteContextMenu",
        "activeWhen": {
          "condition": "conditions.isOnPDandDefectSelected"
        },
        "visibleWhen": false
      },
      "Awp0QAPasteDelegateHandler": {
        "id": "Awp0Paste",
        "activeWhen": {
          "condition": "conditions.isQASelectedOnCapaOverview"
        },
        "visibleWhen": true,
        "enableWhen": false
      },
      "Awp0QAPasteCtxMenuDelegateHandler": {
        "id": "Awp0PasteContextMenu",
        "activeWhen": {
          "condition": "conditions.isQASelectedOnCapaOverview"
        },
        "visibleWhen": false
      },
      "CAW0QACopyCommandHandlerDelegate": {
        "id": "Awp0Copy",
        "activeWhen": {
          "condition": "conditions.isQASelectedOnCapaOverview"
        },
        "visibleWhen": true,
        "enableWhen": false
      },
      "CAW0QAContextCopyCommandHandlerDelegate": {
        "id": "Awp0CopyContextMenu",
        "activeWhen": {
          "condition": "conditions.isQASelectedOnCapaOverview"
        },
        "visibleWhen": false
      },
      "CAW0QACutHandler": {
        "id": "Awp0Cut",
        "activeWhen": {
          "condition": "conditions.isQASelectedOnCapaOverview"
        },
        "visibleWhen": true,
        "enableWhen": false
      },
      "CAW0QACutCtxMenuHandler": {
        "id": "Awp0CutContextMenu",
        "activeWhen": {
          "condition": "conditions.isQASelectedOnCapaOverview"
        },
        "visibleWhen": false
      },
      "CAW0Qam0SaveAsDelegateHandler": {
        "id": "Qam0SaveAs",
        "activeWhen": {
          "condition": "conditions.isUserOnCAPASublocation"
        },
        "visibleWhen": false
      },
      "CAW0SaveAsDelegateHandler": {
        "id": "CAW0SaveAs",
        "action": "saveAsorReviseCapaContext",
        "activeWhen": {
          "condition": "conditions.isSaveAsOnCAPASublocation"
        },
        "visibleWhen": true
      },
      "Caw0ShowSaveAsCommandHandlerDelegate": {
        "id": "Awp0ShowSaveAs",
        "activeWhen": {
          "condition": "conditions.isUserOnCAPASublocation"
        },
        "visibleWhen": false
      },
      "Caw0ShowSaveAsOnlyCommandHandlerDelegate": {
        "id": "Awp0ShowSaveAsOnly",
        "activeWhen": {
          "condition": "conditions.isUserOnCAPASublocation"
        },
        "visibleWhen": false
      },
      "Caw0ShowReviseCommandHandlerDelegate": {
        "id": "Awp0ShowRevise",
        "activeWhen": {
          "condition": "conditions.isUserOnCAPASublocation"
        },
        "visibleWhen": false
      },
      "Caw0ScheduleSaveAsCommandHandlerDelegate": {
        "id": "Saw1SaveAsSchedule",
        "activeWhen": {
          "condition": "conditions.isDeprecatedScheduleAndForm"
        },
        "visibleWhen": false
      },
      "CAW0AddSymptomDefectInDriveCommandHandler": {
        "id": "CAW0AddSymptomDefectInDrive",
        "action": "addSymptomDefectInDrive",
        "activeWhen": true,
        "visibleWhen": true
      },
      "CAW0RemoveSymptomDefectCellCommandHandler": {
        "id": "CAW0RemoveSymptomDefectCell",
        "action": "removeSymptomDefectCellAction",
        "activeWhen": true,
        "visibleWhen": true
      },
      "CAW0SaveGraphPrintViewHandler": {
        "id": "CAW0SaveGraphPrintView",
        "action": "confirmSave",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isNotCAPARelationSublocation"
        },
        "enableWhen": {
          "condition": "conditions.isSavePrintDiagramEnabledCondition"
        }
      },
      "CAW0PrintGraphViewHandler": {
        "id": "CAW0PrintGraphView",
        "action": "Caw0PrintGraph",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isNotCAPARelationSublocation"
        },
        "enableWhen": {
          "condition": "conditions.isSavePrintDiagramEnabledCondition"
        }
      },
      "CAW0AddFailureToDefectCreateCommandHandler": {
        "id": "CAW0AddFailureToDefectCreate",
        "action": "addFailureToDefectCreate",
        "activeWhen": true,
        "visibleWhen": true
      },
      "CAW0RemoveFailureCellCommandHandler": {
        "id": "CAW0RemoveFailureCell",
        "action": "removefailureCellAction",
        "activeWhen": true,
        "visibleWhen": true
      },
      "Caw0CreateScheduleGroupCommandHandler": {
        "id": "Caw0CreateScheduleGroup",
        "activeWhen": true
      },
      "Caw0CreateScheduleInPSPCommandHandler": {
        "id": "Caw0CreateScheduleInPSP",
        "action": "Caw0AddScheduleCommandAction",
        "activeWhen": true,
        "visibleWhen": true,
        "enableWhen": {
          "condition": "conditions.PSPIsNotClosed"
        }
      },
      "Caw0CreateScheduleFromTemplateInPSPCommandHandler": {
        "id": "Caw0CreateScheduleFromTemplateInPSP",
        "action": "getCreateScheduleFromTemplatePanelPSP",
        "activeWhen": true,
        "visibleWhen": true,
        "enableWhen": {
          "condition": "conditions.PSPIsNotClosed"
        }
      },
      "Awp0ObjectInfoCommandHandlerDelegate": {
        "id": "Awp0ObjectInfo",
        "activeWhen": {
          "condition": "conditions.toDisableInfoCommand"
        },
        "visibleWhen": false
      },
      "cutQualityActCommandOnRCADelegateHandler": {
        "id": "Awp0Cut",
        "action": "cutQualityActionDelegateonRCA",
        "activeWhen": {
          "condition": "conditions.cutQualityActVisibilityDelegateonRCA"
        },
        "visibleWhen": {
          "condition": "conditions.cutQualityActVisibilityDelegateonRCA"
        },
        "enableWhen": {
          "condition": "conditions.isDefectModifiable"
        }
      },
      "CAW0objectSetTableViewModeHandler": {
        "id": "CAW0objectSetTableViewMode",
        "action": "CAW0changeObjectSetTableView",
        "activeWhen": true,
        "visibleWhen": true,
        "selectWhen": {
          "condition": "conditions.isRepeatedTableViewSelected"
        }
      },
      "CAW0objectSetCompareViewModeHandler": {
        "id": "CAW0objectSetCompareViewMode",
        "action": "CAW0changeObjectSetCompareView",
        "activeWhen": true,
        "visibleWhen": true,
        "selectWhen": {
          "condition": "conditions.isRepeatedCompareViewSelected"
        }
      },
      "CAW0showCommonProbItemHandler": {
        "id": "CAW0showCommonProbItem",
        "action": "toggleShowingProblemItems",
        "activeWhen": true,
        "visibleWhen": true,
        "selectWhen": {
          "condition": "conditions.showCommonProbItem"
        }
      },
      "CAW0showCommonFailureHandler": {
        "id": "CAW0showCommonFailure",
        "action": "toggleShowingFailures",
        "activeWhen": true,
        "visibleWhen": true,
        "selectWhen": {
          "condition": "conditions.showCommonFailure"
        }
      },
      "CAW0ExportToExcelHandler": {
        "id": "CAW0ExportToExcel",
        "action": "CAW0activateExportToExcelPanel",
        "activeWhen": true,
        "visibleWhen": true
      },
      "CAW0AddQualityActionCmdDelegateCommandHandler": {
        "id": "Qam0AddQualityActionCmd",
        "action": "caw0SetInputForAddingQA",
        "activeWhen": {
          "condition": "conditions.isCapaSelected"
        },
        "visibleWhen": {
          "condition": "conditions.isCapaSelected"
        },
        "enableWhen": {
          "condition": "conditions.CAW0AddCmdEnableCondition"
        }
      },
      "CAW0AddQualityActionFromTemplateCmdDelegateCommandHandler": {
        "id": "Qam0AddQualityActionFromTemplateCmd",
        "action": "caw0SetInputForAddingQAFromTemplate",
        "activeWhen": {
          "condition": "conditions.isCapaSelected"
        },
        "visibleWhen": {
          "condition": "conditions.isCapaSelected"
        },
        "enableWhen": {
          "condition": "conditions.CAW0AddCmdEnableCondition"
        }
      },
      "CAW0AddQualityActionAsTemplateDelegateCommandHandler": {
        "id": "Qam0AddQualityActionAsTemplateCmd",
        "action": "caw0SetInputForAddingQAAsTemplate",
        "activeWhen": {
          "condition": "conditions.isCapaSelected"
        },
        "visibleWhen": {
          "condition": "conditions.isCapaSelected"
        },
        "enableWhen": {
          "condition": "conditions.CAW0AddCmdEnableCondition"
        }
      },
      "CAW0addLinkToRCCommandHandler": {
        "id": "CAW0addLinkToRC",
        "action": "openRootCauseslist",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.checkIfSelectedQAHasRC"
        }
      },
      "CAW0UnlinkToRCCommandHandler": {
        "id": "CAW0UnlinkToRC",
        "action": "unlinkToRC",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.checkIfSelectedQAHasNotRC"
        }
      },
      "CAW0PasteCOECommandHandler": {
        "id": "CAW0PasteCOE",
        "action": "CAW0PasteCOEAction",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isOnCorrectiveActionSublocation"
        },
        "enableWhen": {
          "condition": "conditions.isOnCorrectiveActionSublocation"
        }
      },
      "Caw0ExpandOutCommandHandler": {
        "id": "Caw0ExpandOut",
        "action": "Caw0ExpandOutAction",
        "activeWhen": true,
        "visibleWhen": true
      },
      "CAW0SearchVendorTableDataCommandHandler": {
        "id": "CAW0SearchVendorTableData",
        "action": "setObjectSourceCommandContext",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.xrtIncludeAddCommandPlanSublocation"
        },
        "selectWhen": {
          "condition": "conditions.selectPlanSublocationAddObject"
        },
        "enableWhen": {
          "condition": "conditions.PSPOrIssueIsNotClosed"
        }
      },
      "caw0CutVendorDataHandler": {
        "id": "Awp0Cut",
        "action": "cutVendorDataAction",
        "activeWhen": {
          "condition": "conditions.caw0CutCmdVendorDataHandlerCondition"
        },
        "visibleWhen": {
          "condition": "conditions.caw0CutCmdVendorDataHandlerCondition"
        },
        "enableWhen": {
          "condition": "conditions.CAW0EnableCutCmdVendorCondition"
        }
      },
      "caw0CutVendorCtxMenuDataHandler": {
        "id": "Awp0CutContextMenu",
        "action": "cutVendorDataAction",
        "activeWhen": {
          "condition": "conditions.caw0CutCmdVendorDataHandlerCondition"
        },
        "visibleWhen": {
          "condition": "conditions.caw0CutCmdVendorDataHandlerCondition"
        },
        "enableWhen": {
          "condition": "conditions.CAW0EnableCutCmdVendorCondition"
        }
      },
      "CAW0RemoveVendorTableDataCommandHandler": {
        "id": "CAW0RemoveVendorTableData",
        "action": "removeVendorTableDataAction",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isOnRemoveVendorObject"
        },
        "enableWhen": {
          "condition": "conditions.PSPOrIssueIsNotClosed"
        }
      },
      "CAW0RemoveProjectFromPlanCommandHandler": {
        "id": "CAW0RemoveProjectPlanTableData",
        "action": "removeVendorTableDataAction",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isOnRemoveProjectFromPlan"
        },
        "enableWhen": {
          "condition": "conditions.PSPOrIssueIsNotClosed"
        }
      },
      "CAW0RemoveEventFromPlanCommandHandler": {
        "id": "CAW0RemoveEventPlanTableData",
        "action": "removeVendorTableDataAction",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isOnRemoveEventFromPlan"
        },
        "enableWhen": {
          "condition": "conditions.PSPOrIssueIsNotClosed"
        }
      },
      "CAW0RemoveVendorTableDataCommandHandlerDelegate": {
        "id": "CAW0RemoveVendorTableData",
        "action": "removeVendorTableDataActionConfirm",
        "activeWhen": {
          "condition": "conditions.isOnRemoveVendorObjectAndParentObject"
        },
        "visibleWhen": {
          "condition": "conditions.isOnRemoveVendorObject"
        },
        "enableWhen": {
          "condition": "conditions.PSPOrIssueIsNotClosed"
        }
      },
      "CAW0RemoveProjectFromPlanCommandHandlerDelegate": {
        "id": "CAW0RemoveProjectPlanTableData",
        "action": "removeVendorTableDataActionConfirm",
        "activeWhen": {
          "condition": "conditions.isOnRemoveVendorObjectAndParentObject"
        },
        "visibleWhen": {
          "condition": "conditions.isOnRemoveProjectFromPlan"
        },
        "enableWhen": {
          "condition": "conditions.PSPOrIssueIsNotClosed"
        }
      },
      "CAW0RemoveEventFromPlanCommandHandlerDelegate": {
        "id": "CAW0RemoveEventPlanTableData",
        "action": "removeVendorTableDataActionConfirm",
        "activeWhen": {
          "condition": "conditions.isOnRemoveVendorObjectAndParentObject"
        },
        "visibleWhen": {
          "condition": "conditions.isOnRemoveEventFromPlan"
        },
        "enableWhen": {
          "condition": "conditions.PSPOrIssueIsNotClosed"
        }
      },
      "CAW0AddTemplateSectionCmdHandler": {
        "id": "CAW0AddTemplateSectionCmd",
        "action": "CAW0AddTemplateAction",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.CAW0AddTemplateSectionCmdVisibility"
        }
      },
      "CAW0RemoveTemplateSectionCmdHandler": {
        "id": "CAW0RemoveTemplateSectionCmd",
        "action": "CAW0RemoveTemplateAction",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.CAW0RemoveTemplateSectionCmdVisibility"
        }
      },
      "Cm1ShowCreateChangeCommandDelegateHandler": {
        "id": "Cm1ShowCreateChange",
        "action": "stateParameterForProblemSolvingAction",
        "activeWhen": {
          "condition": "conditions.isPSPorQIMSublocation"
        },
        "visibleWhen": {
          "condition": "conditions.isPSPorQIMSublocation"
        }
      },
      "Cm1ChangeFiltersCommandDelegateHandler": {
        "id": "Cm1ChangeFilters",
        "action": "searchFilterPanel",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.Caw0ShowFilterCmdCond"
        }
      },
      "CAW0AddReportToPSPDashboardCmdHandler": {
        "id": "CAW0AddReportToPSPDashboardCmd",
        "action": "OpenAddReportToPSPPanel",
        "activeWhen": true,
        "visibleWhen": {
          "condition": "conditions.isPSPReportDashboard"
        }
      },
      "CAW0RemoveDashboardReportCommandHandler": {
        "id": "Rb0RemoveDashboardTile",
        "action": "getPreferenceForDashboard",
        "activeWhen": {
          "condition": "conditions.isPSPReportDashboard"
        },
        "visibleWhen": true
      },
      "CAW0AddReportCommandHandler": {
        "id": "Rb0AddReport",
        "activeWhen": {
          "condition": "conditions.isPSPReportDashboard"
        },
        "visibleWhen": false
      },
      "CAW0DeleteQualityActionCommandHandlerDelegate": {
        "id": "Qam0DeleteQualityAction",
        "action": "getConfirmationForDeleteQualityAction",
        "activeWhen": {
          "condition": "conditions.isCorrectiveActionPageLocation"
        },
        "visibleWhen": {
          "condition": "conditions.CAW0CorrectiveActionTableSpecificVisibity"
        }
      },
      "Awp0ShowAddObjectCommandHandlerDelegate": {
        "id": "Awp0ShowAddObject",
        "action": "registerAddToContext",
        "activeWhen": {
          "condition": "conditions.isUserOnCAPAOrQIMSublocation"
        },
        "visibleWhen": true,
        "enableWhen": {
          "condition": "conditions.CAW0AddCmdEnableCondition"
        }
      },
      "Awp0AddParticipantCommandHandlerDelegate": {
        "id": "Awp0AddParticipant",
        "action": "Awp0AddParticipantCommandAction",
        "activeWhen": {
          "condition": "conditions.isUserOnCAPAOrQIMSublocation"
        },
        "visibleWhen": {
          "condition": "conditions.CAW0AddParticipantCommandVisibility"
        },
        "enableWhen": {
          "condition": "conditions.PSPOrIssueIsNotClosed"
        }
      },
      "Awp0ReplaceParticipantCommandHandlerDelegate": {
        "id": "Awp0ReplaceParticipant",
        "action": "Awp0ReplaceParticipantCommandAction",
        "activeWhen": {
          "condition": "conditions.isUserOnCAPAOrQIMSublocation"
        },
        "visibleWhen": {
          "condition": "conditions.CAW0ReplaceParticipantCommandVisibility"
        },
        "enableWhen": {
          "condition": "conditions.PSPOrIssueIsNotClosed"
        }
      },
      "CAW0DisableAttachmentsReplaceDatasetCmdHandler": {
        "id": "Awp0ReplaceDataset",
        "activeWhen": {
          "condition": "conditions.CAW0DisableAttachmentsDatasetRepCmdCondition"
        },
        "visibleWhen": true,
        "enableWhen": false
      },
      "CAW0DisableDeleteCmdPlanSublocationHandlerDelegate": {
        "id": "Awp0Delete",
        "activeWhen": {
          "condition": "conditions.CAW0DisableDeleteInPlanSublocationHandlerCondition"
        },
        "visibleWhen": true,
        "enableWhen": false
      },
      "CAW0DisableCutCmdProjectInPlanHandlerDelegate": {
        "id": "Awp0Cut",
        "activeWhen": {
          "condition": "conditions.CAW0DisableProjectCutCmdInPlanSublocationCondition"
        },
        "visibleWhen": true,
        "enableWhen": false
      },
      "CAW0DeleteIssueQualityActionCommandHandlerDelegate": {
        "id": "Qam0DeleteQualityAction",
        "action": "getConfirmationForDeleteQualityAction",
        "activeWhen": {
          "condition": "conditions.CAWAssignResponsibleUserCommandVisiblity"
        },
        "visibleWhen": {
          "condition": "conditions.CAWAssignResponsibleUserCommandVisiblity"
        },
        "enableWhen": {
          "condition": "conditions.CAW0AddCmdEnableCondition"
        }
      },
      "CAW0PDAndSDSublocDisableCutCmdHandlerDelegate": {
        "id": "Awp0Cut",
        "activeWhen": {
          "condition": "conditions.CAW0PDAndSDSubLocCutCmdDisableCondition"
        },
        "visibleWhen": true,
        "enableWhen": false
      },
      "CAW0PDAndSDSublocDisableCutCtxMenuCmdHandlerDelegate": {
        "id": "Awp0CutContextMenu",
        "activeWhen": {
          "condition": "conditions.CAW0PDAndSDSubLocCutCmdDisableCondition"
        },
        "visibleWhen": true,
        "enableWhen": false
      },
      "CAW0DefectiveItemDisableCutCtxMenuCmdHandlerDelegate": {
        "id": "Awp0CutContextMenu",
        "activeWhen": {
          "condition": "conditions.CAW0DefectiveItemDisableCutCmdDelegateCondition"
        },
        "visibleWhen": true,
        "enableWhen": false
      },
      "CAW0DefectiveItemDisableCutCmdHandlerDelegate": {
        "id": "Awp0Cut",
        "activeWhen": {
          "condition": "conditions.CAW0DefectiveItemDisableCutCmdDelegateCondition"
        },
        "visibleWhen": true,
        "enableWhen": false
      },
      "CAW0DefectiveItemDisableDeleteCmdHandlerDelegate": {
        "id": "Awp0Delete",
        "activeWhen": {
          "condition": "conditions.CAW0DefectiveItemDisableCutCmdDelegateCondition"
        },
        "visibleWhen": true,
        "enableWhen": false
      },
      "CAW0PDAndSDSublocationDisableDeleteCmdHandlerDelegate": {
        "id": "Awp0Delete",
        "activeWhen": {
          "condition": "conditions.CAW0PDAndSDSublocDisableDeleteCmdHandlerCondition"
        },
        "visibleWhen": true,
        "enableWhen": false
      },
      "CAW0DisableCapaOvrvwRelIssuesAndPSPCutCmdHandler": {
        "id": "Awp0Cut",
        "activeWhen": {
          "condition": "conditions.CAW0DisableCutCmdForRelIssuesAndPSPOnCapaOvrvwCond"
        },
        "visibleWhen": true,
        "enableWhen": false
      },
      "CAW0HideCapaOvrvwRelIssuesAndPSPCutCtxMenuCmdHandler": {
        "id": "Awp0CutContextMenu",
        "activeWhen": {
          "condition": "conditions.CAW0DisableCutCmdForRelIssuesAndPSPOnCapaOvrvwCond"
        },
        "visibleWhen": false
      },
      "CAW0QADisableCutCommandHandlerDelegate": {
        "id": "Awp0Cut",
        "activeWhen": {
          "condition": "conditions.CAW0QACutCmdDisableCondition"
        },
        "visibleWhen": true,
        "enableWhen": false
      },
      "CAW0QADisableCutCtxMenuCmdHandlerDelegate": {
        "id": "Awp0CutContextMenu",
        "activeWhen": {
          "condition": "conditions.CAW0QACutCmdDisableCondition"
        },
        "visibleWhen": true,
        "enableWhen": false
      },
      "CAW0IssueOverviewHideRemoveParticipantsCmdHandlerDelegate": {
        "id": "Awp0RemoveParticipant",
        "activeWhen": {
          "condition": "conditions.CAW0IssueOverviewHideRemoveParticipantsCmdCondition"
        },
        "visibleWhen": false
      },
      "CAW0IssueOverviewDisableDeleteCmdHandlerDelegate": {
        "id": "Awp0Delete",
        "activeWhen": {
          "condition": "conditions.CAW0DisableDelAndCutCmdsInIssueOverviewCondition"
        },
        "visibleWhen": true,
        "enableWhen": false
      },
      "CAW0IssueOverviewDisableCutCmdHandlerDelegate": {
        "id": "Awp0Cut",
        "action": "cutConfiguredRevs",
        "activeWhen": {
          "condition": "conditions.CAW0DisableDelAndCutCmdsInIssueOverviewCondition"
        },
        "visibleWhen": true,
        "enableWhen": false
      },
      "CAW0IssueOverviewDisableCutCtxMenuCmdHandlerDelegate": {
        "id": "Awp0CutContextMenu",
        "action": "cutConfiguredRevs",
        "activeWhen": {
          "condition": "conditions.CAW0DisableDelAndCutCmdsInIssueOverviewCondition"
        },
        "visibleWhen": true,
        "enableWhen": false
      },
      "CAW0DisableAttachmentsCutCmdHandlerDelegate": {
        "id": "Awp0Cut",
        "activeWhen": {
          "condition": "conditions.CAW0DisableAttachmentsCutCmdCondtion"
        },
        "visibleWhen": true,
        "enableWhen": false
      },
      "CAW0DisableAttachmentsCutCtxMenuCmdHandlerDelegate": {
        "id": "Awp0CutContextMenu",
        "activeWhen": {
          "condition": "conditions.CAW0DisableAttachmentsCutCmdCondtion"
        },
        "visibleWhen": true,
        "enableWhen": false
      },
      "CAW0HideAssignProjectsCommandHandlerDelegate": {
        "id": "Awp0AssignProjects",
        "activeWhen": {
          "condition": "conditions.CAW0DisableRHTCmdsForClosedIssueAndPSPCondition"
        },
        "visibleWhen": false
      },
      "CAW0DisableQADeleteCmdRCASublocHandlerDelegate": {
        "id": "Qam0DeleteQualityAction",
        "activeWhen": {
          "condition": "conditions.CAW0DisableQADeleteCmdRCASublocHandlerDelegateCondition"
        },
        "visibleWhen": true,
        "enableWhen": false
      },
      "CAW0DisableQualityChecklistDeleteCmdPlanSubLocHandlerDelegate": {
        "id": "Apm0DeleteQualityChecklist",
        "activeWhen": {
          "condition": "conditions.CAW0DisableQualityChecklistDeleteCmdPSPPlanSubLocCondition"
        },
        "visibleWhen": true,
        "enableWhen": false
      },
      "CAW0DisableCapaOvrvwRelIssuesAndPSPDeleteCmdHandler": {
        "id": "Awp0Delete",
        "activeWhen": {
          "condition": "conditions.CAW0DisableCutCmdForRelIssuesAndPSPOnCapaOvrvwCond"
        },
        "visibleWhen": true,
        "enableWhen": false
      },
      "CAW0DisableRootCauseCutCmdRCASublocSecondaryViewHandler": {
        "id": "Awp0Cut",
        "activeWhen": {
          "condition": "conditions.CAW0DisableCutAndDelCmdsRCASublocScndryViewCondition"
        },
        "visibleWhen": true,
        "enableWhen": false
      },
      "CAW0DisableRootCauseCutCtxCmdRCASublocSecondaryViewHandler": {
        "id": "Awp0CutContextMenu",
        "activeWhen": {
          "condition": "conditions.CAW0DisableCutAndDelCmdsRCASublocScndryViewCondition"
        },
        "visibleWhen": false
      },
      "CAW0DisableRootCauseDeleteCmdRCASublocSecondaryViewHandler": {
        "id": "Awp0Delete",
        "activeWhen": {
          "condition": "conditions.CAW0DisableCutAndDelCmdsRCASublocScndryViewCondition"
        },
        "visibleWhen": true,
        "enableWhen": false
      },
      "CAW0DisableCutQualityActCtxMenuCommandOnRCADelegateHandler": {
        "id": "Awp0CutContextMenu",
        "activeWhen": {
          "condition": "conditions.CAW0DisableCutQualityActCtxMenuCommandOnRCACondition"
        },
        "visibleWhen": true,
        "enableWhen": false
      },
      "CAW0DisableQADeleteCmdInCapaOverviewHandler": {
        "id": "Qam0DeleteQualityAction",
        "activeWhen": {
          "condition": "conditions.CAW0DisableQADeleteCmdInCapaOverviewCondition"
        },
        "visibleWhen": true,
        "enableWhen": false
      }
    },
    "commandPlacements": {
      "CAW0AssignResponsibleUserPlacement": {
        "id": "CAW0AssignResponsibleUser",
        "uiAnchor": "caw0_objectSet_right",
        "priority": 110
      },
      "CAW0DeleteQualityActionPlacement": {
        "id": "Qam0DeleteQualityAction",
        "uiAnchor": "caw0_objectSet_right",
        "priority": 111
      },
      "CAW0AddRootCauseCommandPlacement-classic": {
        "id": "CAW0AddRootCause",
        "uiAnchor": "rootCauseTreeContextMenu",
        "priority": 0
      },
      "CAW0AddRootCauseCommandPlacement": {
        "id": "CAW0AddRootCause",
        "uiAnchor": "aw_rightWall",
        "priority": 110,
        "parentGroupId": "Awp0NewGroup"
      },
      "CAW0Add5WhyCommandPlacement": {
        "id": "CAW0Add5Why",
        "uiAnchor": "aw_rightWall",
        "priority": 120,
        "parentGroupId": "Awp0NewGroup"
      },
      "CAW0AddIshikawaCommandPlacement": {
        "id": "CAW0AddIshikawa",
        "uiAnchor": "aw_rightWall",
        "priority": 140,
        "parentGroupId": "Awp0NewGroup"
      },
      "CAW0AddCauseCommandPlacement": {
        "id": "CAW0AddCause",
        "uiAnchor": "aw_rightWall",
        "priority": 110,
        "parentGroupId": "Awp0NewGroup"
      },
      "CAW0AddWhyCommandPlacement": {
        "id": "CAW0AddWhy",
        "uiAnchor": "aw_rightWall",
        "priority": 130,
        "parentGroupId": "Awp0NewGroup"
      },
      "showRootCauseCommandContextMenu": {
        "id": "showRootCauseCommand",
        "uiAnchor": "aw_rightWall",
        "priority": 100,
        "parentGroupId": "Awp0ManageGroup"
      },
      "showRemoveRootCauseCommandContextMenu": {
        "id": "showRemoveRootCauseCommand",
        "uiAnchor": "aw_rightWall",
        "priority": 100,
        "parentGroupId": "Awp0ManageGroup"
      },
      "showAddCauseGroupCommandContextMenu": {
        "id": "CAW0AddCauseGroup",
        "uiAnchor": "aw_rightWall",
        "priority": 100,
        "parentGroupId": "Awp0ManageGroup"
      },
      "showAddCauseCommandRPPlacement": {
        "id": "CAW0AddCause",
        "uiAnchor": "rootCauseTreeContextMenu",
        "priority": 1
      },
      "showAddWhyCommandRPPlacement": {
        "id": "CAW0AddWhy",
        "uiAnchor": "rootCauseTreeContextMenu",
        "priority": 1
      },
      "showAdd5WhyCommandRPPlacement": {
        "id": "CAW0Add5Why",
        "uiAnchor": "rootCauseTreeContextMenu",
        "priority": 2
      },
      "showAddIshikawaCommandRPPlacement": {
        "id": "CAW0AddIshikawa",
        "uiAnchor": "rootCauseTreeContextMenu",
        "priority": 3
      },
      "showRootCauseCommandRPPlacement": {
        "id": "showRootCauseCommandRP",
        "uiAnchor": "rootCauseTreeContextMenu",
        "priority": 1
      },
      "showRemoveRootCauseCommandRPPlacement": {
        "id": "showRemoveRootCauseCommandRP",
        "uiAnchor": "rootCauseTreeContextMenu",
        "priority": 1
      },
      "CAW0EditCorrectionActionCmdPlacement": {
        "id": "CAW0EditCorrectionAction",
        "uiAnchor": "aw_oneStep",
        "parentGroupId": "Awp0EditGroup",
        "priority": -1
      },
      "CAW0ReplaceFailureToDefectPlacement": {
        "id": "CAW0ReplaceFailureToDefect",
        "uiAnchor": "aw_toolsAndInfo",
        "priority": 200
      },
      "CAW0ReplaceItemToDefectPlacement": {
        "id": "CAW0AddItemToDefect",
        "uiAnchor": "aw_toolsAndInfo",
        "priority": 200
      },
      "CAW0ReplaceitemToDefectPlacement": {
        "id": "CAW0ReplaceitemToDefect",
        "uiAnchor": "aw_toolsAndInfo",
        "priority": 200
      },
      "CAW0SetPinWhyPlacement": {
        "id": "CAW0SetPinWhy",
        "uiAnchor": "caw0_whyPinCommands",
        "priority": 100
      },
      "CAW0SetUnPinWhyPlacement": {
        "id": "CAW0SetUnPinWhy",
        "uiAnchor": "caw0_whyPinCommands",
        "priority": 100
      },
      "CAW0InContextCommandPlacement": {
        "id": "Awp0InContextReports",
        "uiAnchor": "aw_rightWall",
        "priority": 540,
        "parentGroupId": "Awp0NewGroup"
      },
      "CAW0SaveAsCommandPlacement": {
        "id": "CAW0SaveAs",
        "uiAnchor": "aw_rightWall",
        "priority": 620,
        "parentGroupId": "Awp0NewGroup"
      },
      "CAW0AddSymptomDefectInDriveCommandPlacement": {
        "id": "CAW0AddSymptomDefectInDrive",
        "uiAnchor": "caw0_addSymptomDefectCommand",
        "priority": 1,
        "cellDisplay": {
          "position": "BOTTOM_RIGHT"
        }
      },
      "CAW0RemoveSymptomDefectCellCommandPlacemment": {
        "id": "CAW0RemoveSymptomDefectCell",
        "uiAnchor": "aw_removeSymptomDefectCellCommand",
        "priority": 10,
        "cellDisplay": {
          "hover": true,
          "position": "TOP_RIGHT",
          "selected": true
        }
      },
      "CAW0SaveGraphPrintViewPlacement": {
        "id": "CAW0SaveGraphPrintView",
        "uiAnchor": "aw_methodologyRightSide",
        "priority": 600
      },
      "CAW0PrintGraphViewPlacement": {
        "id": "CAW0PrintGraphView",
        "uiAnchor": "aw_methodologyRightSide",
        "priority": 700
      },
      "CAW0AddFailureToDefectCreateCommandPlacement": {
        "id": "CAW0AddFailureToDefectCreate",
        "uiAnchor": "caw0_addFailureCommand",
        "priority": 1,
        "cellDisplay": {
          "position": "BOTTOM_RIGHT"
        }
      },
      "CAW0RemoveFailureCellCommandPlacemment": {
        "id": "CAW0RemoveFailureCell",
        "uiAnchor": "caw0_removeFailureCommand",
        "priority": 10,
        "cellDisplay": {
          "hover": true,
          "position": "TOP_RIGHT",
          "selected": true
        }
      },
      "Caw0CreateScheduleInPSP": {
        "id": "Caw0CreateScheduleInPSP",
        "uiAnchor": "aw_objectSet_right",
        "priority": 440,
        "parentGroupId": "Caw0CreateScheduleGroup"
      },
      "Caw0CreateScheduleFromTemplateInPSP": {
        "id": "Caw0CreateScheduleFromTemplateInPSP",
        "uiAnchor": "aw_objectSet_right",
        "priority": 630,
        "parentGroupId": "Caw0CreateScheduleGroup"
      },
      "CAW0objectSetViewModeGroup": {
        "id": "CAW0objectSetViewModeGroup",
        "uiAnchor": "caw0_objectSet",
        "priority": 0
      },
      "CAW0objectSetTableViewMode": {
        "id": "CAW0objectSetTableViewMode",
        "priority": 200,
        "parentGroupId": "CAW0objectSetViewModeGroup"
      },
      "CAW0objectSetCompareViewMode": {
        "id": "CAW0objectSetCompareViewMode",
        "priority": 300,
        "parentGroupId": "CAW0objectSetViewModeGroup"
      },
      "CAW0ChangeFiltersGroupPlacement": {
        "id": "CAW0ChangeFiltersGroup",
        "uiAnchor": "caw0_objectSet",
        "priority": 100
      },
      "CAW0showCommonProbItemPlacement": {
        "id": "CAW0showCommonProbItem",
        "priority": 200,
        "parentGroupId": "CAW0ChangeFiltersGroup"
      },
      "CAW0showCommonFailurePlacement": {
        "id": "CAW0showCommonFailure",
        "priority": 300,
        "parentGroupId": "CAW0ChangeFiltersGroup"
      },
      "CAW0addGenericQAPlacement": {
        "id": "Qam0AddQualityActionGroupCommand",
        "uiAnchor": "caw0_objectSet_right",
        "priority": 1
      },
      "CAW0FullScreenPlacement": {
        "id": "CAW0FullScreen",
        "uiAnchor": "aw_methodologyRightSide",
        "priority": 800
      },
      "CAW0ExitFullScreenPlacement": {
        "id": "Awp0ExitFullScreen",
        "uiAnchor": "aw_methodologyRightSide",
        "priority": 800
      },
      "CAW0AddLinkToRCPlacement": {
        "id": "CAW0addLinkToRC",
        "uiAnchor": "aw_objectSet_right",
        "priority": 200
      },
      "CAW0UnlinkToRCPlacement": {
        "id": "CAW0UnlinkToRC",
        "uiAnchor": "aw_objectSet_right",
        "priority": 200
      },
      "Caw0ExpandOutTileNode": {
        "id": "Caw0ExpandOut",
        "uiAnchor": "aw_graph_node",
        "priority": 50
      },
      "CAW0AddTemplateSectionCmdPlacement": {
        "id": "CAW0AddTemplateSectionCmd",
        "uiAnchor": "CAW0_templateSectionCommands",
        "priority": 0
      },
      "CAW0RemoveTemplateSectionCmdPlacement": {
        "id": "CAW0RemoveTemplateSectionCmd",
        "uiAnchor": "CAW0_templateSectionCommands",
        "priority": 0
      },
      "CAW0AddQualityChecklistCommandPlacement": {
        "id": "Apm0AddQualityChecklist",
        "uiAnchor": "caw0_objectSet_right",
        "priority": 300
      },
      "Caw0ChangeFiltersPlacement": {
        "id": "Caw0ChangeFilters",
        "uiAnchor": "aw_primaryWorkArea",
        "priority": 1170
      },
      "CAW0AddReportToPSPDashboardCmdPlacement": {
        "id": "CAW0AddReportToPSPDashboardCmd",
        "uiAnchor": "aw_rightWall",
        "priority": 620,
        "parentGroupId": "Awp0NewGroup"
      },
      "CAW0DeleteQualityChecklistCommandPlacement": {
        "id": "Apm0DeleteQualityChecklist",
        "uiAnchor": "caw0_objectSet_right",
        "priority": 300
      }
    },
    "actions": {
      "Caw0AddScheduleCommandAction": {
        "actionType": "JSFunction",
        "method": "getCreateSchedulePanel",
        "deps": "js/CAW0CreatePanelService",
        "inputData": {
          "commandId": "CAW0CreateSchedule",
          "location": "aw_toolsAndInfo",
          "paletteAndSearchData": {
            "showPaletteAndSearch": true,
            "relationName": "CMHasWorkBreakdown",
            "createRelationTargetObj": "{{commandContext.vmo}}"
          }
        }
      },
      "getCreateScheduleFromTemplatePanelPSP": {
        "actionType": "JSFunction",
        "method": "getCreateSchedulePanel",
        "deps": "js/CAW0CreatePanelService",
        "inputData": {
          "commandId": "CAW0AddTemplateAndCreateSchedule",
          "location": "aw_toolsAndInfo",
          "paletteAndSearchData": {
            "showPaletteAndSearch": true,
            "relationName": "CMHasWorkBreakdown",
            "createRelationTargetObj": "{{commandContext.vmo}}",
            "currentLocationChangeRelated": true
          }
        }
      },
      "performDeleteOnRC": {
        "actionType": "TcSoaService",
        "serviceName": "Core-2019-06-DataManagement",
        "method": "unlinkAndDeleteObjects",
        "inputData": {
          "deleteInput": [
            {
              "container": {
                "type": "unknownType",
                "uid": "AAAAAAAAAAAAAA"
              },
              "objectsToDelete": "{{ctx.mselected}}"
            }
          ]
        },
        "outputData": {
          "deleteObjectsPartialErrors": "partialErrors"
        },
        "events": {
          "success": [
            {
              "condition": "(ctx.xrtPageContext.primaryXrtPageID === 'tc_xrt_Methodology' || ctx.xrtPageContext.secondaryXrtPageID === 'tc_xrt_Methodology') && ctx.selected.modelType.typeHierarchyArray.indexOf('CAW0Defect') > -1 && ctx.selected.props.caw0Context.dbValues[0] !== 'Ishikawa'",
              "name": "performDeleteFromGraph"
            },
            {
              "condition": "(ctx.xrtPageContext.primaryXrtPageID === 'tc_xrt_Methodology' || ctx.xrtPageContext.secondaryXrtPageID === 'tc_xrt_Methodology') && ctx.selected.modelType.typeHierarchyArray.indexOf('CAW0Defect') > -1 && ctx.selected.props.caw0Context.dbValues[0] === 'Ishikawa'",
              "name": "performDeleteFromIshikawaGraph"
            },
            {
              "condition": "(ctx.xrtPageContext.primaryXrtPageID !== 'tc_xrt_Methodology' && ctx.xrtPageContext.secondaryXrtPageID !== 'tc_xrt_Methodology') || ctx.is5WhyDeleted || ctx.selected.modelType.typeHierarchyArray.indexOf('CAW0Ishikawa') > -1",
              "name": "updateTreeTableOnDelete"
            }
          ]
        },
        "actionMessages": {
          "failure": [
            {
              "condition": "(ctx.mselected && ctx.mselected.length === 1 && ( deleteObjectsPartialErrors[0].errorValues[0].code === 422009 || deleteObjectsPartialErrors[0].errorValues[0].code === 422019 || deleteObjectsPartialErrors[0].errorValues[0].code === 422020 || deleteObjectsPartialErrors[0].errorValues[0].code === 422026 || deleteObjectsPartialErrors[0].errorValues[0].code === 422025 ) )",
              "message": "caw0DeleteSingleFailureMessage"
            },
            {
              "condition": "(ctx.mselected && ctx.mselected.length === 1 && deleteObjectsPartialErrors[0].errorValues[0].code !== 422009 && deleteObjectsPartialErrors[0].errorValues[0].code !== 422019 && deleteObjectsPartialErrors[0].errorValues[0].code !== 422020 && deleteObjectsPartialErrors[0].errorValues[0].code !== 422026 && deleteObjectsPartialErrors[0].errorValues[0].code !== 422025)",
              "message": "caw0deleteObjectsSingleFailureMessage"
            },
            {
              "condition": "(ctx.mselected && ctx.mselected.length > 1)",
              "message": "deleteObjectsMultipleFailureMessage"
            }
          ]
        }
      },
      "performDeleteFromGraph": {
        "actionType": "JSFunction",
        "method": "performDeleteFromGraph",
        "inputData": {
          "0": "{{ctx}}"
        },
        "outputData": {
          "deletedNodes": "deletedNodes"
        },
        "events": {
          "success": [
            {
              "name": "updateGraphAfterDelete"
            }
          ]
        },
        "deps": "js/Caw0AnalysisDrawService"
      },
      "performDeleteFromIshikawaGraph": {
        "actionType": "JSFunction",
        "method": "performDeleteFromIshikawaGraph",
        "inputData": {
          "0": "{{ctx}}"
        },
        "outputData": {
          "deletedNodes": "deletedNodes"
        },
        "deps": "js/CAW0IshikawaDrawService"
      },
      "updateGraphAfterDelete": {
        "actionType": "JSFunction",
        "method": "updateGraphAfterDelete",
        "inputData": {
          "graphModel": "{{ctx.graph.graphModel}}",
          "deletedNodes": "{{data.deletedNodes}}"
        },
        "deps": "js/Caw0AnalysisDrawService"
      },
      "setParentNode": {
        "actionType": "JSFunction",
        "method": "setParentNode",
        "inputData": {
          "ctx": "{{ctx}}"
        },
        "events": {
          "success": [
            {
              "name": "performDeleteOnRC"
            }
          ]
        },
        "deps": "js/CAW0EditTreeStructure"
      },
      "updateCOETable": {
        "actionType": "JSFunction",
        "method": "updateCOETable",
        "deps": "js/CAW0capaUtilsService",
        "inputData": {
          "ctx": "{{ctx}}"
        },
        "events": {
          "success": [
            {
              "name": "cdm.relatedModified",
              "eventData": {
                "relatedModified": [
                  "{{ctx.selectedCAPA}}"
                ]
              }
            }
          ]
        }
      },
      "cutQualityActionDelegate": {
        "actionType": "TcSoaService",
        "serviceName": "Core-2014-10-DataManagement",
        "method": "removeChildren",
        "inputData": {
          "inputData": [
            {
              "clientId": "",
              "parentObj": "{{ctx.selectedCorrectiveAction}}",
              "childrenObj": "{{ctx.mselected}}",
              "propertyName": "qam0DependentQualityActions"
            }
          ]
        },
        "events": {
          "success": [
            {
              "name": "updateCOETable"
            },
            {
              "name": "ImplCorrectiveActionsTable.plTable.reload",
              "condition": "ctx.isImplCorrectiveActionSelected"
            },
            {
              "name": "cutToAwClipboard"
            }
          ]
        },
        "actionMessages": {
          "success": [
            {
              "condition": "(ctx.mselected && ctx.mselected.length === 1)",
              "message": "cutSingleCQASuccessful"
            },
            {
              "condition": "(ctx.mselected && ctx.mselected.length > 1)",
              "message": "cutMultipleCQASuccessful"
            }
          ]
        }
      },
      "delete5Why": {
        "actionType": "Event",
        "method": "Event",
        "inputData": {
          "events": [
            {
              "name": "confirm5WhyDeleteEvent"
            }
          ]
        }
      },
      "deleteWhy": {
        "actionType": "Event",
        "method": "Event",
        "inputData": {
          "events": [
            {
              "name": "confirmWhyDeleteEvent"
            }
          ]
        }
      },
      "startGraphEdit": {
        "actionType": "JSFunction",
        "method": "startGraphEdit",
        "inputData": {
          "ctx": "{{ctx}}",
          "graphModel": "{{ctx.graph.graphModel}}"
        },
        "deps": "js/Caw0AnalysisService"
      },
      "saveGraphEdit": {
        "actionType": "JSFunction",
        "method": "saveGraphEdit",
        "inputData": {
          "ctx": "{{ctx}}",
          "graphModel": "{{ctx.graph.graphModel}}"
        },
        "deps": "js/Caw0AnalysisService"
      },
      "cancleGraphEdit": {
        "actionType": "JSFunction",
        "method": "cancleGraphEdit",
        "inputData": {
          "graphModel": "{{ctx.graph.graphModel}}"
        },
        "deps": "js/Caw0AnalysisService"
      },
      "objectEditActionCOE": {
        "actionType": "JSFunction",
        "method": "addEditHandler",
        "inputData": {
          "data": "{{data}}",
          "ctx": "{{ctx}}"
        },
        "deps": "js/CAW0capaUtilsService"
      },
      "startEditRootCauseTable": {
        "actionType": "JSFunction",
        "method": "addEditRootCauseHandler",
        "inputData": {
          "data": "{{data}}",
          "ctx": "{{ctx}}"
        },
        "deps": "js/CAW0capaUtilsService"
      },
      "removeParticipantCommandAction": {
        "actionType": "TcSoaService",
        "serviceName": "Core-2008-06-DataManagement",
        "method": "removeParticipants",
        "inputData": {
          "participants": [
            {
              "itemRev": "{{ctx.pselected}}",
              "participant": "{{ctx.mselected}}"
            }
          ]
        },
        "events": {
          "success": [
            {
              "name": "cdm.relatedModified",
              "eventData": {
                "refreshLocationFlag": false,
                "relatedModified": [
                  "{{ctx.pselected}}"
                ]
              }
            }
          ]
        }
      },
      "CAW0Add5Why": {
        "actionType": "JSFunction",
        "method": "activateCommandPanel",
        "deps": "js/commandPanel.service",
        "inputData": {
          "0": "CAW0Add5Why",
          "1": "aw_toolsAndInfo",
          "3": "{{commandContext}}"
        }
      },
      "CAW0AddWhy": {
        "actionType": "JSFunction",
        "method": "activateCommandPanel",
        "deps": "js/commandPanel.service",
        "inputData": {
          "0": "CAW0AddWhy",
          "1": "aw_toolsAndInfo",
          "3": "{{commandContext}}"
        }
      },
      "CAW0AddIshikawa": {
        "actionType": "JSFunction",
        "method": "activateCommandPanel",
        "deps": "js/commandPanel.service",
        "inputData": {
          "0": "CAW0AddIshikawa",
          "1": "aw_toolsAndInfo",
          "3": "{{commandContext}}"
        }
      },
      "CAW0AddCause": {
        "actionType": "JSFunction",
        "method": "activateCommandPanel",
        "deps": "js/commandPanel.service",
        "inputData": {
          "0": "CAW0AddCause",
          "1": "aw_toolsAndInfo",
          "3": "{{commandContext}}"
        }
      },
      "CAW0AddCauseInGraph": {
        "actionType": "JSFunction",
        "method": "activateCommandPanel",
        "deps": "js/commandPanel.service",
        "inputData": {
          "0": "CAW0AddCauseFromGraph",
          "1": "aw_toolsAndInfo",
          "3": "{{commandContext}}"
        }
      },
      "CAW0AssignResponsibleUserPanel": {
        "actionType": "JSFunction",
        "method": "activateCommandPanel",
        "deps": "js/commandPanel.service",
        "inputData": {
          "commandId": "Qam0AssignResponsibleUser",
          "location": "aw_toolsAndInfo"
        }
      },
      "addRootCausePanel": {
        "actionType": "JSFunction",
        "method": "activateCommandPanel",
        "deps": "js/commandPanel.service",
        "inputData": {
          "commandId": "CAW0AddRootCause",
          "location": "aw_toolsAndInfo"
        }
      },
      "addFailureToDefectPanel": {
        "actionType": "JSFunction",
        "method": "activateCommandPanel",
        "deps": "js/commandPanel.service",
        "inputData": {
          "commandId": "CAW0AddFailureToDefect",
          "location": "aw_toolsAndInfo"
        }
      },
      "additemRevisionToDefectPanel": {
        "actionType": "JSFunction",
        "method": "activateCommandPanel",
        "deps": "js/commandPanel.service",
        "inputData": {
          "commandId": "CAW0AddItemRevision",
          "location": "aw_toolsAndInfo"
        }
      },
      "addDefectInPDPanel": {
        "actionType": "JSFunction",
        "method": "activateCommandPanel",
        "deps": "js/commandPanel.service",
        "inputData": {
          "commandId": "Caw0AddDefectInPD",
          "location": "aw_toolsAndInfo"
        }
      },
      "toCheckDefectOfIssue": {
        "actionType": "JSFunction",
        "method": "activateCommandPanel",
        "deps": "js/commandPanel.service",
        "inputData": {
          "commandId": "CAW0AddSymptomDefect",
          "location": "aw_toolsAndInfo"
        }
      },
      "attachDefectToCapaAsRootCauseFor12": {
        "actionType": "TcSoaService",
        "serviceName": "Internal-Capaonawc-2019-06-QualityIssueManagement",
        "method": "markObjectAsRootCause",
        "inputData": {
          "input": [
            {
              "clientId": "",
              "propertyName": "caw0rootCause",
              "relationName": "CPA0RootCause",
              "itemRevision": "{{ctx.parentCAPA}}",
              "rootCauseObject": "{{ctx.selected}}"
            }
          ]
        },
        "events": {
          "success": [
            {
              "name": "doPostRootCauseActionSuccess"
            }
          ]
        },
        "outputData": {
          "serviceData": ""
        },
        "actionMessages": {
          "success": [
            {
              "message": "successMessage"
            }
          ]
        }
      },
      "attachDefectToCapaAsRootCause": {
        "actionType": "TcSoaService",
        "serviceName": "Internal-Capaonawc-2020-12-QualityIssueManagement",
        "method": "markObjectAsRootCause2",
        "inputData": {
          "input": [
            {
              "clientId": "",
              "relationName": "CPA0RootCause",
              "itemRevision": {
                "type": "{{ctx.parentCAPA.type}}",
                "uid": "{{ctx.parentCAPA.uid}}"
              },
              "rootCauseObject": {
                "type": "{{ctx.selected.type}}",
                "uid": "{{ctx.selected.uid}}"
              }
            }
          ],
          "removeRootCauseMark": false,
          "multipleRootCauseAllowed": true
        },
        "events": {
          "success": [
            {
              "name": "doPostRootCauseActionSuccess"
            }
          ]
        },
        "outputData": {
          "serviceData": "",
          "ctx.isMarkingRC": true
        },
        "actionMessages": {
          "success": [
            {
              "message": "successMessage"
            }
          ],
          "failure": [
            {
              "message": "SOAFailureMessage"
            }
          ]
        }
      },
      "removeRootCauseMark": {
        "actionType": "TcSoaService",
        "serviceName": "Internal-Capaonawc-2020-12-QualityIssueManagement",
        "method": "markObjectAsRootCause2",
        "inputData": {
          "input": [
            {
              "clientId": "",
              "relationName": "CPA0RootCause",
              "itemRevision": {
                "type": "{{ctx.parentCAPA.type}}",
                "uid": "{{ctx.parentCAPA.uid}}"
              },
              "rootCauseObject": {
                "type": "{{ctx.selected.type}}",
                "uid": "{{ctx.selected.uid}}"
              }
            }
          ],
          "removeRootCauseMark": true,
          "multipleRootCauseAllowed": false
        },
        "events": {
          "success": [
            {
              "name": "doPostRootCauseActionSuccess"
            }
          ]
        },
        "outputData": {
          "serviceData": "",
          "ctx.isMarkingRC": false
        },
        "actionMessages": {
          "success": [
            {
              "message": "removeSuccessMessage"
            }
          ],
          "failure": [
            {
              "message": "SOAFailureMessage"
            }
          ]
        }
      },
      "doPostRootCauseActionSuccess": {
        "actionType": "JSFunction",
        "method": "updateTreeTableForRootCause",
        "inputData": {
          "ctx": "{{ctx}}",
          "data": "{{data}}"
        },
        "deps": "js/CAW0EditTreeStructure",
        "events": {
          "success": [
            {
              "name": "cdm.relatedModified",
              "eventData": {
                "relatedModified": [
                  "{{ctx.xrtSummaryContextObject}}"
                ]
              },
              "condition": "ctx.xrtPageContext.primaryXrtPageID === 'tc_xrt_Methodology' || (ctx.xrtPageContext.secondaryXrtPageID === 'tc_xrt_Methodology' && ctx.xrtPageContext.primaryXrtPageID === 'tc_xrt_RootCauseAnalysis')"
            },
            {
              "name": "cdm.relatedModified",
              "eventData": {
                "refreshLocationFlag": true,
                "relatedModified": [
                  "{{ctx.xrtSummaryContextObject}}"
                ]
              },
              "condition": "ctx.xrtPageContext.primaryXrtPageID === 'tc_xrt_Overview' || (ctx.xrtPageContext.secondaryXrtPageID === 'tc_xrt_Overview' && ctx.xrtPageContext.primaryXrtPageID === 'tc_xrt_RootCauseAnalysis')"
            },
            {
              "name": "updateRootCauseNode",
              "condition": "ctx.xrtPageContext.primaryXrtPageID === 'tc_xrt_Methodology' || (ctx.xrtPageContext.secondaryXrtPageID === 'tc_xrt_Methodology' && ctx.xrtPageContext.primaryXrtPageID === 'tc_xrt_RootCauseAnalysis')"
            }
          ]
        }
      },
      "cutFailureObjDelegate": {
        "actionType": "TcSoaService",
        "serviceName": "Core-2014-10-DataManagement",
        "method": "removeChildren",
        "inputData": {
          "inputData": [
            {
              "clientId": "",
              "parentObj": "{{ctx.pselected}}",
              "childrenObj": [
                "{{ctx.selected}}"
              ],
              "propertyName": "CAW0RelatedFailure"
            }
          ]
        },
        "events": {
          "success": [
            {
              "name": "cdm.relatedModified",
              "eventData": {
                "relatedModified": [
                  "{{ctx.xrtSummaryContextObject}}"
                ]
              }
            }
          ]
        },
        "actionMessages": {
          "success": [
            {
              "message": "cutInEstablishTeamSingle"
            }
          ]
        }
      },
      "toCheckDefectInPD": {
        "actionType": "TcSoaService",
        "serviceName": "Core-2007-09-DataManagement",
        "method": "expandGRMRelationsForPrimary",
        "inputData": {
          "primaryObjects": [
            {
              "uid": "{{ctx.selected.uid}}",
              "type": "C2CapaRevision"
            }
          ],
          "pref": {
            "expItemRev": false,
            "returnRelations": false,
            "info": [
              {
                "relationTypeName": "CPA0ProblemDescription",
                "otherSideObjectTypes": ""
              }
            ]
          }
        },
        "outputData": {
          "defectList": "{{function:processSecondaryObject}}",
          "totalFound": "data.defectList.length"
        },
        "events": {
          "success": [
            {
              "condition": "data.defectList.length === 0",
              "name": "call.addDefectInPDPanel"
            }
          ]
        },
        "actionMessages": {
          "success": [
            {
              "condition": "data.defectList.length != 0",
              "message": "defectPresentInPD"
            }
          ]
        },
        "deps": "js/CAW0RootCauseDataService"
      },
      "loadCAW0FailureTypeAndSavedQuery": {
        "actionType": "JSFunctionAsync",
        "method": "ensureModelTypesLoaded",
        "inputData": {
          "typeNames": [
            "Qc0Failure"
          ]
        },
        "events": {
          "success": [
            {
              "condition": "data.defectList.length === 0",
              "name": "call.addFailureToDefectPanel"
            }
          ]
        },
        "deps": "soa/kernel/soaService"
      },
      "toCheckFailureLinkToDefect": {
        "actionType": "TcSoaService",
        "serviceName": "Core-2007-09-DataManagement",
        "method": "expandGRMRelationsForPrimary",
        "inputData": {
          "primaryObjects": [
            {
              "uid": "{{ctx.selected.uid}}",
              "type": "CAW0Defect"
            }
          ],
          "pref": {
            "expItemRev": false,
            "returnRelations": false,
            "info": [
              {
                "relationTypeName": "CAW0RelatedFailure",
                "otherSideObjectTypes": ""
              }
            ]
          }
        },
        "outputData": {
          "defectList": "{{function:processSecondaryObject}}",
          "totalFound": "data.defectList.length"
        },
        "events": {
          "success": [
            {
              "name": "call.loadCAW0FailureTypeAndSavedQuery"
            }
          ]
        },
        "actionMessages": {
          "success": [
            {
              "condition": "data.defectList.length != 0",
              "message": "defectPresentInPD"
            }
          ]
        },
        "deps": "js/CAW0RootCauseDataService"
      },
      "removeTeamMember": {
        "actionType": "TcSoaService",
        "serviceName": "Core-2014-10-DataManagement",
        "method": "removeChildren",
        "inputData": {
          "inputData": [
            {
              "clientId": "",
              "parentObj": {
                "type": "{{ctx.pselected.type}}",
                "uid": "{{ctx.pselected.uid}}"
              },
              "childrenObj": "{{ctx.mselected}}",
              "propertyName": "HasParticipant"
            }
          ]
        },
        "events": {
          "success": [
            {
              "name": "cdm.relatedModified",
              "eventData": {
                "relatedModified": [
                  "{{ctx.xrtSummaryContextObject}}"
                ]
              }
            }
          ]
        },
        "actionMessages": {
          "success": [
            {
              "condition": "(ctx.mselected && ctx.mselected.length === 1)",
              "message": "cutInEstablishTeamSingle"
            },
            {
              "condition": "(ctx.mselected && ctx.mselected.length > 1)",
              "message": "cutInEstablishTeamMultiple"
            }
          ]
        }
      },
      "edit5WhyObject": {
        "actionType": "JSFunction",
        "method": "addEdit5whyHandler",
        "inputData": {
          "data": "{{data}}",
          "ctx": "{{ctx}}"
        },
        "outputData": {
          "inputs": "inputs"
        },
        "events": {
          "success": [
            {
              "name": "call.saveEditAndSubmit5WhyEvent"
            }
          ]
        },
        "deps": "js/CAW0capaUtilsService"
      },
      "saveEditAndSubmit5WhyAction": {
        "actionType": "TcSoaService",
        "serviceName": "Internal-AWS2-2018-05-DataManagement",
        "method": "saveViewModelEditAndSubmitWorkflow2",
        "inputData": {
          "inputs": "{{data.inputs}}"
        },
        "outputData": {
          "serviceData": "",
          "removePropsErrors": "ServiceData.partialErrors"
        },
        "events": {
          "success": [
            {
              "name": "doPostSaveEdit5WhyEventSuccess"
            }
          ],
          "failure": [
            {
              "condition": "errorCode.code === 422010 || errorCode.code === 38522",
              "name": "doPostSaveEdit5WhyEventFailure"
            }
          ]
        },
        "actionMessages": {
          "failure": [
            {
              "condition": "errorCode.code === 38059 || errorCode.code === 38522 || errorCode.code === 422010",
              "message": "caw0RemovePropsOfIshikawaErrorMsg"
            }
          ]
        }
      },
      "doPostSaveEdit5WhyActionSuccess": {
        "actionType": "JSFunction",
        "method": "updateTreeTable",
        "inputData": {
          "ctx": "{{ctx}}",
          "data": "{{data}}"
        },
        "deps": "js/CAW0EditTreeStructure"
      },
      "doPostSaveEdit5WhyActionFailure": {
        "actionType": "JSFunction",
        "method": "resetEditsPostFailure",
        "inputData": {
          "ctx": "{{ctx}}",
          "data": "{{data}}"
        },
        "deps": "js/Caw0PropertyUpdateService"
      },
      "CAW0SetPinWhy": {
        "actionType": "Event",
        "method": "Event",
        "inputData": {
          "events": [
            {
              "name": "addWhy.caw0SetPin",
              "eventData": {
                "data": "{{commandContext}}"
              }
            }
          ]
        }
      },
      "CAW0SetUnPinWhy": {
        "actionType": "Event",
        "method": "Event",
        "inputData": {
          "events": [
            {
              "name": "addWhy.caw0SetUnPin",
              "eventData": {
                "data": "{{commandContext}}"
              }
            }
          ]
        }
      },
      "CAW0Show5Why": {
        "actionType": "Navigate",
        "navigateTo": "com_siemens_splm_clientfx_tcui_xrt_showObject",
        "navigationParams": {
          "uid": "{{ctx.selected.uid}}",
          "pageId": "tc_xrt_Methodology"
        }
      },
      "CAW0ShowInNewWindow5Why": {
        "actionType": "Navigate",
        "navigateTo": "com_siemens_splm_clientfx_tcui_xrt_showObject",
        "navigationParams": {
          "uid": "{{ctx.selected.uid}}",
          "pageId": "tc_xrt_Methodology"
        },
        "navigateIn": "newWindow"
      },
      "CAW0ShowInNewTab5Why": {
        "actionType": "Navigate",
        "navigateTo": "com_siemens_splm_clientfx_tcui_xrt_showObject",
        "navigationParams": {
          "uid": "{{ctx.selected.uid}}",
          "pageId": "tc_xrt_Methodology"
        },
        "navigateIn": "newTab"
      },
      "addCauseGroup": {
        "actionType": "JSFunction",
        "method": "activateCommandPanel",
        "deps": "js/commandPanel.service",
        "inputData": {
          "commandId": "Caw0AddCauseGroup",
          "location": "aw_toolsAndInfo"
        }
      },
      "CAW0SubscribeEventOfReport": {
        "actionType": "JSFunction",
        "method": "subscribeEventOfReport",
        "deps": "js/CAW0capaUtilsService",
        "inputData": {
          "ctx": "{{ctx}}",
          "data": "{{data}}"
        },
        "events": {
          "success": [
            {
              "name": "caw0.activateReportPanel"
            }
          ]
        }
      },
      "getGenerateItemReportComplete": {
        "actionType": "JSFunction",
        "method": "unscribeGetGenerateItemReportComplete",
        "deps": "js/CAW0capaUtilsService",
        "inputData": {
          "data": "{{data.eventData}}"
        }
      },
      "Awp0DeleteAttachCommandAction": {
        "actionType": "Event",
        "method": "Event",
        "inputData": {
          "events": [
            {
              "name": "confirmDeleteAttachEvent",
              "condition": "(ctx.mselected && ctx.mselected.length === 1)"
            },
            {
              "name": "confirmMultipleAttachDeleteEvent",
              "condition": "(ctx.mselected && ctx.mselected.length > 1)"
            }
          ]
        }
      },
      "saveRiskEvaluation": {
        "actionType": "Event",
        "method": "Event",
        "inputData": {
          "events": [
            {
              "name": "severityDefaultValueAssign",
              "condition": "(ctx.xrtSummaryContextObject.props.c2_Severity.dbValues[0] === null)"
            },
            {
              "name": "probabilityDefaultValueAssign",
              "condition": "(ctx.xrtSummaryContextObject.props.c2_Probability.dbValues[0] === null)"
            },
            {
              "name": "detectabilityDefaultValueAssign",
              "condition": "(ctx.xrtSummaryContextObject.props.c2_Detectability.dbValues[0] === null)"
            }
          ]
        },
        "events": {
          "success": [
            {
              "name": "saveEdits"
            }
          ]
        }
      },
      "validateVisibleInReport": {
        "actionType": "JSFunction",
        "method": "validateVisibleInReport",
        "deps": "js/CAW0capaUtilsService",
        "inputData": {
          "ctx": "{{ctx}}",
          "data": "{{data}}"
        },
        "events": {
          "success": [
            {
              "name": "saveEdits"
            }
          ]
        }
      },
      "performUnlinkAndDeleteAttachment": {
        "actionType": "JSFunctionAsync",
        "method": "executePerformUnlinkDelete",
        "deps": "js/cutUtils",
        "inputData": {
          "selectedObjects": {
            "$adapt": "{{ctx.mselected}}"
          }
        },
        "outputData": {
          "returnMsg": "",
          "deleteObjectsPartialErrors": "partialErrors",
          "objectsFailedToDelete": "{{function:getDeleteObjectsPartialErrors}}"
        },
        "events": {
          "success": [
            {
              "name": "cdm.relatedModified",
              "eventData": {
                "relatedModified": [
                  "{{ctx.pselected}}"
                ]
              }
            }
          ],
          "failure": [
            {
              "name": "capaconfirmSingleCutOrCancelEvent",
              "condition": "!(ctx.relationContext === undefined ||  ctx.relationContext && ctx.relationContext.relationInfo.length === 0) && data.objectsFailedToDelete.totalSelected === 1"
            },
            {
              "name": "capaconfirmMultipleCutOrCancelEvent",
              "condition": "!(ctx.relationContext === undefined ||  ctx.relationContext && ctx.relationContext.relationInfo.length === 0) && data.objectsFailedToDelete.totalSelected > 1"
            }
          ]
        },
        "actionMessages": {
          "failure": [
            {
              "message": "deleteObjectsSingleFailureMessage",
              "condition": "ctx.relationContext === undefined ||  ctx.relationContext && ctx.relationContext.relationInfo.length === 0"
            }
          ]
        }
      },
      "performDeleteAttach": {
        "actionType": "TcSoaService",
        "serviceName": "Core-2006-03-DataManagement",
        "method": "deleteObjects",
        "inputData": {
          "objects": {
            "$adapt": "{{ctx.mselected}}"
          }
        },
        "outputData": {
          "deleteObjectsPartialErrors": "partialErrors"
        },
        "events": {
          "success": [
            {
              "name": "cdm.relatedModified",
              "eventData": {
                "relatedModified": "{{ctx.pselected}}"
              }
            }
          ]
        },
        "actionMessages": {
          "failure": [
            {
              "condition": "(ctx.mselected && ctx.mselected.length === 1)",
              "message": "caw0deleteObjectsSingleFailureMessage"
            },
            {
              "condition": "(ctx.mselected && ctx.mselected.length > 1)",
              "message": "deleteObjectsMultipleFailureMessage"
            }
          ]
        }
      },
      "saveAsCapaCommandAction": {
        "actionType": "JSFunction",
        "method": "activateCommandPanel",
        "deps": "js/commandPanel.service",
        "inputData": {
          "commandId": "Caw0CapaShowSaveAs",
          "location": "aw_toolsAndInfo"
        }
      },
      "saveAsorReviseCapaContext": {
        "actionType": "JSFunction",
        "method": "updateSaveAsContext",
        "deps": "js/Awp0ShowSaveAsService",
        "inputData": {
          "selectedObj": "{{ctx.selected}}"
        },
        "events": {
          "success": [
            {
              "name": "SaveAsReviseCapaSuccessful"
            }
          ]
        }
      },
      "addSymptomDefectInDrive": {
        "actionType": "Event",
        "method": "Event",
        "inputData": {
          "events": [
            {
              "name": "awPanel.navigate",
              "eventData": {
                "destPanelId": "CAW0addSymptomDefectInDrive",
                "title": "{{i18n.caw0AddSymptomDefect}}",
                "recreatePanel": true,
                "supportGoBack": true
              }
            }
          ]
        }
      },
      "removeSymptomDefectCellAction": {
        "actionType": "JSFunction",
        "method": "execute",
        "deps": "js/Caw0RemoveSymptomDefectCommandHandler",
        "inputData": {
          "selectedCell": "{{commandContext.vmo}}"
        }
      },
      "confirmSave": {
        "actionType": "JSFunction",
        "method": "confirmSave",
        "deps": "js/Caw0AnalysisDrawService",
        "inputData": {
          "ctx": "{{ctx}}"
        }
      },
      "Caw0PrintGraph": {
        "actionType": "JSFunction",
        "method": "printGraph",
        "deps": "js/Caw0AnalysisDrawService",
        "inputData": {
          "graphModel": "{{ctx.graph.graphModel}}"
        }
      },
      "addFailureToDefectCreate": {
        "actionType": "Event",
        "method": "Event",
        "inputData": {
          "events": [
            {
              "name": "awPanel.navigate",
              "eventData": {
                "destPanelId": "CAW0addFailureToDefectCreate",
                "title": "{{i18n.caw0AddFailure}}",
                "recreatePanel": true,
                "supportGoBack": true
              }
            }
          ]
        }
      },
      "removefailureCellAction": {
        "actionType": "JSFunction",
        "method": "setContextRemoveFailure",
        "deps": "js/Caw0FailuerFiltercommandHandler",
        "inputData": {
          "selectedCell": "{{commandContext.vmo}}"
        }
      },
      "checkEditingPDChild": {
        "actionType": "JSFunction",
        "method": "checkEditingPDChild",
        "deps": "js/Caw0PropertyUpdateService",
        "inputData": {
          "data": "{{data}}",
          "ctx": "{{ctx}}"
        }
      },
      "cutQualityActionDelegateonRCA": {
        "actionType": "TcSoaService",
        "serviceName": "Core-2014-10-DataManagement",
        "method": "removeChildren",
        "inputData": {
          "inputData": [
            {
              "clientId": "",
              "parentObj": "{{ctx.pselected}}",
              "childrenObj": "{{ctx.mselected}}",
              "propertyName": "CAW0QualityActionRel"
            }
          ]
        },
        "events": {
          "success": [
            {
              "name": "cutToAwClipboard"
            },
            {
              "name": "cdm.relatedModified",
              "eventData": {
                "relatedModified": [
                  "{{ctx.xrtSummaryContextObject}}"
                ]
              }
            }
          ]
        },
        "actionMessages": {
          "success": [
            {
              "condition": "(ctx.mselected && ctx.mselected.length === 1)",
              "message": "cutSingleCQASuccessfulRCA"
            },
            {
              "condition": "(ctx.mselected && ctx.mselected.length > 1)",
              "message": "cutMultipleCQASuccessfulRCA"
            }
          ],
          "failure": [
            {
              "message": "SOAFailureMessage"
            }
          ]
        }
      },
      "CAW0changeObjectSetTableView": {
        "actionType": "JSFunction",
        "method": "setObjectSetView",
        "deps": "js/Caw0PropertyUpdateService",
        "inputData": {
          "1": "tableDisplay",
          "value": "{{!ctx.showTableView}}",
          "ctx": "{{ctx}}"
        }
      },
      "CAW0changeObjectSetCompareView": {
        "actionType": "JSFunction",
        "method": "setObjectSetView",
        "deps": "js/Caw0PropertyUpdateService",
        "inputData": {
          "1": "compareDisplay",
          "value": "{{!ctx.showCompareView}}",
          "ctx": "{{ctx}}"
        }
      },
      "toggleShowingProblemItems": {
        "actionType": "JSFunction",
        "method": "toggleFilterValues",
        "deps": "js/CAW0RepeatedDefectsTableService",
        "inputData": {
          "2": "ShowProblemItems",
          "value": "{{!ctx.showProblemItems}}",
          "ctx": "{{ctx}}"
        }
      },
      "toggleShowingFailures": {
        "actionType": "JSFunction",
        "method": "toggleFilterValues",
        "deps": "js/CAW0RepeatedDefectsTableService",
        "inputData": {
          "2": "ShowFailures",
          "value": "{{!ctx.showFailures}}",
          "ctx": "{{ctx}}"
        }
      },
      "CAW0activateExportToExcelPanel": {
        "actionType": "activateCommandPanel",
        "inputData": {
          "commandId": "Awp0ExportToExcel",
          "location": "aw_toolsAndInfo",
          "context": {
            "providerName": "{{data.commandContext.tableDataProviderName}}",
            "dataProvider": "{{data.commandContext.dataProvider}}",
            "columnProvider": "{{data.commandContext.clientScopeURI}}",
            "searchCriteria": "{{data.commandContext.searchCriteria}}",
            "displayTitle": "{{data.commandContext.displayTitle}}"
          }
        }
      },
      "caw0SetInputForAddingQA": {
        "actionType": "JSFunction",
        "method": "caw0SetQualityActionTypeSubTypeRelationInfo",
        "inputData": {
          "ctx": "{{ctx}}",
          "commandContext": "{{commandContext}}"
        },
        "events": {
          "success": [
            {
              "condition": "(ctx.mselected && ctx.mselected.length === 1)",
              "name": "CAW0AddGenericQualityAction"
            }
          ]
        },
        "deps": "js/CAW0AddQualityActionsService"
      },
      "CAW0AddGenericQualityAction": {
        "actionType": "JSFunction",
        "method": "activateCommandPanel",
        "deps": "js/commandPanel.service",
        "inputData": {
          "commandId": "Qam0AddGenericQualityAction",
          "location": "aw_toolsAndInfo"
        }
      },
      "caw0SetInputForAddingQAFromTemplate": {
        "actionType": "JSFunction",
        "method": "caw0SetQualityActionTypeSubTypeRelationInfo",
        "inputData": {
          "ctx": "{{ctx}}",
          "commandContext": "{{commandContext}}"
        },
        "events": {
          "success": [
            {
              "condition": "(ctx.mselected && ctx.mselected.length === 1)",
              "name": "CAW0AddGenericQualityActionFromTemplate"
            }
          ]
        },
        "deps": "js/CAW0AddQualityActionsService"
      },
      "CAW0AddGenericQualityActionFromTemplate": {
        "actionType": "JSFunction",
        "method": "activateCommandPanel",
        "deps": "js/commandPanel.service",
        "inputData": {
          "commandId": "Qam0addQAFromTemplate",
          "location": "aw_toolsAndInfo"
        }
      },
      "caw0SetInputForAddingQAAsTemplate": {
        "actionType": "JSFunction",
        "method": "caw0SetQualityActionTypeSubTypeRelationInfo",
        "inputData": {
          "ctx": "{{ctx}}",
          "commandContext": "{{commandContext}}"
        },
        "events": {
          "success": [
            {
              "condition": "(ctx.mselected && ctx.mselected.length === 1)",
              "name": "CAW0AddGenericQualityActionAsTemplate"
            }
          ]
        },
        "deps": "js/CAW0AddQualityActionsService"
      },
      "CAW0AddGenericQualityActionAsTemplate": {
        "actionType": "JSFunction",
        "method": "activateCommandPanel",
        "deps": "js/commandPanel.service",
        "inputData": {
          "commandId": "Qam0AddQualityActionAsTemplate",
          "location": "aw_toolsAndInfo"
        }
      },
      "openRootCauseslist": {
        "actionType": "JSFunction",
        "method": "activateCommandPanel",
        "deps": "js/commandPanel.service",
        "inputData": {
          "commandId": "Caw0LinkRCList",
          "location": "aw_toolsAndInfo"
        }
      },
      "unlinkToRC": {
        "actionType": "TcSoaService",
        "serviceName": "Core-2010-09-DataManagement",
        "method": "setProperties",
        "inputData": {
          "info": [
            {
              "object": "{{ctx.relationContext.relationInfo[0].relationObject}}",
              "timestamp": "",
              "vecNameVal": [
                {
                  "name": "caw0RootCause",
                  "values": [
                    ""
                  ]
                }
              ]
            }
          ]
        },
        "events": {
          "success": [
            {
              "name": "cdm.relatedModified",
              "eventData": {
                "relatedModified": [
                  "{{ctx.selectedCAPA}}"
                ]
              }
            }
          ]
        },
        "actionMessages": {
          "failure": [
            {
              "message": "SOAFailureMessage"
            }
          ]
        },
        "deps": "js/CAW0AddQualityActionsService"
      },
      "caw0getModelTypeRelationForPaste": {
        "actionType": "JSFunction",
        "method": "getModelTypeRelationsWithValidSourceObjects",
        "deps": "js/xrtObjectSetService",
        "inputData": {
          "sourceObjects": {
            "$adapt": "{{ctx.awClipBoardProvider}}"
          },
          "modelTypeRelations": "{{commandContext.commandContext.modelTypeRelationListMap}}"
        },
        "outputData": {
          "modelTypeRelationObject": ""
        },
        "events": {
          "success": [
            {
              "name": "cdm.relatedModified",
              "eventData": {
                "relatedModified": [
                  "{{ctx.selected}}"
                ]
              }
            }
          ]
        }
      },
      "caw0FullViewModelAction": {
        "actionType": "JSFunction",
        "method": "toggleApplicationFullScreenMode",
        "deps": "js/caw0FullViewModelServices"
      },
      "CAW0PasteCOEAction": {
        "actionType": "JSFunction",
        "method": "pasteCOE",
        "deps": "js/CAW0capaUtilsService",
        "inputData": {
          "targetObject": "{{ctx.selectedCorrectiveAction}}",
          "sourceObjects": {
            "$adapt": "{{ctx.awClipBoardProvider}}"
          },
          "relationType": "qam0DependentQualityActions",
          "ctx": "{{ctx}}"
        },
        "events": {
          "success": [
            {
              "name": "updateCOETable"
            }
          ],
          "failure": [
            {
              "name": "cdm.relatedModified",
              "condition": "errorCode.code === 6007 || errorCode.code === 35010 || errorCode.code === 89009",
              "eventData": {
                "relatedModified": [
                  "{{ctx.selected}}"
                ],
                "createdObjects": "{{function:adaptedClipboardObjectsInput}}"
              }
            }
          ]
        },
        "actionMessages": {
          "success": [
            {
              "condition": "ctx.awClipBoardProvider.length === 1 && ctx.isCOEPresent !== true",
              "message": "pasteSuccessMessage"
            },
            {
              "condition": "ctx.awClipBoardProvider.length > 1 && ctx.isCOEPresent !== true",
              "message": "pasteMultipleSuccessMessage"
            }
          ],
          "failure": [
            {
              "message": "pasteFailureMessage"
            },
            {
              "condition": "errorCode.code === 35015",
              "message": "pasteRelationFailureMessage"
            },
            {
              "condition": "errorCode.code === 6007",
              "message": "pasteSourceDuplicateFailureMessage"
            },
            {
              "condition": "errorCode.code === 48004",
              "message": "pasteTargetSourceSameFailureMessage"
            },
            {
              "condition": "errorCode.code === 6157",
              "message": "pasteSameFolderFailureMessage"
            }
          ]
        }
      },
      "Caw0ExpandOutAction": {
        "actionType": "JSFunction",
        "method": "toggleOutgoingEdges",
        "deps": "js/Caw0AnalysisDrawService",
        "inputData": {
          "graphModel": "{{ctx.graph.graphModel}}",
          "legend": "{{data.legend}}",
          "node": "{{ctx.graph.commandContextItem}}"
        }
      },
      "toCheckVendorData": {
        "actionType": "JSFunction",
        "method": "activateCommandPanel",
        "deps": "js/commandPanel.service",
        "inputData": {
          "commandId": "CAW0SearchVendorTableData",
          "location": "aw_toolsAndInfo"
        }
      },
      "setObjectSourceCommandContext": {
        "actionType": "JSFunction",
        "method": "setObjectSourceCommandContext",
        "inputData": {
          "ctx": "{{ctx}}",
          "$scope": "{{$parent}}"
        },
        "events": {
          "success": [
            {
              "name": "call.toCheckVendorData"
            }
          ]
        },
        "deps": "js/CAW0capaUtilsService"
      },
      "removeVendorTableDataActionConfirm": {
        "actionType": "Event",
        "method": "Event",
        "inputData": {
          "events": [
            {
              "name": "confirmRemoveVendor"
            }
          ]
        }
      },
      "removeVendorTableDataAction": {
        "actionType": "TcSoaService",
        "serviceName": "Internal-Capaonawc-2022-06-QualityIssueManagement",
        "method": "removePlanSublocationData",
        "inputData": {
          "removePlanSublocationDataInput": {
            "primaryObject": {
              "uid": "{{ctx.pselected.uid}}",
              "type": "{{ctx.pselected.type}}"
            },
            "secondaryObject": {
              "uid": "{{ctx.selected.uid}}",
              "type": "{{ctx.selected.type}}"
            }
          }
        },
        "events": {
          "success": [
            {
              "name": "cdm.relatedModified",
              "eventData": {
                "relatedModified": [
                  "{{ctx.xrtSummaryContextObject}}"
                ]
              }
            }
          ]
        }
      },
      "cutVendorDataAction": {
        "actionType": "TcSoaService",
        "serviceName": "Core-2014-10-DataManagement",
        "method": "removeChildren",
        "inputData": {
          "inputData": [
            {
              "clientId": "",
              "parentObj": "{{ctx.pselected}}",
              "childrenObj": "{{ctx.mselected}}",
              "propertyName": "CMReferences"
            }
          ]
        },
        "events": {
          "success": [
            {
              "name": "cdm.relatedModified",
              "eventData": {
                "relatedModified": [
                  "{{ctx.xrtSummaryContextObject}}"
                ]
              }
            },
            {
              "name": "cutToAwClipboard"
            }
          ]
        },
        "actionMessages": {
          "success": [
            {
              "condition": "(ctx.mselected && ctx.mselected.length === 1)",
              "message": "cutSingleVendorDataSuccessful"
            },
            {
              "condition": "(ctx.mselected && ctx.mselected.length > 1)",
              "message": "cutMultipleVendorDataSuccessful"
            }
          ]
        }
      },
      "updateRootCauseNode": {
        "actionType": "JSFunction",
        "method": "updateRootCauseNode",
        "inputData": {
          "ctx": "{{ctx}}"
        },
        "deps": "js/CAW0CAPADrawNode"
      },
      "CAW0AddTemplateAction": {
        "actionType": "Event",
        "method": "Event",
        "inputData": {
          "events": [
            {
              "name": "awPanel.navigate",
              "eventData": {
                "destPanelId": "CAW0AddTemplate",
                "title": "{{i18n.saw1AddTemplate}}",
                "recreatePanel": true,
                "supportGoBack": true
              }
            }
          ]
        }
      },
      "CAW0RemoveTemplateAction": {
        "actionType": "JSFunction",
        "method": "removeTemplateFromProvider",
        "deps": "js/CAW0CreateScheduleFromTemplateService",
        "inputData": {
          "commandContext": "{{commandContext}}"
        }
      },
      "stateParameterForProblemSolvingAction": {
        "actionType": "JSFunction",
        "method": "setStateParameterForProblemSolving",
        "inputData": {
          "ctx": "{{ctx}}"
        },
        "deps": "js/CAW0capaUtilsService",
        "events": {
          "success": [
            {
              "name": "stateParameterModified"
            }
          ]
        }
      },
      "Caw0ShowCreateChangePanel": {
        "actionType": "JSFunction",
        "method": "openCreateChangePanel",
        "deps": "js/Cm1ChangeCommandService",
        "inputData": {
          "commandId": "Cm1ShowCreateChange",
          "location": "aw_toolsAndInfo",
          "params": "{{ctx.state.params}}"
        }
      },
      "searchFilterPanel": {
        "actionType": "JSFunction",
        "method": "activateCommandPanel",
        "deps": "js/commandPanel.service",
        "inputData": {
          "commandId": "Cm1ChangeFilters",
          "location": "aw_navigation"
        }
      },
      "OpenAddReportToPSPPanel": {
        "actionType": "JSFunction",
        "method": "activateCommandPanel",
        "deps": "js/commandPanel.service",
        "inputData": {
          "commandId": "CAW0AddReportToPSPPanel",
          "location": "aw_toolsAndInfo"
        }
      },
      "getPreferenceForDashboard": {
        "actionType": "JSFunction",
        "method": "getPreferenceForDashboard",
        "inputData": {
          "data": "{{data}}"
        },
        "outputData": {
          "preference_Name": "preference_Name"
        },
        "events": {
          "success": [
            {
              "name": "caw0.removeSelectedPSPDashboardReport"
            }
          ]
        },
        "deps": "js/Caw0PropertyUpdateService"
      },
      "removeSelectedPSPDashboardReport": {
        "actionType": "JSFunction",
        "method": "removeSelectedDashboardReport",
        "deps": "js/showMyDashboardService",
        "inputData": {
          "selectedReportDef": "{{ctx.selected}}",
          "reportsSelectedDef": "{{ctx.ReportsContext.selected}}",
          "data": "{{commandContext}}",
          "preference": "{{data.preference_Name}}"
        }
      }
    },
    "conditions": {
      "Caw0FullScreenCmdCondition": {
        "expression": "!ctx.fullscreenDisabled && !ctx.aw_hosting_enabled && !ctx.fullscreen"
      },
      "isParentObjectIsCapa": {
        "expression": "ctx.selected.modelType.typeHierarchyArray.indexOf('C2CapaRevision') > -1 || (ctx.pselected && ctx.pselected.modelType.typeHierarchyArray.indexOf('C2CapaRevision') > -1"
      },
      "isCorrectiveActionPageLocation": {
        "expression": "ctx.xrtPageContext.primaryXrtPageID === 'tc_xrt_CorrectiveAction' || ctx.xrtPageContext.secondaryXrtPageID === 'tc_xrt_CorrectiveAction'"
      },
      "isCorrectiveActionPageWithNone": {
        "expression": " !ctx.NONE && (ctx.xrtPageContext.primaryXrtPageID === 'tc_xrt_CorrectiveAction' || ctx.xrtPageContext.secondaryXrtPageID === 'tc_xrt_CorrectiveAction')"
      },
      "isOnCorrectiveActionSublocation": {
        "expression": "(ctx.xrtPageContext.primaryXrtPageID === 'tc_xrt_CorrectiveAction' || ctx.xrtPageContext.secondaryXrtPageID === 'tc_xrt_CorrectiveAction') && ctx.awClipBoardProvider.length > 0 && ctx.awClipBoardProvider[0].modelType.typeHierarchyArray.indexOf('Qam0QualityAction') > -1 && ((commandContext.commandContext.objectSetSource === 'qam0DependentQualityActions.Qam0QualityAction' && ctx.isCorrectiveActionSelected) || commandContext.commandContext.objectSetSource === 'CPA0CorrectiveAction.Qam0QualityAction' || commandContext.commandContext.objectSetSource === 'CPA0ImplCorrAction.Qam0QualityAction') && conditions.PSPIsNotClosed"
      },
      "isCapaSelected": {
        "expression": "(commandContext.commandContext.objectSetSource === 'qam0DependentQualityActions.Qam0QualityAction' && ctx.isCorrectiveActionSelected) || commandContext.objectSetSource === 'CPA0CorrectiveAction.Qam0QualityAction' || commandContext.objectSetSource === 'CPA0ImplCorrAction.Qam0QualityAction' || commandContext.objectSetSource === 'CPA0ContainmentAction.Qam0QualityAction' || commandContext.objectSetSource === 'CPA0PreventiveAction.Qam0QualityAction' || commandContext.objectSetSource === 'CAW0QualityActionRel.Qam0QualityAction'"
      },
      "isCorrectiveActionPage": {
        "expression": "conditions.isEditAccessGranted && (conditions.isSummaryView || conditions.isNoneView || conditions.isTreeView || conditions.isTableView ) && conditions.isAnyContextActive && (ctx.NONE && !ctx['NONE'].editInProgress()) && ctx.visibleServerCommands.Awp0StartEdit && (ctx.xrtPageContext.primaryXrtPageID === 'tc_xrt_CorrectiveAction' || ctx.xrtPageContext.secondaryXrtPageID === 'tc_xrt_CorrectiveAction') && conditions.PSPIsNotClosed"
      },
      "isCorrectiveActionIsSelectedForPaste": {
        "expression": "conditions.isCorrectiveActionPage && ctx.selectedCorrectiveAction !== null && ctx.awClipBoardProvider.length > 0"
      },
      "isMethodology": {
        "expression": "conditions.isStartEditGroupCommandAllowed && conditions.isNoneContextActive && ctx.visibleServerCommands.Awp0StartEdit && ctx['NONE'].canStartEdit() && (ctx.xrtPageContext.primaryXrtPageID === 'tc_xrt_Methodology' || ctx.xrtPageContext.secondaryXrtPageID === 'tc_xrt_Methodology') && conditions.PSPIsNotClosed"
      },
      "isMethodologytoEdit": {
        "expression": "conditions.PSPIsNotClosed && conditions.isEditAccessGranted && conditions.isEditInProgressInTableOrTreeWithSummary && ctx.visibleServerCommands.Awp0StartEdit && ctx.visibleServerCommands.Awp0StartEdit && ctx.visibleServerCommands.Awp0StartEdit && (ctx.xrtSummaryContextObject.type ==='CAW05Why' || ctx.xrtSummaryContextObject.type==='CAW0Ishikawa') && ((ctx.xrtPageContext.primaryXrtPageID === 'tc_xrt_RootCauseAnalysis' && ctx.xrtPageContext.secondaryXrtPageID === 'tc_xrt_Methodology') ||  ctx.xrtPageContext.primaryXrtPageID === 'tc_xrt_Methodology')"
      },
      "isMethodologyEditing": {
        "expression": "conditions.isMethodologytoEdit && ctx.graph.graphModel.config.inputMode === 'editInputMode' && conditions.PSPIsNotClosed"
      },
      "isRiskEvaluationEditing": {
        "expression": "ctx.editInProgress && (ctx.selected.modelType.typeHierarchyArray.indexOf('C2CapaRevision') > -1  && (ctx.xrtPageContext.primaryXrtPageID === 'tc_xrt_Overview' || ctx.xrtPageContext.secondaryXrtPageID === 'tc_xrt_Overview'))"
      },
      "isCorrectiveActionIsSelected": {
        "expression": "(ctx.xrtPageContext.primaryXrtPageID === 'tc_xrt_CorrectiveAction' || ctx.xrtPageContext.secondaryXrtPageID === 'tc_xrt_CorrectiveAction') && ctx.selectedCorrectiveAction !== null && !ctx.editInProgress"
      },
      "CAWAssignResponsibleUserCommandVisiblity": {
        "expression": "((ctx.selected.modelType.typeHierarchyArray.indexOf('Qam0QualityAction') > -1 ) && (ctx.xrtPageContext.primaryXrtPageID === 'D3_CONTAIN_ACTIONS' || ctx.xrtPageContext.primaryXrtPageID === 'tc_xrt_ContainmentAction' || ctx.xrtPageContext.primaryXrtPageID === 'tc_xrt_CorrectiveAction' || conditions.CAW0CorrectiveActionTableSpecificVisibity || ctx.xrtPageContext.primaryXrtPageID === 'tc_xrt_PreventiveAction' || ctx.xrtPageContext.secondaryXrtPageID === 'tc_xrt_ContainmentAction' || ctx.xrtPageContext.secondaryXrtPageID === 'tc_xrt_CorrectiveAction'|| ctx.xrtPageContext.secondaryXrtPageID === 'tc_xrt_PreventiveAction' || ctx.xrtPageContext.secondaryXrtPageID === 'D3_CONTAIN_ACTIONS' || ctx.xrtPageContext.primaryXrtPageID === 'tc_xrt_QualityActions' || ctx.xrtPageContext.secondaryXrtPageID === 'tc_xrt_QualityActions') && !((ctx.xrtPageContext.primaryXrtPageID === 'tc_xrt_RootCauseAnalysis' || ctx.xrtPageContext.secondaryXrtPageID === 'tc_xrt_RootCauseAnalysis'))) && commandContext.objectSetSourceArray[0].split('.',2)[1] === ctx.selected.modelType.name && (commandContext.objectSetTitleKey ===  ctx.xrtPageContext.primaryXrtPageID || commandContext.objectSetTitleKey ===  ctx.xrtPageContext.secondaryXrtPageID)"
      },
      "CAW0CorrectiveActionTableSpecificVisibity": {
        "expression": "ctx.selected.modelType.typeHierarchyArray.indexOf('Qam0QualityAction') > -1 && ctx.locationContext.modelObject.uid !== ctx.selected.uid && ((ctx.xrtPageContext.primaryXrtPageID === 'tc_xrt_CorrectiveAction'|| ctx.xrtPageContext.secondaryXrtPageID === 'tc_xrt_CorrectiveAction') && ctx.relationContext && ((ctx.relationContext.relationInfo[0].relationObject.type === 'CPA0CorrectiveAction' && commandContext.objectSetSource === 'CPA0CorrectiveAction.Qam0QualityAction' && ctx.selected.props.qam0QualityActionSubtype.dbValues[0] !== 'Confirmation of Effectiveness') || (commandContext.objectSetSource === 'CPA0ImplCorrAction.Qam0QualityAction' && ctx.relationContext.relationInfo[0].relationObject.type === 'CPA0ImplCorrAction') || (commandContext.commandContext.objectSetSource === 'qam0DependentQualityActions.Qam0QualityAction' && ctx.selected.props.qam0QualityActionSubtype.dbValues[0] === 'Confirmation of Effectiveness')))"
      },
      "isQualityActionSelected": {
        "expression": "(ctx.selected.modelType.typeHierarchyArray.indexOf('Qam0QualityAction') > -1)"
      },
      "isCAW0PanelPinned": {
        "expression": "commandContext.pinnedToForm.dbValue"
      },
      "isCAW0PanelUnPinned": {
        "expression": "commandContext.unpinnedToForm.dbValue"
      },
      "isOnRootCauseLocation": {
        "expression": "ctx.editInProgress && ((ctx.xrtPageContext.primaryXrtPageID === 'tc_xrt_RootCauseAnalysis' && ctx.xrtPageContext.secondaryXrtPageID === 'tc_xrt_Overview') || (ctx.xrtPageContext.primaryXrtPageID === 'tc_xrt_Overview' && ctx.selected.modelType.typeHierarchyArray.indexOf('CAW05Why') > -1)) && ctx.tcSessionData.tcMajorVersion >= 13"
      },
      "isRootCauseAnalysis": {
        "expression": "(ctx.xrtPageContext.primaryXrtPageID === 'tc_xrt_RootCauseAnalysis' || ctx.xrtPageContext.secondaryXrtPageID === 'tc_xrt_RootCauseAnalysis' || ctx.xrtPageContext.primaryXrtPageID === 'tc_xrt_Relations' || ctx.xrtPageContext.secondaryXrtPageID === 'tc_xrt_Relations') && ctx.selected.modelType.typeHierarchyArray.indexOf('CAW0Defect') > -1 && ctx.selected.props.caw0Context.uiValues[0] !== '5Why' && ctx.selected.props.caw0Context.dbValues[0] !== 'Ishikawa'"
      },
      "isAddingDefectinRC": {
        "expression": "(ctx.xrtPageContext.primaryXrtPageID === 'tc_xrt_RootCauseAnalysis' || ctx.xrtPageContext.primaryXrtPageID === 'tc_xrt_Relations' || ctx.xrtPageContext.secondaryXrtPageID === 'tc_xrt_Relations') && !conditions.isWhySelected && !conditions.isCauseSelected"
      },
      "isIshikawaAdding": {
        "expression": "ctx.selected.modelType.typeHierarchyArray.indexOf( 'CAW0Defect' ) >-1 && ctx.selected.modelType.typeHierarchyArray.indexOf( 'CAW0Ishikawa' ) === -1 && ctx.selected.modelType.typeHierarchyArray.indexOf( 'CAW05Why' ) === -1 && (ctx.xrtPageContext.primaryXrtPageID === 'tc_xrt_RootCauseAnalysis' || ctx.xrtPageContext.primaryXrtPageID === 'tc_xrt_Relations' || ctx.xrtPageContext.secondaryXrtPageID === 'tc_xrt_Relations') && !conditions.isWhySelected && !conditions.isCauseSelected"
      },
      "adding5Why": {
        "expression": "(((ctx.xrtPageContext.primaryXrtPageID === 'tc_xrt_RootCauseAnalysis' || ctx.xrtPageContext.primaryXrtPageID === 'tc_xrt_Relations' || ctx.xrtPageContext.secondaryXrtPageID === 'tc_xrt_Relations' || ctx.xrtPageContext.primaryXrtPageID === 'tc_xrt_Methodology') && (ctx.selected.modelType.typeHierarchyArray.indexOf('CAW0Defect') > -1 && ctx.tcSessionData.tcMajorVersion >= 13) || (ctx.tcSessionData.tcMajorVersion < 13 && ctx.selected.modelType.typeHierarchyArray.indexOf('CAW0Defect') > -1 && ctx.selected.props.caw0Context.uiValues[0] !== '5Why')) || ((ctx.xrtPageContext.primaryXrtPageID === 'tc_xrt_Methodology' || ctx.xrtPageContext.secondaryXrtPageID === 'tc_xrt_Methodology') && ctx.selected.props.caw0Context.uiValues[0] === 'Ishikawa'))"
      },
      "isIshikawaCauseSelected": {
        "expression": "ctx.selected.props.caw0Context.uiValues[0] === 'Ishikawa'"
      },
      "CAW0cmdCopyCommandVisible": {
        "expression": {
          "$and": [
            {
              "$source": "ctx.selected.isLeaf",
              "$query": {
                "$eq": false
              }
            },
            {
              "$source": "ctx.xrtPageContext.primaryXrtPageID",
              "$query": {
                "$eq": "Root Cause Analysis"
              }
            }
          ]
        }
      },
      "isRootCauseAnalysisAndNotFirstNode": {
        "expression": "conditions.isStartEditGroupCommandAllowed && conditions.isNoneContextActive && ctx.visibleServerCommands.Awp0StartEdit && ctx['NONE'].canStartEdit() && (ctx.xrtPageContext.primaryXrtPageID === 'tc_xrt_RootCauseAnalysis' || ctx.xrtPageContext.secondaryXrtPageID === 'tc_xrt_RootCauseAnalysis') && (ctx.treeVMO.topTreeNode.children[0].levelNdx === 0 && ctx.treeVMO.topTreeNode.children[0].uid === ctx.selected.uid) && conditions.PSPIsNotClosed"
      },
      "cutQualityActVisibilityDelegate": {
        "expression": "ctx.visibleServerCommands.Awp0Cut &&  (ctx.xrtPageContext.primaryXrtPageID === 'tc_xrt_CorrectiveAction' || ctx.xrtPageContext.secondaryXrtPageID === 'tc_xrt_CorrectiveAction') && ctx.selected.modelType.typeHierarchyArray.indexOf('Qam0QualityAction') > -1 && conditions.PSPIsNotClosed"
      },
      "PSPIsNotClosed": {
        "expression": "(ctx.selected.modelType.typeHierarchyArray.indexOf( 'C2CapaRevision' ) >-1 && ctx.selected.props.is_modifiable.dbValues[0] === '1' && ctx.pselected === undefined) || ( ctx.pselected !== undefined && ctx.pselected.modelType.typeHierarchyArray.indexOf( 'C2CapaRevision' ) >-1 && ctx.pselected.props.is_modifiable.dbValues[0] === '1') || ( ctx.parentCAPA !== undefined && ctx.parentCAPA.modelType.typeHierarchyArray.indexOf( 'C2CapaRevision' ) >-1 && ctx.parentCAPA.props.is_modifiable.dbValues[0] === '1')"
      },
      "IssueIsNotClosed": {
        "expression": "(ctx.selected.modelType.typeHierarchyArray.indexOf( 'C2IssueRevision' ) >-1 && ctx.selected.props.is_modifiable.dbValues[0] === '1' && ctx.pselected === undefined) || ( ctx.pselected !== undefined && ctx.pselected.modelType.typeHierarchyArray.indexOf( 'C2IssueRevision' ) >-1 && ctx.pselected.props.is_modifiable.dbValues[0] === '1')"
      },
      "isDefectInPD": {
        "expression": "(ctx.xrtPageContext.primaryXrtPageID === 'tc_xrt_problem_description' || ctx.xrtPageContext.secondaryXrtPageID === 'tc_xrt_problem_description') && ctx.selected.modelType.typeHierarchyArray.indexOf('CAW0Defect') === -1"
      },
      "CAW0cmdCUtCommandVisible": {
        "expression": "(ctx.xrtPageContext.primaryXrtPageID === 'tc_xrt_Team' || ctx.xrtPageContext.secondaryXrtPageID === 'tc_xrt_Team') && ctx.selected.modelType.typeHierarchyArray.indexOf('CAW0Team') > -1 && conditions.PSPIsNotClosed"
      },
      "is5WhySelected": {
        "expression": "((conditions.isWhySelected && ctx.tcSessionData.tcMajorVersion >= 13) || ctx.selected.modelType.typeHierarchyArray.indexOf('CAW05Why') > -1) && (ctx.xrtPageContext.primaryXrtPageID === 'tc_xrt_Methodology' || ctx.xrtPageContext.secondaryXrtPageID === 'tc_xrt_Methodology' || ctx.xrtPageContext.primaryXrtPageID === 'tc_xrt_Relations' || ctx.xrtPageContext.secondaryXrtPageID === 'tc_xrt_Relations' || ctx.xrtPageContext.primaryXrtPageID === 'tc_xrt_RootCauseAnalysis' || ctx.xrtPageContext.secondaryXrtPageID === 'tc_xrt_RootCauseAnalysis')"
      },
      "isWhySelected": {
        "expression": "conditions.PSPIsNotClosed && ctx.selected.modelType.typeHierarchyArray.indexOf( 'CAW0Defect' ) >-1 && (((ctx.selected.props.caw0Context && ctx.selected.props.caw0Context.dbValues[0] === '5Why') || ctx.selected.caw0Context === '5Why') || ((ctx.selected.props.caw0Context && ctx.selected.props.caw0Context.dbValues[0] === 'Why') || ctx.selected.caw0Context === 'Why'))"
      },
      "isCauseSelected": {
        "expression": "conditions.PSPIsNotClosed && ctx.selected.modelType.typeHierarchyArray.indexOf( 'CAW0Defect' ) >-1 && (((ctx.selected.props.caw0Context && ctx.selected.props.caw0Context.dbValues[0] === 'Ishikawa') || ctx.selected.caw0Context === 'Ishikawa'))"
      },
      "isIshikawaSelected": {
        "expression": "ctx.selected.modelType.typeHierarchyArray.indexOf( 'CAW0Ishikawa' ) >-1 && (ctx.xrtPageContext.primaryXrtPageID === 'tc_xrt_RootCauseAnalysis' && ctx.xrtPageContext.secondaryXrtPageID !== 'tc_xrt_Methodology') && ctx.xrtPageContext.primaryXrtPageID !== 'tc_xrt_Methodology'"
      },
      "isCauseSelectedInGraph": {
        "expression": "(ctx.selected.type === 'CauseGroup' || ctx.selected.modelType.typeHierarchyArray.indexOf( 'CAW0Ishikawa' ) >-1) && (ctx.xrtPageContext.primaryXrtPageID === 'tc_xrt_Methodology' || (ctx.xrtPageContext.secondaryXrtPageID === 'tc_xrt_Methodology' && ctx.xrtPageContext.primaryXrtPageID === 'tc_xrt_RootCauseAnalysis'))"
      },
      "isFailureLinked": {
        "expression": "( ctx.selected.modelType.typeHierarchyArray.indexOf( 'CAW0Defect' ) >-1 && ctx.xrtPageContext.primaryXrtPageID === 'tc_xrt_Overview') || (ctx.xrtPageContext.primaryXrtPageID === 'tc_xrt_RootCauseAnalysis' || ctx.xrtPageContext.secondaryXrtPageID === 'tc_xrt_Overview') && ctx.selected.type !== 'Qc0Failure'"
      },
      "CAW0FailureCutCommandVisible": {
        "expression": "( ctx.selected.modelType.typeHierarchyArray.indexOf( 'Qc0Failure' ) >-1 && ctx.xrtPageContext.primaryXrtPageID === 'tc_xrt_Overview') || (ctx.xrtPageContext.primaryXrtPageID === 'tc_xrt_RootCauseAnalysis' && ctx.xrtPageContext.secondaryXrtPageID === 'tc_xrt_Overview') && ctx.selected.modelType.typeHierarchyArray.indexOf( 'Qc0Failure' ) >-1"
      },
      "isRootCauseAnalysisAnd5Why": {
        "expression": "ctx.editInProgress && (ctx.xrtPageContext.primaryXrtPageID === 'tc_xrt_RootCauseAnalysis' && ctx.xrtPageContext.secondaryXrtPageID === 'tc_xrt_Overview') && ctx.selected.modelType.typeHierarchyArray.indexOf('CAW05Why') > -1"
      },
      "isRootCauseAnalysisLocation": {
        "expression": "!ctx['NONE'].editInProgress() && !ctx['TABLE_CONTEXT'].editInProgress() && conditions.isEditAccessGranted && ctx.visibleServerCommands.Awp0StartEditTable && ( ctx.search && ctx.search.totalFound !== undefined ? ( ctx.search.totalFound > 0 ) : true) && ctx['TABLE_CONTEXT'].canStartEdit() && ctx.xrtPageContext.primaryXrtPageID === 'tc_xrt_RootCauseAnalysis' && conditions.PSPIsNotClosed"
      },
      "isRootCauseAnalysisWithout5WhyAndIshikawaForTC12": {
        "expression": "((ctx.xrtPageContext.primaryXrtPageID === 'tc_xrt_Relations' || ctx.xrtPageContext.secondaryXrtPageID === 'tc_xrt_Relations' || ctx.xrtPageContext.primaryXrtPageID === 'tc_xrt_RootCauseAnalysis' || ctx.xrtPageContext.secondaryXrtPageID === 'tc_xrt_RootCauseAnalysis') && ctx.selected.modelType.typeHierarchyArray.indexOf( 'CAW0Defect' ) >-1 && !(ctx.treeVMO.topTreeNode.children[0].levelNdx === 0 && ctx.treeVMO.topTreeNode.children[0].uid === ctx.selected.uid) && ctx.tcSessionData.tcMajorVersion < 13)"
      },
      "isRootCauseAnalysisWithout5WhyAndIshikawa": {
        "expression": "((ctx.xrtPageContext.primaryXrtPageID === 'tc_xrt_Relations' || ctx.xrtPageContext.secondaryXrtPageID === 'tc_xrt_Relations' || ctx.xrtPageContext.primaryXrtPageID === 'tc_xrt_RootCauseAnalysis' || ctx.xrtPageContext.secondaryXrtPageID === 'tc_xrt_RootCauseAnalysis') && ctx.selected.modelType.typeHierarchyArray.indexOf( 'CAW0Defect' ) >-1 && !(ctx.treeVMO.topTreeNode.children[0].levelNdx === 0 && ctx.treeVMO.topTreeNode.children[0].uid === ctx.selected.uid) &&(ctx.selected.props.caw0rootCause.dbValues[0] === null || ctx.selected.props.caw0rootCause.dbValues[ 0 ] === '0' || ctx.selected.props.caw0rootCause.dbValues[ 0 ] === false) && ctx.tcSessionData.tcMajorVersion >= 13)"
      },
      "isRootCauseAnalysisWithout5WhyAndIshikawaWithMark": {
        "expression": "((ctx.xrtPageContext.primaryXrtPageID === 'tc_xrt_Relations' || ctx.xrtPageContext.secondaryXrtPageID === 'tc_xrt_Relations' || ctx.xrtPageContext.primaryXrtPageID === 'tc_xrt_RootCauseAnalysis' || ctx.xrtPageContext.secondaryXrtPageID === 'tc_xrt_RootCauseAnalysis') && ctx.selected.modelType.typeHierarchyArray.indexOf( 'CAW0Defect' ) >-1 && !(ctx.treeVMO.topTreeNode.children[0].levelNdx === 0 && ctx.treeVMO.topTreeNode.children[0].uid === ctx.selected.uid) && (ctx.selected.props.caw0rootCause.dbValues[0] !== null && ctx.selected.props.caw0rootCause.dbValues[ 0 ] === '1' || ctx.selected.props.caw0rootCause.dbValues[ 0 ] === true) && ctx.tcSessionData.tcMajorVersion >= 13)"
      },
      "isAttachmentDeleting": {
        "expression": "ctx.pselected && (ctx.xrtPageContext.primaryXrtPageID === 'tc_xrt_Attachments' || ctx.xrtPageContext.secondaryXrtPageID === 'tc_xrt_Attachments') && (((ctx.pselected.modelType.typeHierarchyArray.indexOf( 'CAW0Defect' ) > -1 || ctx.pselected.modelType.typeHierarchyArray.indexOf('CAW05Why') > -1 || ctx.pselected.modelType.typeHierarchyArray.indexOf('CAW0Ishikawa') > -1) && ctx.mselected.length === 1) || (ctx.pselected.modelType.typeHierarchyArray.indexOf( 'C2CapaRevision' ) >-1 || ctx.pselected.modelType.typeHierarchyArray.indexOf( 'C2IssueRevision' ) >-1))"
      },
      "is5WhyDeleting": {
        "expression": "(ctx.selected.modelType.typeHierarchyArray.indexOf('CAW05Why') > -1 || ctx.selected.modelType.typeHierarchyArray.indexOf('CAW0Ishikawa') > -1) && (ctx.xrtPageContext.primaryXrtPageID !== 'tc_xrt_Relations' && ctx.xrtPageContext.secondaryXrtPageID !== 'tc_xrt_Relations')"
      },
      "isWhyDeleting": {
        "expression": "(ctx.xrtPageContext.primaryXrtPageID === 'tc_xrt_RootCauseAnalysis' || ctx.xrtPageContext.primaryXrtPageID === 'tc_xrt_Overview' || ctx.xrtPageContext.primaryXrtPageID === 'tc_xrt_Methodology') && ctx.selected.modelType.typeHierarchyArray.indexOf('CAW0Defect') > -1"
      },
      "isUserOnCAPASublocation": {
        "expression": "( ctx.selected.modelType.typeHierarchyArray.indexOf( 'C2CapaRevision' ) >-1 ) ||( ctx.selected.modelType.typeHierarchyArray.indexOf( 'CAW0Defect' ) >-1 ) || ( ctx.selected.modelType.typeHierarchyArray.indexOf( 'CAW0Ishikawa' ) >-1 )|| ( ctx.selected.modelType.typeHierarchyArray.indexOf( 'CAW05Why' ) >-1 ) || ( ctx.selected.modelType.typeHierarchyArray.indexOf( 'Qam0QualityAction' ) > -1 && ctx.pselected !== undefined && ctx.pselected.modelType.typeHierarchyArray.indexOf( 'C2CapaRevision' ) >-1 ) || ( ctx.selected.modelType.typeHierarchyArray.indexOf( 'ChangeRequestRevision' ) >-1 && ctx.pselected !== undefined && ctx.pselected.modelType.typeHierarchyArray.indexOf( 'C2CapaRevision' ) >-1 ) || ( (ctx.selected.modelType.typeHierarchyArray.indexOf( 'C2IssueRevision' ) >-1 || ctx.selected.modelType.typeHierarchyArray.indexOf( 'C2IssueNonConfRevision ' ) >-1 || ctx.selected.modelType.typeHierarchyArray.indexOf( 'C2IssueComplaintRevision' ) >-1 ) &&  ctx.pselected !== undefined && ctx.pselected.modelType.typeHierarchyArray.indexOf( 'C2CapaRevision' ) >-1 ) || (ctx.pselected !== undefined && ctx.pselected.modelType.typeHierarchyArray.indexOf( 'C2CapaRevision' ) >-1 )"
      },
      "isUserOnQIMSublocation": {
        "expression": "( ctx.selected.modelType.typeHierarchyArray.indexOf( 'C2IssueRevision' ) >-1 ) ||( ctx.selected.modelType.typeHierarchyArray.indexOf( 'CAW0Defect' ) >-1 ) || ( ctx.selected.modelType.typeHierarchyArray.indexOf( 'Qam0QualityAction' ) > -1 && ctx.pselected !== undefined && ctx.pselected.modelType.typeHierarchyArray.indexOf( 'C2IssueRevision' ) >-1 ) ||( ctx.selected.modelType.typeHierarchyArray.indexOf( 'ChangeRequestRevision' ) >-1 && ctx.pselected !== undefined &&  ctx.pselected.modelType.typeHierarchyArray.indexOf( 'C2IssueRevision' ) >-1 ) || ( (ctx.selected.modelType.typeHierarchyArray.indexOf( 'C2IssueRevision' ) >-1 || ctx.selected.modelType.typeHierarchyArray.indexOf( 'C2IssueNonConfRevision ' ) >-1 || ctx.selected.modelType.typeHierarchyArray.indexOf( 'C2IssueComplaintRevision' ) >-1 || ctx.selected.modelType.typeHierarchyArray.indexOf( 'C2CapaRevision' ) >-1) &&  ctx.pselected !== undefined && ctx.pselected.modelType.typeHierarchyArray.indexOf( 'C2IssueRevision' ) >-1 ) || (ctx.pselected !== undefined && ctx.pselected.modelType.typeHierarchyArray.indexOf( 'C2IssueRevision' ) >-1 )"
      },
      "isUserOnCAPAOrQIMSublocation": {
        "expression": "conditions.isUserOnCAPASublocation || conditions.isUserOnQIMSublocation"
      },
      "PSPOrIssueIsNotClosed": {
        "expression": "conditions.IssueIsNotClosed || conditions.PSPIsNotClosed"
      },
      "isUserOnProblemSolving": {
        "expression": "(ctx.selected.modelType.typeHierarchyArray.indexOf( 'C2IssueRevision' ) > -1  || conditions.isUserOnCAPASublocation)"
      },
      "isUserOnIssueRevision": {
        "expression": "ctx.selected.modelType.typeHierarchyArray.indexOf( 'C2IssueRevision' ) > -1 "
      },
      "isUserOnReportTab": {
        "expression": "(ctx.xrtPageContext.primaryXrtPageID === 'tc_xrt_Rb0Reports' || ctx.xrtPageContext.secondaryXrtPageID === 'tc_xrt_Rb0Reports') && (ctx.visibleServerCommands.Awp0StartEdit || ctx.visibleServerCommands.Awp0Delete) && (conditions.isEditAccessGranted || conditions.isUserOnCAPASublocation) && conditions.PSPIsNotClosed"
      },
      "isUserOnTeamSublocation": {
        "expression": "(ctx.xrtPageContext.primaryXrtPageID === 'tc_xrt_Team' || ctx.xrtPageContext.secondaryXrtPageID === 'tc_xrt_Team')"
      },
      "showRemoveParticipantCondForEstTeam": {
        "expression": "ctx.mselected[0].type === 'CAW0Team' && conditions.PSPIsNotClosed"
      },
      "showRemoveParticipantCondForCapaOwner": {
        "expression": "ctx.mselected[0].type === 'C2_CapaOwner' && conditions.PSPIsNotClosed"
      },
      "showRemoveParticipantCondForCapaApprover": {
        "expression": "ctx.mselected[0].type === 'C2_CapaApprover' && conditions.PSPIsNotClosed"
      },
      "showRemoveParticipantCondForCapaSupplier": {
        "expression": "ctx.mselected[0].type === 'C2_CapaSuppliers' && conditions.PSPIsNotClosed"
      },
      "showRemoveParticipantCondForChangeContributor": {
        "expression": "ctx.mselected[0].type === 'Cm0ChangeContributors' && conditions.PSPIsNotClosed"
      },
      "isSaveAsOnCAPASublocation": {
        "expression": "ctx.selected.modelType.typeHierarchyArray.indexOf( 'C2CapaRevision' ) >-1"
      },
      "isCAW0SetPinWhy": {
        "expression": "commandContext.pinnedToForm.dbValue"
      },
      "isCAW0SetUnPinWhy": {
        "expression": "commandContext.unpinnedToForm.dbValue"
      },
      "CAW0Show5WhyActiveCondition": {
        "expression": "ctx.selected.modelType.typeHierarchyArray.indexOf('CAW05Why') > -1 || ctx.selected.modelType.typeHierarchyArray.indexOf('CAW05Why') > -1"
      },
      "CAW0Show5WhyVisibleCondition": {
        "expression": "conditions.cmdOpenBaseVisibleCondition && ctx.selected.modelType.typeHierarchyArray.indexOf('CAW05Why') > -1"
      },
      "isCauseDeletingInMethodology": {
        "expression": "((ctx.visibleServerCommands.Awp0Delete && ctx.selected.modelType.typeHierarchyArray.indexOf('CAW0Defect') > -1 && ctx.selected.props.caw0Context.dbValues[0] !== 'Ishikawa' && ctx.selected.props.caw0Context.dbValues[0] !== '5Why' && ctx.xrtPageContext.primaryXrtPageID === 'tc_xrt_problem_description' && conditions.PSPIsNotClosed) || conditions.isCauseGroupSelectedInMethodology || ((ctx.pselected !== undefined && ctx.pselected.modelType.typeHierarchyArray.indexOf('C2CapaRevision')>-1 && ctx.xrtPageContext.primaryXrtPageID === 'tc_xrt_Relations' || ctx.xrtPageContext.secondaryXrtPageID === 'tc_xrt_Relations')) || (ctx.pselected !== undefined && ctx.pselected.modelType.typeHierarchyArray.indexOf('C2CapaRevision')>-1 && ctx.xrtPageContext.primaryXrtPageID === 'tc_xrt_PreventiveAction' || ctx.xrtPageContext.secondaryXrtPageID === 'tc_xrt_PreventiveAction')) || conditions.isMultiSelectedObjectInRCA"
      },
      "isMultiSelectedObjectInRCA": {
        "expression": "ctx.xrtPageContext.primaryXrtPageID === 'tc_xrt_RootCauseAnalysis' && ctx.mselected.length > 1"
      },
      "isCauseSelectedInMethodology": {
        "expression": "(ctx.selected.modelType.typeHierarchyArray.indexOf('CAW0Defect') > -1 && (ctx.xrtPageContext.primaryXrtPageID === 'tc_xrt_RootCauseAnalysis' && ctx.xrtPageContext.secondaryXrtPageID === 'tc_xrt_Methodology' && ctx.selected.props.caw0Context.dbValues[0] === 'Ishikawa') || (ctx.xrtPageContext.primaryXrtPageID === 'tc_xrt_Methodology' && ctx.selected.props.caw0Context.dbValues[0] === 'Ishikawa'))"
      },
      "isCauseGroupSelectedInMethodology": {
        "expression": "((ctx.xrtPageContext.primaryXrtPageID === 'tc_xrt_Methodology' || ctx.xrtPageContext.secondaryXrtPageID === 'tc_xrt_Methodology') && ctx.selected.type === 'CauseGroup')"
      },
      "isIshikawaSelectedInMethodology": {
        "expression": "((ctx.xrtPageContext.primaryXrtPageID === 'tc_xrt_Methodology' || (ctx.xrtPageContext.secondaryXrtPageID === 'tc_xrt_Methodology'&& ctx.xrtPageContext.primaryXrtPageID === 'tc_xrt_RootCauseAnalysis')) && (ctx.selected.modelType.typeHierarchyArray.indexOf('CAW0Ishikawa')>-1 || ctx.pselected.modelType.typeHierarchyArray.indexOf('CAW0Ishikawa')>-1)) && conditions.PSPIsNotClosed"
      },
      "showCAW0GenerateReportCommand": {
        "expression": "(ctx.selected.modelType.typeHierarchyArray.indexOf('C2CapaRevision')>-1)"
      },
      "isOnCAPARelationTab": {
        "expression": "(ctx.xrtPageContext.primaryXrtPageID === 'tc_xrt_Relations' || ctx.xrtPageContext.secondaryXrtPageID === 'tc_xrt_Relations') && ((ctx.selected.modelType.typeHierarchyArray.indexOf('C2CapaRevision')>-1 || ctx.pselected.modelType.typeHierarchyArray.indexOf('C2CapaRevision')>-1) || (ctx.selected.modelType.typeHierarchyArray.indexOf('CAW0Defect')>-1 || ctx.pselected.modelType.typeHierarchyArray.indexOf('CAW0Defect')>-1))"
      },
      "removeResponsibleUserCmdCond": {
        "expression": "ctx.panelContext.sidenavCommandId==='CAW0AddQualityAction' || ctx.sidenavCommandId==='CAW0AddQualityAction'"
      },
      "isOnPDandDefectSelected": {
        "expression": "commandContext.objectSetSource==='CPA0ProblemDescription.CAW0Defect' && (ctx.xrtPageContext.primaryXrtPageID === 'tc_xrt_problem_description' || ctx.xrtPageContext.secondaryXrtPageID === 'tc_xrt_problem_description') && ctx.selected.modelType.typeHierarchyArray.indexOf('CAW0Defect') > -1"
      },
      "isQASelectedOnCapaOverview": {
        "expression": "(ctx.xrtPageContext.primaryXrtPageID === 'tc_xrt_Overview' || ctx.xrtPageContext.secondaryXrtPageID === 'tc_xrt_Overview') && ctx.selected.modelType.typeHierarchyArray.indexOf('Qam0QualityAction')>-1 && ctx.pselected.modelType.typeHierarchyArray.indexOf('C2CapaRevision')>-1"
      },
      "isDeprecatedScheduleAndForm": {
        "expression": "ctx.selected.modelType.typeHierarchyArray.indexOf('C2Preventive')>-1 || ctx.selected.modelType.typeHierarchyArray.indexOf('C2Corrective')>-1 || ctx.selected.modelType.typeHierarchyArray.indexOf('C2Investigation')>-1 || ctx.selected.modelType.typeHierarchyArray.indexOf('C2Containment')>-1 || ctx.selected.modelType.typeHierarchyArray.indexOf('C2Verification')>-1 || ctx.selected.modelType.typeHierarchyArray.indexOf('C2CapaResolution')>-1 || ctx.selected.modelType.typeHierarchyArray.indexOf('C2CapaCause')>-1"
      },
      "whenToShowExportToExcel": {
        "expression": "(commandContext.objectSetSource !== 'CPA0ProblemDescription.CAW0Defect')"
      },
      "removeSymptomDefectCellCond": {
        "expression": "(ctx.sublocation.nameToken === 'com.siemens.splm.clientfx.tcui.xrt.objectNavigationSubLocation') && (ctx.panelContext.destPanelId === 'addObjectPrimarySub')"
      },
      "isVisibleInReportEditing": {
        "expression": "ctx.editInProgress && ((ctx.xrtPageContext.primaryXrtPageID === 'tc_xrt_RootCauseAnalysis' && ctx.xrtPageContext.secondaryXrtPageID === 'tc_xrt_Attachments') || ctx.xrtPageContext.primaryXrtPageID === 'tc_xrt_Attachments')"
      },
      "isNotCAPARelationSublocation": {
        "expression": "!((ctx.xrtPageContext.primaryXrtPageID === 'tc_xrt_Relations' || ctx.xrtPageContext.secondaryXrtPageID === 'tc_xrt_Relations') && ctx.xrtSummaryContextObject.modelType.typeHierarchyArray.indexOf('C2CapaRevision')>-1) && ctx.tcSessionData.tcMajorVersion >= 13"
      },
      "caw0DisableCutCmdPDCondition": {
        "expression": "(ctx.xrtPageContext.primaryXrtPageID === 'tc_xrt_problem_description' || ctx.xrtPageContext.secondaryXrtPageID === 'tc_xrt_problem_description') && ctx.pselected !== undefined && ctx.pselected.modelType.typeHierarchyArray.indexOf('C2CapaRevision')>-1 && ctx.selected.modelType.typeHierarchyArray.indexOf('CAW0Defect')>-1"
      },
      "caw0DisableCutCmdOverview": {
        "expression": "(ctx.xrtPageContext.secondaryXrtPageID === 'tc_xrt_Overview' || ctx.xrtPageContext.primaryXrtPageID === 'tc_xrt_Overview') && (ctx.xrtPageContext.primaryXrtPageID !== 'tc_xrt_RootCauseAnalysis') && (ctx.pselected.modelType.typeHierarchyArray.indexOf('C2CapaRevision')>-1 && ctx.selected.modelType.typeHierarchyArray.indexOf('CAW0Defect')>-1)"
      },
      "toDisableInfoCommand": {
        "expression": "ctx.selected && ctx.mselected.length === 1 && (ctx.selected.modelType.typeHierarchyArray.indexOf( 'CAW0Defect' ) > -1 || ctx.selected.modelType.typeHierarchyArray.indexOf('CAW05Why') > -1 || ctx.selected.modelType.typeHierarchyArray.indexOf('CAW0Ishikawa') > -1) && ctx.tcSessionData.tcMajorVersion < 13"
      },
      "isNotEditInProgress": {
        "expression": "!ctx.editInProgress"
      },
      "cutQualityActVisibilityDelegateonRCA": {
        "expression": "ctx.visibleServerCommands.Awp0Cut &&  (ctx.xrtPageContext.primaryXrtPageID === 'tc_xrt_RootCauseAnalysis' || ctx.xrtPageContext.secondaryXrtPageID === 'tc_xrt_RootCauseAnalysis') && ctx.selected.modelType.typeHierarchyArray.indexOf('Qam0QualityAction') > -1"
      },
      "isRepeatedTableViewSelected": {
        "expression": "ctx.showTableView"
      },
      "isRepeatedCompareViewSelected": {
        "expression": "ctx.showCompareView"
      },
      "showCommonProbItem": {
        "expression": "ctx.showProblemItems"
      },
      "showCommonFailure": {
        "expression": "ctx.showFailures"
      },
      "isDefectSelected": {
        "expression": "ctx.selected.modelType.typeHierarchyArray.indexOf('CAW0Defect') > -1"
      },
      "isItemRevisionSelected": {
        "expression": "ctx.selected.modelType.typeHierarchyArray.indexOf('ItemRevision') > -1"
      },
      "checkIfSelectedQAHasRC": {
        "expression": "ctx.tcSessionData.tcMajorVersion >= 13 && ctx.selected.modelType.typeHierarchyArray.indexOf('Qam0QualityAction') > -1 && ctx.relationContext && ctx.relationContext.relationInfo[0].relationObject.props.caw0RootCause.dbValue === null && ((ctx.relationContext.relationInfo[0].relationObject.type === 'CPA0CorrectiveAction' && commandContext.objectSetSource === 'CPA0CorrectiveAction.Qam0QualityAction') || (commandContext.objectSetSource === 'CPA0ImplCorrAction.Qam0QualityAction' && ctx.relationContext.relationInfo[0].relationObject.type === 'CPA0ImplCorrAction')) && conditions.PSPIsNotClosed"
      },
      "checkIfSelectedQAHasNotRC": {
        "expression": "ctx.tcSessionData.tcMajorVersion >= 13 && ctx.selected.modelType.typeHierarchyArray.indexOf('Qam0QualityAction') > -1 && ctx.relationContext && ctx.relationContext.relationInfo[0].relationObject.props.caw0RootCause.dbValue !== null && ((ctx.relationContext.relationInfo[0].relationObject.type === 'CPA0CorrectiveAction' && commandContext.objectSetSource === 'CPA0CorrectiveAction.Qam0QualityAction') || (commandContext.objectSetSource === 'CPA0ImplCorrAction.Qam0QualityAction' && ctx.relationContext.relationInfo[0].relationObject.type === 'CPA0ImplCorrAction')) && conditions.PSPIsNotClosed"
      },
      "selectPlanSublocationAddObject": {
        "expression": "ctx.activeToolsAndInfoCommand.commandId === 'CAW0SearchVendorTableData' && commandContext.modelTypeRelations === ctx.modelTypeRelations"
      },
      "xrtIncludeAddCommandPlanSublocation": {
        "expression": "(ctx.xrtPageContext.primaryXrtPageID === 'tc_xrt_PSP_Plan' || ctx.xrtPageContext.secondaryXrtPageID === 'tc_xrt_PSP_Plan') && !ctx.editInProgress && (commandContext.xrtCommands['com.teamcenter.rac.common.AddNew'] || commandContext.xrtCommands['com.teamcenter.rac.common.AddReference'] || commandContext.xrtCommands['CAW0SearchVendorTableData'])"
      },
      "isOnRemoveVendorObject": {
        "expression": "(ctx.xrtPageContext.primaryXrtPageID === 'tc_xrt_PSP_Plan' || ctx.xrtPageContext.secondaryXrtPageID === 'tc_xrt_PSP_Plan') && commandContext.objectSetSourceArray[0].split('.',2)[1] === ctx.selected.modelType.name"
      },
      "caw0CutCmdVendorDataHandlerCondition": {
        "expression": "(ctx.xrtPageContext.primaryXrtPageID === 'tc_xrt_PSP_Plan' || ctx.xrtPageContext.secondaryXrtPageID === 'tc_xrt_PSP_Plan') && ((ctx.selected.modelType.typeHierarchyArray.indexOf('Vendor') > -1) || (ctx.selected.modelType.typeHierarchyArray.indexOf('CompanyLocation') > -1) || (ctx.selected.modelType.typeHierarchyArray.indexOf('CompanyContact') > -1) || (ctx.selected.modelType.typeHierarchyArray.indexOf('Vm0PrtnrContractRevision') > -1) || (ctx.selected.modelType.typeHierarchyArray.indexOf('Ret0Brand') > -1))"
      },
      "isOnRemoveEventFromPlan": {
        "expression": "(ctx.xrtPageContext.primaryXrtPageID === 'tc_xrt_PSP_Plan' || ctx.xrtPageContext.secondaryXrtPageID === 'tc_xrt_PSP_Plan') && commandContext.objectSetTitleKey ==='tc_xrt_PSP_Event' && ctx.selected.modelType.typeHierarchyArray.indexOf('Prg0AbsEvent') > -1"
      },
      "isOnRemoveProjectFromPlan": {
        "expression": "(ctx.xrtPageContext.primaryXrtPageID === 'tc_xrt_PSP_Plan' || ctx.xrtPageContext.secondaryXrtPageID === 'tc_xrt_PSP_Plan') && commandContext.objectSetTitleKey ==='tc_xrt_PSP_Project' && ctx.selected.modelType.typeHierarchyArray.indexOf('Prg0AbsPlan') > -1"
      },
      "CAW0AddTemplateSectionCmdVisibility": {
        "expression": "commandContext.dataProviders.selectedSchedules.viewModelCollection.loadedVMObjects.length === 0"
      },
      "CAW0RemoveTemplateSectionCmdVisibility": {
        "expression": "commandContext.dataProviders.selectedSchedules.selectedObjects.length === 1"
      },
      "Caw0ShowFilterCmdCond": {
        "expression": "(ctx.search.totalFound > 0 || ctx.search.criteria.searchString) && ctx.search.provider === 'CAW0PSPProvider'"
      },
      "isPSPorQIMSublocation": {
        "expression": "((ctx.mselected.length === 0 ) && ( ctx.search.provider === 'CAW0PSPProvider'))"
      },
      "isPSPReportDashboard": {
        "expression": "ctx.sublocation.nameToken === 'com.siemens.splm.client.qualityCenterManager:showPSPDashboard' || ctx.sublocation.nameToken === 'com.siemens.splm.client.qualityCenterManager:showQIMDashboard'"
      },
      "isOnRemoveVendorObjectAndParentObject": {
        "expression": "ctx.selected.modelType.typeHierarchyArray.indexOf('Vendor') > -1 || ctx.selected.modelType.typeHierarchyArray.indexOf('Factory') > -1 || ctx.selected.modelType.typeHierarchyArray.indexOf('Prg0AbsPlan') > -1"
      },
      "isDefectModifiable": {
        "expression": "((ctx.pselected === undefined || ctx.pselected === null) && (ctx.selected.modelType.typeHierarchyArray.indexOf( 'CAW0Defect' ) >-1 || ctx.selected.modelType.typeHierarchyArray.indexOf('CAW05Why') > -1 || ctx.selected.modelType.typeHierarchyArray.indexOf('CAW0Ishikawa') > -1) && ctx.selected.props.is_modifiable.dbValues[0] === '1') || (ctx.pselected !== undefined && (ctx.pselected.modelType.typeHierarchyArray.indexOf( 'CAW0Defect' ) > -1 || ctx.pselected.modelType.typeHierarchyArray.indexOf('CAW05Why') > -1 || ctx.pselected.modelType.typeHierarchyArray.indexOf('CAW0Ishikawa') > -1 ) && ((ctx.pselected.props.is_modifiable !== undefined && ctx.pselected.props.is_modifiable.dbValues[0] === '1') || (ctx.pselected.is_modifiable !== undefined && ctx.pselected.is_modifiable.dbValues[0] === '1'))) || ((ctx.xrtPageContext.secondaryXrtPageID === 'tc_xrt_Overview' || ctx.xrtPageContext.primaryXrtPageID === 'tc_xrt_Overview') && ctx.xrtPageContext.primaryXrtPageID === 'tc_xrt_RootCauseAnalysis' && (ctx.pselected.modelType.typeHierarchyArray.indexOf('C2CapaRevision')>-1 && ctx.selected.modelType.typeHierarchyArray.indexOf('CAW0Defect')>-1 && ctx.selected.props.is_modifiable.dbValues[0] === '1'))"
      },
      "CAW0AddCmdEnableCondition": {
        "expression": "conditions.PSPOrIssueIsNotClosed || conditions.isDefectModifiable"
      },
      "CAW0DisableCutCmdForRelIssuesAndPSPOnCapaOvrvwCond": {
        "expression": "(ctx.xrtPageContext.primaryXrtPageID === 'tc_xrt_Overview' || ctx.xrtPageContext.secondaryXrtPageID === 'tc_xrt_Overview') && (ctx.pselected !== undefined && ctx.pselected.modelType.typeHierarchyArray.indexOf('C2CapaRevision')>-1 && ctx.selected !== undefined && (ctx.selected.modelType.typeHierarchyArray.indexOf('C2IssueRevision')>-1 || ctx.selected.modelType.typeHierarchyArray.indexOf('C2CapaRevision')>-1) && ctx.pselected.props.is_modifiable.dbValues[0] !== '1')"
      },
      "CAW0DisableDeleteInPlanSublocationHandlerCondition": {
        "expression": "(ctx.xrtPageContext.primaryXrtPageID === 'tc_xrt_PSP_Plan' || ctx.xrtPageContext.secondaryXrtPageID === 'tc_xrt_PSP_Plan') && ctx.selected !== undefined && ctx.selected.modelType.typeHierarchyArray.indexOf( 'Apm0QualityChecklist' ) === -1 && ctx.pselected !== undefined && (ctx.pselected.modelType.typeHierarchyArray.indexOf('C2IssueRevision')>-1 || ctx.pselected.modelType.typeHierarchyArray.indexOf('C2CapaRevision')>-1) && !conditions.PSPOrIssueIsNotClosed"
      },
      "CAW0DisableProjectCutCmdInPlanSublocationCondition": {
        "expression": "conditions.isOnRemoveProjectFromPlan && !conditions.PSPOrIssueIsNotClosed"
      },
      "isSelectedChangeObjectModifiable": {
        "expression": "ctx.xrtSummaryContextObject && ctx.xrtSummaryContextObject.props.is_modifiable.dbValues[0] === '1'"
      },
      "isParticipantPlatformVisible": {
        "expression": "ctx.tcSessionData.tcMajorVersion >= 14 && ctx.tcSessionData.tcMinorVersion >= 1"
      },
      "CAW0AddParticipantTableComamndVisiblity": {
        "expression": "commandContext && commandContext.name === 'particpantTableDataProvider' && (conditions.isSelectedChangeObjectModifiable || conditions.isParticipantPlatformVisible)"
      },
      "CAW0AddParticipantCommandVisibility": {
        "expression": "(((commandContext.objectSetSource.indexOf('HasParticipant.') === 0) || (commandContext.objectSetSource.indexOf('fnd0FirstTargetParticipants.') === 0)) && commandContext.dataProvider.selectedObjects.length === 0 && ( ctx.pselected === null || ctx.selected.modelType.parentTypeName !== 'Participant') && conditions.isSelectedChangeObjectModifiable)  || conditions.isParticipantPlatformVisible || conditions.CAW0AddParticipantTableComamndVisiblity"
      },
      "CAW0ReplaceParticipantTableComamndVisiblity": {
        "expression": "commandContext && commandContext.name === 'particpantTableDataProvider' && commandContext.selectedObjects && commandContext.selectedObjects.length === 1 && commandContext.selectedObjects[0].modelType.typeHierarchyArray.indexOf( 'Participant' ) > -1 && (conditions.isSelectedChangeObjectModifiable  || conditions.isParticipantPlatformVisible)"
      },
      "CAW0ReplaceParticipantCommandVisibility": {
        "expression": "(((commandContext.objectSetSource.indexOf('HasParticipant.') == 0) || (commandContext.objectSetSource.indexOf('fnd0FirstTargetParticipants.') == 0)) && commandContext.dataProvider.viewModelCollection.totalObjectsLoaded > 0 && commandContext.dataProvider.selectedObjects.length != 0 && ( ctx.pselected == null || ctx.selected.modelType.typeHierarchyArray.indexOf('Participant') > -1) && (conditions.isSelectedChangeObjectModifiable || conditions.isParticipantPlatformVisible)) || conditions.CAW0ReplaceParticipantTableComamndVisiblity"
      },
      "CAW0AttachmentsDatasetRepCmdDelegateActiveCondition": {
        "expression": " ctx.selected !== undefined && ctx.selected.modelType.typeHierarchyArray.indexOf('Dataset') > -1 && ctx.pselected !== undefined && (ctx.xrtPageContext.primaryXrtPageID === 'tc_xrt_Attachments' || ctx.xrtPageContext.secondaryXrtPageID === 'tc_xrt_Attachments' || conditions.CAW0IsPSPPDOrIssueSDSubLocation) && (((ctx.pselected.modelType.typeHierarchyArray.indexOf( 'CAW0Defect' ) > -1 || ctx.pselected.modelType.typeHierarchyArray.indexOf('CAW05Why') > -1 || ctx.pselected.modelType.typeHierarchyArray.indexOf('CAW0Ishikawa') > -1) && ctx.mselected.length === 1) || (ctx.pselected.modelType.typeHierarchyArray.indexOf( 'C2CapaRevision' ) >-1 || ctx.pselected.modelType.typeHierarchyArray.indexOf( 'C2IssueRevision' ) >-1))"
      },
      "CAW0DisableAttachmentsDatasetRepCmdCondition": {
        "expression": "ctx.selected !== undefined && conditions.CAW0AttachmentsDatasetRepCmdDelegateActiveCondition && (((ctx.pselected.modelType.typeHierarchyArray.indexOf( 'C2CapaRevision' ) >-1 || ctx.pselected.modelType.typeHierarchyArray.indexOf( 'C2IssueRevision' ) >-1) && !conditions.PSPOrIssueIsNotClosed) || ((ctx.pselected.modelType.typeHierarchyArray.indexOf( 'CAW0Defect' ) > -1 || ctx.pselected.modelType.typeHierarchyArray.indexOf('CAW05Why') > -1 || ctx.pselected.modelType.typeHierarchyArray.indexOf('CAW0Ishikawa') > -1) && !conditions.isDefectModifiable))"
      },
      "CAW0DeleteAttachmentCmdEnableCondition": {
        "expression": "ctx.selected !== undefined && (((ctx.pselected.modelType.typeHierarchyArray.indexOf( 'C2CapaRevision' ) >-1 || ctx.pselected.modelType.typeHierarchyArray.indexOf( 'C2IssueRevision' ) >-1) && conditions.PSPOrIssueIsNotClosed) || ((ctx.pselected.modelType.typeHierarchyArray.indexOf( 'CAW0Defect' ) > -1 || ctx.pselected.modelType.typeHierarchyArray.indexOf('CAW05Why') > -1 || ctx.pselected.modelType.typeHierarchyArray.indexOf('CAW0Ishikawa') > -1) && conditions.isDefectModifiable))"
      },
      "CAW0IsPSPPDOrIssueSDSubLocation": {
        "expression": "(ctx.xrtPageContext.primaryXrtPageID === 'tc_xrt_problem_description' || ctx.xrtPageContext.secondaryXrtPageID === 'tc_xrt_problem_description') || (ctx.xrtPageContext.primaryXrtPageID === 'tc_xrt_symptom_description' || ctx.xrtPageContext.secondaryXrtPageID === 'tc_xrt_symptom_description')"
      },
      "CAW0DisableDelAndCutCmdsInIssueOverviewCondition": {
        "expression": "(ctx.xrtPageContext.secondaryXrtPageID === 'tc_xrt_Overview' || ctx.xrtPageContext.primaryXrtPageID === 'tc_xrt_Overview') && (ctx.pselected !== undefined && ctx.pselected.modelType.typeHierarchyArray.indexOf('C2IssueRevision')>-1) && (ctx.selected.modelType.typeHierarchyArray.indexOf('C2IssueRevision')>-1 || ctx.selected.modelType.typeHierarchyArray.indexOf('C2CapaRevision')>-1) && !conditions.IssueIsNotClosed"
      },
      "CAW0IssueOverviewHideRemoveParticipantsCmdCondition": {
        "expression": "(ctx.xrtPageContext.secondaryXrtPageID === 'tc_xrt_Overview' || ctx.xrtPageContext.primaryXrtPageID === 'tc_xrt_Overview') && (ctx.pselected !== undefined && ctx.pselected.modelType.typeHierarchyArray.indexOf('C2IssueRevision')>-1) && ctx.selected.modelType.typeHierarchyArray.indexOf('Participant') > -1 && !conditions.IssueIsNotClosed"
      },
      "CAW0EnableCutCmdVendorCondition": {
        "expression": "conditions.caw0CutCmdVendorDataHandlerCondition && conditions.PSPOrIssueIsNotClosed"
      },
      "CAW0DefectiveItemDisableCutCmdDelegateCondition": {
        "expression": "( ctx.selected !== undefined && ctx.selected.modelType.typeHierarchyArray.indexOf('Qc0Failure') === -1 && ctx.pselected !== undefined && ctx.pselected.modelType.typeHierarchyArray.indexOf( 'CAW0Defect' ) > -1) && ((ctx.xrtPageContext.primaryXrtPageID === 'tc_xrt_Overview') || ( ctx.xrtPageContext.primaryXrtPageID === 'tc_xrt_RootCauseAnalysis' && ctx.xrtPageContext.secondaryXrtPageID === 'tc_xrt_Overview')) && !conditions.isDefectModifiable"
      },
      "CAW0DisableAttachmentsCutCmdCondtion": {
        "expression": "conditions.isAttachmentDeleting && ctx.pselected !== undefined && ((ctx.pselected.is_modifiable !== undefined &&  ctx.pselected.is_modifiable.dbValues[0] !== '1') || (ctx.pselected.props.is_modifiable !== undefined && ctx.pselected.props.is_modifiable.dbValues[0] !== '1'))"
      },
      "CAW0PDAndSDSubLocAndQACutCmdDisableCondition": {
        "expression": "ctx.selected !== undefined && ctx.pselected !== undefined && (((ctx.pselected.modelType.typeHierarchyArray.indexOf('C2IssueRevision')>-1 || ctx.pselected.modelType.typeHierarchyArray.indexOf('C2CapaRevision')>-1) && !conditions.PSPOrIssueIsNotClosed && (ctx.xrtPageContext.primaryXrtPageID !== 'tc_xrt_RootCauseAnalysis' || ctx.xrtPageContext.secondaryXrtPageID !== 'tc_xrt_RootCauseAnalysis')) || ((ctx.pselected.modelType.typeHierarchyArray.indexOf('CAW0Defect')>-1 || ctx.pselected.modelType.typeHierarchyArray.indexOf('CAW05Why') > -1 || ctx.pselected.modelType.typeHierarchyArray.indexOf('CAW0Ishikawa') > -1) && !conditions.isDefectModifiable))"
      },
      "CAW0PDAndSDSubLocCutCmdDisableCondition": {
        "expression": "conditions.CAW0IsPSPPDOrIssueSDSubLocation && conditions.CAW0PDAndSDSubLocAndQACutCmdDisableCondition"
      },
      "CAW0QACutCmdDisableCondition": {
        "expression": "conditions.CAWAssignResponsibleUserCommandVisiblity && conditions.CAW0PDAndSDSubLocAndQACutCmdDisableCondition"
      },
      "CAW0PDAndSDSublocDisableDeleteCmdHandlerCondition": {
        "expression": "conditions.CAW0IsPSPPDOrIssueSDSubLocation  && !conditions.PSPOrIssueIsNotClosed"
      },
      "CAW0DisableRHTCmdsForClosedIssueAndPSPCondition": {
        "expression": "conditions.isUserOnCAPAOrQIMSublocation && !conditions.PSPOrIssueIsNotClosed"
      },
      "CAW0DisableQADeleteCmdRCASublocHandlerDelegateCondition": {
        "expression": "(ctx.xrtPageContext.primaryXrtPageID === 'tc_xrt_RootCauseAnalysis' || ctx.xrtPageContext.secondaryXrtPageID === 'tc_xrt_RootCauseAnalysis') && ctx.selected !== undefined && ctx.selected.modelType.typeHierarchyArray.indexOf('Qam0QualityAction') > -1 && ctx.pselected !== undefined  && !conditions.isDefectModifiable"
      },
      "CAW0DisableQualityChecklistDeleteCmdPSPPlanSubLocCondition": {
        "expression": "ctx.selected.modelType.typeHierarchyArray.indexOf( 'Apm0QualityChecklist' ) > -1 && ctx.selected.props.apm0ParentChecklist.dbValue == null && conditions.isUserOnCAPASublocation && !conditions.PSPIsNotClosed"
      },
      "CAW0EnableDeleteCmdForDefectCondition": {
        "expression": "conditions.PSPIsNotClosed || conditions.isDefectModifiable"
      },
      "CAW0DisableCutAndDelCmdsRCASublocScndryViewCondition": {
        "expression": "ctx.xrtPageContext.secondaryXrtPageID === 'tc_xrt_RootCauseAnalysis' && ctx.selected !== undefined && ctx.selected.modelType.typeHierarchyArray.indexOf('CAW0Defect') > -1 && ctx.pselected !== undefined  && !conditions.PSPIsNotClosed"
      },
      "CAW0DisableCutQualityActCtxMenuCommandOnRCACondition": {
        "expression": "conditions.cutQualityActVisibilityDelegateonRCA && !conditions.isDefectModifiable"
      },
      "CAW0DisableQADeleteCmdInCapaOverviewCondition": {
        "expression": "conditions.isQASelectedOnCapaOverview && !conditions.PSPIsNotClosed"
      },
      "isSavePrintDiagramEnabledCondition": {
        "expression": "conditions.PSPIsNotClosed || conditions.isDefectModifiable"
      }
    },
    "onEvent": [
      {
        "eventId": "call.addDefectInPDPanel",
        "action": "addDefectInPDPanel"
      },
      {
        "eventId": "call.addFailureToDefectPanel",
        "action": "addFailureToDefectPanel"
      },
      {
        "eventId": "call.saveEditAndSubmit5WhyEvent",
        "action": "saveEditAndSubmit5WhyAction"
      },
      {
        "eventId": "doPostSaveEdit5WhyEventSuccess",
        "action": "doPostSaveEdit5WhyActionSuccess"
      },
      {
        "eventId": "doPostRootCauseActionSuccess",
        "action": "doPostRootCauseActionSuccess"
      },
      {
        "eventId": "doPostSaveEdit5WhyEventFailure",
        "action": "doPostSaveEdit5WhyActionFailure"
      },
      {
        "eventId": "confirm5WhyDeleteEvent",
        "message": "5whyDeleteConfirmationMessage"
      },
      {
        "eventId": "confirmWhyDeleteEvent",
        "message": "whyDeleteConfirmationMessage"
      },
      {
        "eventId": "call.loadCAW0FailureTypeAndSavedQuery",
        "action": "loadCAW0FailureTypeAndSavedQuery"
      },
      {
        "eventId": "updateCOETable",
        "action": "updateCOETable"
      },
      {
        "eventId": "performDeleteOnRC",
        "action": "performDeleteOnRC"
      },
      {
        "eventId": "performDeleteFromIshikawaGraph",
        "action": "performDeleteFromIshikawaGraph"
      },
      {
        "eventId": "performDeleteFromGraph",
        "action": "performDeleteFromGraph"
      },
      {
        "eventId": "updateGraphAfterDelete",
        "action": "updateGraphAfterDelete"
      },
      {
        "eventId": "caw0.activateReportPanel",
        "action": "activateReportPanel"
      },
      {
        "eventId": "caw0.getGenerateItemReportComplete",
        "action": "getGenerateItemReportComplete"
      },
      {
        "eventId": "performUnlinkAndDeleteAttachment",
        "action": "performUnlinkAndDeleteAttachment"
      },
      {
        "eventId": "capaconfirmSingleCutOrCancelEvent",
        "message": "capasingleCutOrCancelConfirmationMessage"
      },
      {
        "eventId": "capaconfirmMultipleCutOrCancelEvent",
        "message": "capamultipleCutOrCancelConfirmationMessage"
      },
      {
        "eventId": "confirmDeleteAttachEvent",
        "message": "singleObjDeleteAttachConfirmationMessage"
      },
      {
        "eventId": "confirmMultipleAttachDeleteEvent",
        "message": "multipleDeleteAttachConfirmationMessage"
      },
      {
        "eventId": "performDeleteAttach",
        "action": "performDeleteAttach"
      },
      {
        "eventId": "SaveAsReviseCapaSuccessful",
        "action": "saveAsCapaCommandAction"
      },
      {
        "eventId": "severityDefaultValueAssign",
        "message": "severityDefaultValueAssign"
      },
      {
        "eventId": "probabilityDefaultValueAssign",
        "message": "probabilityDefaultValueAssign"
      },
      {
        "eventId": "detectabilityDefaultValueAssign",
        "message": "detectabilityDefaultValueAssign"
      },
      {
        "eventId": "CAW0AddGenericQualityAction",
        "action": "CAW0AddGenericQualityAction"
      },
      {
        "eventId": "CAW0AddGenericQualityActionFromTemplate",
        "action": "CAW0AddGenericQualityActionFromTemplate"
      },
      {
        "eventId": "CAW0AddGenericQualityActionAsTemplate",
        "action": "CAW0AddGenericQualityActionAsTemplate"
      },
      {
        "eventId": "call.toCheckVendorData",
        "action": "toCheckVendorData"
      },
      {
        "eventId": "updateRootCauseNode",
        "action": "updateRootCauseNode"
      },
      {
        "eventId": "stateParameterModified",
        "action": "Caw0ShowCreateChangePanel"
      },
      {
        "eventId": "caw0.removeSelectedPSPDashboardReport",
        "action": "removeSelectedPSPDashboardReport"
      },
      {
        "eventId": "confirmRemoveVendor",
        "message": "removeVendorConfirmationMessage"
      }
    ],
    "i18n": {
      "deleteSingleFailureAskCutMessage": [
        "CAW0CapaMessages"
      ],
      "deleteMultipleFailureMessage": [
        "CAW0CapaMessages"
      ],
      "caw0add": [
        "CAW0CapaMessages"
      ],
      "caw0replace": [
        "CAW0CapaMessages"
      ],
      "caw0PinButtonToolTip": [
        "CAW0CapaMessages"
      ],
      "caw0UnpinButtonToolTip": [
        "CAW0CapaMessages"
      ],
      "addDefectAsRootCause": [
        "CAW0CapaMessages"
      ],
      "removeDefectAsRootCause": [
        "CAW0CapaMessages"
      ],
      "markNewDefectCommandTitle": [
        "CAW0CapaMessages"
      ],
      "cawAssignResponsibleUser": [
        "CAW0CapaMessages"
      ],
      "cawAddCauseGroup": [
        "CAW0CapaMessages"
      ],
      "checkDefectInPD": [
        "CAW0CapaMessages"
      ],
      "rootCauseTreeContextMenu": [
        "CAW0CapaMessages"
      ],
      "5whyDeleteConfirmationMessage": [
        "CAW0CapaMessages"
      ],
      "whyDeleteConfirmationMessage": [
        "CAW0CapaMessages"
      ],
      "caw0defect": [
        "CAW0CapaMessages"
      ],
      "caw05why": [
        "CAW0CapaMessages"
      ],
      "caw0why": [
        "CAW0CapaMessages"
      ],
      "caw0Ishikawa": [
        "CAW0CapaMessages"
      ],
      "caw0Cause": [
        "CAW0CapaMessages"
      ],
      "caw0DeleteSingleFailureMessage": [
        "CAW0CapaMessages"
      ],
      "caw0AssignResponsibleUser": [
        "CAW0CapaMessages"
      ],
      "caw0RemoveResponsibleUserTitle": [
        "CAW0CapaMessages"
      ],
      "singleAttachDeleteConfirmationMessage": [
        "CAW0CapaMessages"
      ],
      "attachmentsDeleteConfirmationMessage": [
        "CAW0CapaMessages"
      ],
      "caw0deleteObjectsSingleFailureMessage": [
        "CAW0CapaMessages"
      ],
      "caw0SaveAs": [
        "CAW0CapaMessages"
      ],
      "CAW0AssignResponsibleUserDesc": [
        "CAW0CapaMessages"
      ],
      "CAW0AddQualityActionDesc": [
        "CAW0CapaMessages"
      ],
      "showRootCauseCommandDesc": [
        "CAW0CapaMessages"
      ],
      "CAW0AddDefectInPDDesc": [
        "CAW0CapaMessages"
      ],
      "CAW0AddRootCauseDesc": [
        "CAW0CapaMessages"
      ],
      "CAW0Add5WhyDesc": [
        "CAW0CapaMessages"
      ],
      "CAW0AddWhyDesc": [
        "CAW0CapaMessages"
      ],
      "CAW0AddIshikawaDesc": [
        "CAW0CapaMessages"
      ],
      "CAW0AddCauseDesc": [
        "CAW0CapaMessages"
      ],
      "CAW0AddFailureToDefectDesc": [
        "CAW0CapaMessages"
      ],
      "defaultValueAssigned": [
        "CAW0CapaMessages"
      ],
      "savePrintViewTitle": [
        "CAW0CapaMessages"
      ],
      "saveGraphViewTitle": [
        "CAW0CapaMessages"
      ],
      "caw0AddSymptomDefect": [
        "CAW0CapaMessages"
      ],
      "caw0SymptomDefectTitle": [
        "CAW0CapaMessages"
      ],
      "showRemoveRootCauseCommandTitle": [
        "CAW0CapaMessages"
      ],
      "showRemoveRootCauseCommandTitleDesc": [
        "CAW0CapaMessages"
      ],
      "CAW0AddDefectToIssueDesc": [
        "CAW0CapaMessages"
      ],
      "CAW0ReplaceFailureToDefectDesc": [
        "CAW0CapaMessages"
      ],
      "CAW0AddCauseGroupDesc": [
        "CAW0CapaMessages"
      ],
      "CAW0SaveAsDesc": [
        "CAW0CapaMessages"
      ],
      "caw0RemovePropsOfIshikawaErrorMsg": [
        "CAW0CapaMessages"
      ],
      "caw0AddFailure": [
        "CAW0CapaMessages"
      ],
      "caw0removeFailureTitle": [
        "CAW0CapaMessages"
      ],
      "caw0addFailureSpec": [
        "CAW0CapaMessages"
      ],
      "commonProbTitle": [
        "CAW0CapaMessages"
      ],
      "commonFailureTitle": [
        "CAW0CapaMessages"
      ],
      "caw0AddDefectiveItemDesc": [
        "CAW0CapaMessages"
      ],
      "cawReplaceDefectiveItemDesc": [
        "CAW0CapaMessages"
      ],
      "Caw0LinkToRC": [
        "CAW0CapaMessages"
      ],
      "Caw0UnlinkToRC": [
        "CAW0CapaMessages"
      ],
      "caw0addVendorDesc": [
        "CAW0CapaMessages"
      ],
      "caw0RemoveToolTipDesc": [
        "CAW0CapaMessages"
      ],
      "caw0RemoveObjectTitle": [
        "CAW0CapaMessages"
      ],
      "addReportToDashboard": [
        "CAW0CapaMessages"
      ],
      "caw0AddReportTooltip": [
        "CAW0CapaMessages"
      ],
      "saw1AddTemplate": [
        "CAW0CapaMessages"
      ],
      "createScheduleFromTemplateTitle": [
        "CAW0CapaMessages"
      ],
      "Saw1CreateScheduleFromTemplateDesc": [
        "CAW0CapaMessages"
      ],
      "createScheduleTitle": [
        "CAW0CapaMessages"
      ],
      "saw1remove": [
        "CAW0CapaMessages"
      ],
      "Csi1CreateScheduleInPlanItemsDesc": [
        "CAW0CapaMessages"
      ],
      "removeVendorConfirmationMessage": [
        "CAW0CapaMessages"
      ]
    },
    "messages": {
      "successMessage": {
        "messageType": "INFO",
        "messageText": "{{i18n.addDefectAsRootCause}}",
        "messageTextParams": [
          "{{ctx.selected.props.object_name.dbValues[0]}}"
        ]
      },
      "removeSuccessMessage": {
        "messageType": "INFO",
        "messageText": "{{i18n.removeDefectAsRootCause}}",
        "messageTextParams": [
          "{{ctx.selected.props.object_name.dbValues[0]}}"
        ]
      },
      "capasingleCutOrCancelConfirmationMessage": {
        "messageType": "WARNING",
        "messageText": "{{i18n.deleteSingleFailureAskCutMessage}}",
        "messageTextParams": [
          "{{ctx.selected.props.object_string.uiValues[0]}}",
          "{{data.deleteObjectsPartialErrors[0].errorValues[0].message}}"
        ],
        "navigationOptions": [
          {
            "option": "Cut",
            "text": "{{i18n.Awp0CutTitle}}",
            "action": "cutConfiguredRevs"
          },
          {
            "option": "Cancel",
            "text": "{{i18n.cancel}}"
          }
        ]
      },
      "capamultipleCutOrCancelConfirmationMessage": {
        "messageType": "WARNING",
        "messageText": "{{i18n.deleteMultipleFailureMessage}}",
        "expression": {
          "totalRemainToDelete": "objectsFailedToDelete.totalRemainToDelete",
          "totalSelected": "objectsFailedToDelete.totalSelected",
          "message": "objectsFailedToDelete.message"
        },
        "messageTextParams": [
          "{{expression.totalRemainToDelete}}",
          "{{expression.totalSelected}}",
          "{{expression.message}}"
        ],
        "messageData": {
          "partialErrors": "{{data.deleteObjectsPartialErrors}}"
        },
        "navigationOptions": [
          {
            "option": "Cut",
            "text": "{{i18n.Awp0CutTitle}}",
            "action": "cutConfiguredRevs"
          },
          {
            "option": "Cancel",
            "text": "{{i18n.cancel}}",
            "action": "refreshSelectedObject"
          }
        ]
      },
      "defectPresentInPD": {
        "messageType": "ERROR",
        "messageText": "{{i18n.checkDefectInPD}}",
        "messageTextParams": [
          "{{ctx.selected.props.object_string.dbValues[0]}}"
        ]
      },
      "cutSingleCQASuccessful": {
        "messageType": "INFO",
        "messageText": "{{i18n.cutSingleSuccessful}}",
        "messageTextParams": [
          "{{ctx.mselected[0].props.object_string.uiValues[0]}}",
          "{{ctx.selectedCorrectiveAction}}"
        ]
      },
      "cutMultipleCQASuccessful": {
        "messageType": "INFO",
        "messageText": "{{i18n.cutMultipleSuccessful}}",
        "messageTextParams": [
          "{{ctx.mselected.length}}",
          "{{ctx.selectedCorrectiveAction}}"
        ]
      },
      "cutInEstablishTeamSingle": {
        "messageType": "INFO",
        "messageText": "{{i18n.cutSingleSuccessful}}",
        "messageTextParams": [
          "{{ctx.mselected[0].props.object_string.uiValues[0]}}",
          "{{ctx.pselected.props.object_string.dbValues[0]}}"
        ]
      },
      "cutInEstablishTeamMultiple": {
        "messageType": "INFO",
        "messageText": "{{i18n.cutMultipleSuccessful}}",
        "messageTextParams": [
          "{{ctx.mselected.length}}",
          "{{ctx.pselected.props.object_string.dbValues[0]}}"
        ]
      },
      "severityDefaultValueAssign": {
        "messageType": "INFO",
        "messageText": "{{i18n.defaultValueAssigned}}",
        "messageTextParams": [
          "{{ctx.mselected[0].props.c2_Severity.propertyDisplayName}}"
        ]
      },
      "probabilityDefaultValueAssign": {
        "messageType": "INFO",
        "messageText": "{{i18n.defaultValueAssigned}}",
        "messageTextParams": [
          "{{ctx.mselected[0].props.c2_Probability.propertyDisplayName}}"
        ]
      },
      "detectabilityDefaultValueAssign": {
        "messageType": "INFO",
        "messageText": "{{i18n.defaultValueAssigned}}",
        "messageTextParams": [
          "{{ctx.mselected[0].props.c2_Detectability.propertyDisplayName}}"
        ]
      },
      "5whyDeleteConfirmationMessage": {
        "messageType": "WARNING",
        "messageText": "{{i18n.5whyDeleteConfirmationMessage}}",
        "messageTextParams": [
          "{{ctx.mselected[0].props.object_name.dbValues[0]}}"
        ],
        "navigationOptions": [
          {
            "option": "Cancel",
            "text": "{{i18n.cancel}}"
          },
          {
            "option": "Delete",
            "text": "{{i18n.delete}}",
            "action": "setParentNode"
          }
        ]
      },
      "whyDeleteConfirmationMessage": {
        "messageType": "WARNING",
        "messageText": "{{i18n.whyDeleteConfirmationMessage}}",
        "messageTextParams": [
          "{{ctx.mselected[0].props.object_name.dbValues[0]}}"
        ],
        "navigationOptions": [
          {
            "option": "Cancel",
            "text": "{{i18n.cancel}}"
          },
          {
            "option": "Delete",
            "text": "{{i18n.delete}}",
            "action": "setParentNode"
          }
        ]
      },
      "singleObjDeleteAttachConfirmationMessage": {
        "messageType": "WARNING",
        "messageText": "{{i18n.singleAttachDeleteConfirmationMessage}}",
        "messageTextParams": [
          "{{ctx.selected.props.object_string.uiValues[0]}}"
        ],
        "navigationOptions": [
          {
            "option": "Cancel",
            "text": "{{i18n.cancel}}"
          },
          {
            "option": "Delete",
            "text": "{{i18n.delete}}",
            "action": "performUnlinkAndDeleteAttachment"
          }
        ]
      },
      "multipleDeleteAttachConfirmationMessage": {
        "messageType": "WARNING",
        "messageText": "{{i18n.attachmentsDeleteConfirmationMessage}}",
        "messageTextParams": [
          "{{ctx.mselected.length}}"
        ],
        "navigationOptions": [
          {
            "option": "Cancel",
            "text": "{{i18n.cancel}}"
          },
          {
            "option": "Delete",
            "text": "{{i18n.delete}}",
            "action": "performUnlinkAndDeleteAttachment"
          }
        ]
      },
      "caw0DeleteSingleFailureMessage": {
        "messageType": "ERROR",
        "messageText": "{{i18n.caw0DeleteSingleFailureMessage}}",
        "messageTextParams": [
          "{{data.deleteObjectsPartialErrors[0].errorValues[0].message}}"
        ]
      },
      "caw0deleteObjectsSingleFailureMessage": {
        "messageType": "ERROR",
        "messageText": "{{i18n.caw0deleteObjectsSingleFailureMessage}}",
        "messageTextParams": [
          "{{ctx.mselected[0].props.object_string.uiValues[0]}}",
          "{{data.deleteObjectsPartialErrors[0].errorValues[0].message}}"
        ]
      },
      "caw0RemovePropsOfIshikawaErrorMsg": {
        "messageType": "ERROR",
        "messageText": "{{i18n.caw0RemovePropsOfIshikawaErrorMsg}}",
        "messageTextParams": [
          "{{data.removePropsErrors[0].errorValues[0].message}}"
        ]
      },
      "cutSingleCQASuccessfulRCA": {
        "messageType": "INFO",
        "messageText": "{{i18n.cutSingleSuccessful}}",
        "messageTextParams": [
          "{{ctx.mselected[0].props.object_string.uiValues[0]}}",
          "{{ctx.xrtSummaryContextObject}}"
        ]
      },
      "cutMultipleCQASuccessfulRCA": {
        "messageType": "INFO",
        "messageText": "{{i18n.cutMultipleSuccessful}}",
        "messageTextParams": [
          "{{ctx.mselected.length}}",
          "{{ctx.xrtSummaryContextObject}}"
        ]
      },
      "cutSingleVendorDataSuccessful": {
        "messageType": "INFO",
        "messageText": "{{i18n.cutSingleSuccessful}}",
        "messageTextParams": [
          "{{ctx.mselected[0].props.object_string.uiValues[0]}}",
          "{{ctx.pselected}}"
        ]
      },
      "cutMultipleVendorDataSuccessful": {
        "messageType": "INFO",
        "messageText": "{{i18n.cutMultipleSuccessful}}",
        "messageTextParams": [
          "{{ctx.mselected.length}}",
          "{{ctx.pselected}}"
        ]
      },
      "SOAFailureMessage": {
        "messageType": "ERROR",
        "messageText": "{{errorCode}}"
      },
      "removeVendorConfirmationMessage": {
        "messageType": "WARNING",
        "messageText": "{{i18n.removeVendorConfirmationMessage}}",
        "messageTextParams": [
          "{{ctx.mselected[0].props.object_name.dbValues[0]}}"
        ],
        "navigationOptions": [
          {
            "option": "Cancel",
            "text": "{{i18n.cancel}}"
          },
          {
            "option": "Remove",
            "text": "{{i18n.caw0RemoveObjectTitle}}",
            "action": "removeVendorTableDataAction"
          }
        ]
      }
    }
  },
  "propertyRendererTemplates": {
    "caw0_Rootcause_template": {
      "grids": [
        "rootCauseTree"
      ],
      "columns": [
        "caw0rootCause"
      ],
      "template": "",
      "templateUrl": "",
      "renderFunction": "renderRootCauseFlag",
      "deps": "propRenderTemplates/CAW0GraphicalRendererHelper",
      "dependentServices": []
    }
  },
  "states": {
    "com_siemens_splm_client_qualityCenterManager_PSPLocation": {
      "data": {
        "browserSubTitle": {
          "source": "/i18n/CAW0CapaMessages",
          "key": "PSPAppDisplayName"
        },
        "headerTitle": {
          "source": "/i18n/CAW0CapaMessages",
          "key": "PSPAppDisplayName"
        }
      },
      "params": {
        "userId": null
      },
      "type": "location"
    },
    "showProblemSolvingProcess": {
      "data": {
        "viewModes": {
          "ListView": {
            "primaryWorkArea": "list"
          },
          "SummaryView": {
            "primaryWorkArea": "list",
            "secondaryWorkArea": true
          },
          "ImageView": {
            "primaryWorkArea": "image",
            "secondaryWorkArea": false
          }
        },
        "defaultDisplayMode": "SummaryView",
        "priority": 1,
        "label": {
          "source": "/i18n/CAW0CapaMessages",
          "key": "allSubLocation"
        },
        "clientScopeURI": "caw0PSP",
        "nameToken": "com.siemens.splm.client.qualityCenterManager:showProblemSolvingProcess",
        "viewBase": "base",
        "context": {
          "search": {
            "provider": "CAW0PSPProvider",
            "criteria": {
              "objectType": "C2CapaRevision",
              "status": "New"
            },
            "isFilteringEnabled": true,
            "sortType": "Priority",
            "chartTitle": {
              "source": "/i18n/ChangeMessages",
              "key": "changeResultsChartTitle"
            },
            "maxToLoad": 50,
            "maxToReturn": 50
          }
        }
      },
      "params": {
        "commandID": null,
        "cmdArg": {
          "array": true
        },
        "cmdId": null,
        "filter": null,
        "HostRequestKey": null,
        "searchCriteria": null
      },
      "parent": "com_siemens_splm_client_qualityCenterManager_PSPLocation",
      "type": "subLocation",
      "url": "/showProblemSolvingProcess"
    },
    "showInProgressPSP": {
      "data": {
        "viewModes": {
          "ListView": {
            "primaryWorkArea": "list"
          },
          "SummaryView": {
            "primaryWorkArea": "list",
            "secondaryWorkArea": true
          },
          "ImageView": {
            "primaryWorkArea": "image",
            "secondaryWorkArea": false
          }
        },
        "defaultDisplayMode": "SummaryView",
        "priority": 2,
        "label": {
          "source": "/i18n/CAW0CapaMessages",
          "key": "inProgress"
        },
        "clientScopeURI": "caw0InProgressPSP",
        "nameToken": "com.siemens.splm.client.qualityCenterManager:showInProgressPSP",
        "viewBase": "base",
        "context": {
          "search": {
            "provider": "CAW0PSPProvider",
            "criteria": {
              "objectType": "C2CapaRevision",
              "status": "InProgress"
            },
            "isFilteringEnabled": true,
            "sortType": "Priority",
            "chartTitle": {
              "source": "/i18n/ChangeMessages",
              "key": "changeResultsChartTitle"
            },
            "maxToLoad": 50,
            "maxToReturn": 50
          },
          "CreateChangePanel": {
            "baseType": "C2CapaRevision"
          }
        }
      },
      "params": {
        "commandID": null,
        "cmdArg": {
          "array": true
        },
        "cmdId": null,
        "filter": null,
        "HostRequestKey": null,
        "searchCriteria": null
      },
      "parent": "com_siemens_splm_client_qualityCenterManager_PSPLocation",
      "type": "subLocation",
      "url": "/showInProgressPSP"
    },
    "showOverduePSP": {
      "data": {
        "viewModes": {
          "ListView": {
            "primaryWorkArea": "list"
          },
          "SummaryView": {
            "primaryWorkArea": "list",
            "secondaryWorkArea": true
          },
          "ImageView": {
            "primaryWorkArea": "image",
            "secondaryWorkArea": false
          }
        },
        "defaultDisplayMode": "SummaryView",
        "priority": 3,
        "label": {
          "source": "/i18n/CAW0CapaMessages",
          "key": "overDue"
        },
        "clientScopeURI": "caw0OverduePSP",
        "nameToken": "com.siemens.splm.client.qualityCenterManager:showOverduePSP",
        "viewBase": "base",
        "context": {
          "search": {
            "provider": "CAW0PSPProvider",
            "criteria": {
              "objectType": "C2CapaRevision",
              "status": "Overdue"
            },
            "isFilteringEnabled": true,
            "sortType": "Priority",
            "chartTitle": {
              "source": "/i18n/ChangeMessages",
              "key": "changeResultsChartTitle"
            },
            "maxToLoad": 50,
            "maxToReturn": 50
          },
          "CreateChangePanel": {
            "baseType": "C2CapaRevision"
          }
        }
      },
      "params": {
        "commandID": null,
        "cmdArg": {
          "array": true
        },
        "cmdId": null,
        "filter": null,
        "HostRequestKey": null,
        "searchCriteria": null
      },
      "parent": "com_siemens_splm_client_qualityCenterManager_PSPLocation",
      "type": "subLocation",
      "url": "/showOverduePSP"
    },
    "showClosedPSP": {
      "data": {
        "viewModes": {
          "ListView": {
            "primaryWorkArea": "list"
          },
          "SummaryView": {
            "primaryWorkArea": "list",
            "secondaryWorkArea": true
          },
          "ImageView": {
            "primaryWorkArea": "image",
            "secondaryWorkArea": false
          }
        },
        "defaultDisplayMode": "SummaryView",
        "priority": 4,
        "label": {
          "source": "/i18n/CAW0CapaMessages",
          "key": "closed"
        },
        "clientScopeURI": "caw0ClosedPSP",
        "nameToken": "com.siemens.splm.client.qualityCenterManager:showClosedPSP",
        "viewBase": "base",
        "context": {
          "search": {
            "provider": "CAW0PSPProvider",
            "criteria": {
              "objectType": "C2CapaRevision",
              "status": "Closed"
            },
            "isFilteringEnabled": true,
            "sortType": "Priority",
            "chartTitle": {
              "source": "/i18n/ChangeMessages",
              "key": "changeResultsChartTitle"
            },
            "maxToLoad": 50,
            "maxToReturn": 50
          },
          "CreateChangePanel": {
            "baseType": "C2CapaRevision"
          }
        }
      },
      "params": {
        "commandID": null,
        "cmdArg": {
          "array": true
        },
        "cmdId": null,
        "filter": null,
        "HostRequestKey": null,
        "searchCriteria": null
      },
      "parent": "com_siemens_splm_client_qualityCenterManager_PSPLocation",
      "type": "subLocation",
      "url": "/showClosedPSP"
    },
    "showDashboardPSP": {
      "data": {
        "viewModes": {
          "ImageView": {
            "primaryWorkArea": "image",
            "secondaryWorkArea": false
          }
        },
        "defaultDisplayMode": "ImageView",
        "priority": 7,
        "label": {
          "source": "/i18n/CAW0CapaMessages",
          "key": "dashboard"
        },
        "clientScopeURI": "Awp0ReportBuilder",
        "nameToken": "com.siemens.splm.client.qualityCenterManager:showPSPDashboard",
        "selectionMode": "single",
        "viewBase": "showPSPDashboard"
      },
      "parent": "com_siemens_splm_client_qualityCenterManager_PSPLocation",
      "url": "/showDashboardPSP",
      "type": "subLocation"
    },
    "com_siemens_splm_client_qualityCenterManager_QIMLocation": {
      "data": {
        "browserSubTitle": {
          "source": "/i18n/CAW0CapaMessages",
          "key": "QIMAppDisplayName"
        },
        "headerTitle": {
          "source": "/i18n/CAW0CapaMessages",
          "key": "QIMAppDisplayName"
        }
      },
      "params": {
        "userId": null
      },
      "type": "location"
    },
    "showQualityIssues": {
      "data": {
        "viewModes": {
          "ListView": {
            "primaryWorkArea": "list"
          },
          "SummaryView": {
            "primaryWorkArea": "list",
            "secondaryWorkArea": true
          },
          "ImageView": {
            "primaryWorkArea": "image",
            "secondaryWorkArea": false
          }
        },
        "defaultDisplayMode": "SummaryView",
        "priority": 1,
        "label": {
          "source": "/i18n/CAW0CapaMessages",
          "key": "allSubLocation"
        },
        "clientScopeURI": "caw0QualityIssue",
        "nameToken": "com.siemens.splm.client.qualityCenterManager:showQualityIssues",
        "viewBase": "base",
        "context": {
          "search": {
            "provider": "CAW0PSPProvider",
            "criteria": {
              "objectType": "C2IssueRevision",
              "status": "New"
            },
            "isFilteringEnabled": true,
            "sortType": "Priority",
            "chartTitle": {
              "source": "/i18n/ChangeMessages",
              "key": "changeResultsChartTitle"
            },
            "maxToLoad": 50,
            "maxToReturn": 50
          },
          "CreateChangePanel": {
            "baseType": "C2CapaRevision"
          }
        }
      },
      "params": {
        "commandID": null,
        "cmdArg": {
          "array": true
        },
        "cmdId": null,
        "filter": null,
        "HostRequestKey": null,
        "searchCriteria": null
      },
      "parent": "com_siemens_splm_client_qualityCenterManager_QIMLocation",
      "type": "subLocation",
      "url": "/showQualityIssues"
    },
    "showInProgressQIM": {
      "data": {
        "viewModes": {
          "ListView": {
            "primaryWorkArea": "list"
          },
          "SummaryView": {
            "primaryWorkArea": "list",
            "secondaryWorkArea": true
          },
          "ImageView": {
            "primaryWorkArea": "image",
            "secondaryWorkArea": false
          }
        },
        "defaultDisplayMode": "SummaryView",
        "priority": 1,
        "label": {
          "source": "/i18n/CAW0CapaMessages",
          "key": "inProgress"
        },
        "clientScopeURI": "caw0InProgressQIM",
        "nameToken": "com.siemens.splm.client.qualityCenterManager:showInProgressQIM",
        "viewBase": "base",
        "context": {
          "search": {
            "provider": "CAW0PSPProvider",
            "criteria": {
              "objectType": "C2IssueRevision",
              "status": "InProgress"
            },
            "isFilteringEnabled": true,
            "sortType": "Priority",
            "chartTitle": {
              "source": "/i18n/ChangeMessages",
              "key": "changeResultsChartTitle"
            },
            "maxToLoad": 50,
            "maxToReturn": 50
          },
          "CreateChangePanel": {
            "baseType": "C2CapaRevision"
          }
        }
      },
      "params": {
        "commandID": null,
        "cmdArg": {
          "array": true
        },
        "cmdId": null,
        "filter": null,
        "HostRequestKey": null,
        "searchCriteria": null
      },
      "parent": "com_siemens_splm_client_qualityCenterManager_QIMLocation",
      "type": "subLocation",
      "url": "/showInProgressQIM"
    },
    "showOverdueQIM": {
      "data": {
        "viewModes": {
          "ListView": {
            "primaryWorkArea": "list"
          },
          "SummaryView": {
            "primaryWorkArea": "list",
            "secondaryWorkArea": true
          },
          "ImageView": {
            "primaryWorkArea": "image",
            "secondaryWorkArea": false
          }
        },
        "defaultDisplayMode": "SummaryView",
        "priority": 1,
        "label": {
          "source": "/i18n/CAW0CapaMessages",
          "key": "overDue"
        },
        "clientScopeURI": "caw0OverdueQIM",
        "nameToken": "com.siemens.splm.client.qualityCenterManager:showOverdueQIM",
        "viewBase": "base",
        "context": {
          "search": {
            "provider": "CAW0PSPProvider",
            "criteria": {
              "objectType": "C2IssueRevision",
              "status": "Overdue"
            },
            "isFilteringEnabled": true,
            "sortType": "Priority",
            "chartTitle": {
              "source": "/i18n/ChangeMessages",
              "key": "changeResultsChartTitle"
            },
            "maxToLoad": 50,
            "maxToReturn": 50
          },
          "CreateChangePanel": {
            "baseType": "C2CapaRevision"
          }
        }
      },
      "params": {
        "commandID": null,
        "cmdArg": {
          "array": true
        },
        "cmdId": null,
        "filter": null,
        "HostRequestKey": null,
        "searchCriteria": null
      },
      "parent": "com_siemens_splm_client_qualityCenterManager_QIMLocation",
      "type": "subLocation",
      "url": "/showOverdueQIM"
    },
    "showClosedQIM": {
      "data": {
        "viewModes": {
          "ListView": {
            "primaryWorkArea": "list"
          },
          "SummaryView": {
            "primaryWorkArea": "list",
            "secondaryWorkArea": true
          },
          "ImageView": {
            "primaryWorkArea": "image",
            "secondaryWorkArea": false
          }
        },
        "defaultDisplayMode": "SummaryView",
        "priority": 1,
        "label": {
          "source": "/i18n/CAW0CapaMessages",
          "key": "closed"
        },
        "clientScopeURI": "caw0ClosedQIM",
        "nameToken": "com.siemens.splm.client.qualityCenterManager:showClosedQIM",
        "viewBase": "base",
        "context": {
          "search": {
            "provider": "CAW0PSPProvider",
            "criteria": {
              "objectType": "C2IssueRevision",
              "status": "Closed"
            },
            "isFilteringEnabled": true,
            "sortType": "Priority",
            "chartTitle": {
              "source": "/i18n/ChangeMessages",
              "key": "changeResultsChartTitle"
            },
            "maxToLoad": 50,
            "maxToReturn": 50
          },
          "CreateChangePanel": {
            "baseType": "C2CapaRevision"
          }
        }
      },
      "params": {
        "commandID": null,
        "cmdArg": {
          "array": true
        },
        "cmdId": null,
        "filter": null,
        "HostRequestKey": null,
        "searchCriteria": null
      },
      "parent": "com_siemens_splm_client_qualityCenterManager_QIMLocation",
      "type": "subLocation",
      "url": "/showClosedQIM"
    },
    "showDashboardQIM": {
      "data": {
        "viewModes": {
          "ImageView": {
            "primaryWorkArea": "image",
            "secondaryWorkArea": false
          }
        },
        "defaultDisplayMode": "ImageView",
        "priority": 7,
        "label": {
          "source": "/i18n/CAW0CapaMessages",
          "key": "dashboard"
        },
        "clientScopeURI": "Awp0ReportBuilder",
        "nameToken": "com.siemens.splm.client.qualityCenterManager:showQIMDashboard",
        "selectionMode": "single",
        "viewBase": "showQIMDashboard"
      },
      "parent": "com_siemens_splm_client_qualityCenterManager_QIMLocation",
      "url": "/showDashboardQIM",
      "type": "subLocation"
    }
  },
  "typeProperties": {
    "typeProperties": {
      "C2CapaRevision": {
        "additionalProperties": [
          {
            "name": "c2_capa_owner"
          },
          {
            "name": "HasParticipant"
          },
          {
            "name": "object_name"
          }
        ]
      },
      "CPA0CorrectiveAction": {
        "additionalProperties": [
          {
            "name": "caw0RootCause"
          }
        ]
      },
      "CPA0ImplCorrAction": {
        "additionalProperties": [
          {
            "name": "caw0RootCause"
          }
        ]
      },
      "CAW05Why": {
        "additionalProperties": [
          {
            "name": "caw0NumOfWhy"
          },
          {
            "name": "caw0ProbDefinition"
          },
          {
            "name": "object_desc"
          },
          {
            "name": "caw05WhyType"
          },
          {
            "name": "caw0ProblemContext"
          },
          {
            "name": "caw0AnalysisDimension"
          },
          {
            "name": "caw0AnalysisType"
          },
          {
            "name": "object_name"
          }
        ]
      },
      "CAW0Defect": {
        "additionalProperties": [
          {
            "name": "caw0Context"
          },
          {
            "name": "caw0rootCause"
          },
          {
            "name": "object_desc"
          },
          {
            "name": "caw0WhySequence"
          },
          {
            "name": "caw0category"
          },
          {
            "name": "caw0reoccuring"
          },
          {
            "name": "caw0CauseGroup"
          },
          {
            "name": "caw0ProblemContext"
          },
          {
            "name": "caw0AnalysisDimension"
          },
          {
            "name": "caw0AnalysisType"
          },
          {
            "name": "object_name"
          }
        ]
      },
      "CAW0Ishikawa": {
        "additionalProperties": [
          {
            "name": "caw0ProbDefinition"
          },
          {
            "name": "object_desc"
          },
          {
            "name": "caw0IshikawaCauseGroup"
          },
          {
            "name": "caw0ProblemContext"
          },
          {
            "name": "caw0AnalysisDimension"
          },
          {
            "name": "object_name"
          }
        ]
      },
      "Qam0QualityAction": {
        "additionalProperties": [
          {
            "name": "object_desc"
          },
          {
            "name": "object_name"
          },
          {
            "name": "qam0Comment"
          },
          {
            "name": "fnd0ResponsibleUser"
          },
          {
            "name": "qam0DueDate"
          },
          {
            "name": "qam0QualityActionStatus"
          },
          {
            "name": "qam0CompletionDate"
          },
          {
            "name": "caw0visibleInReport"
          }
        ]
      },
      "ReportDefinition": {
        "additionalProperties": [
          {
            "name": "rd_type"
          },
          {
            "name": "fnd0IsAsync"
          },
          {
            "name": "rd_class"
          },
          {
            "name": "rd_name"
          },
          {
            "name": "rd_source"
          },
          {
            "name": "rd_id"
          },
          {
            "name": "rd_query_source"
          },
          {
            "name": "rd_style_sheets"
          },
          {
            "name": "rd_parameters"
          },
          {
            "name": "rd_param_values"
          },
          {
            "name": "owning_user"
          }
        ]
      }
    }
  }
}
