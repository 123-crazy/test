{
    "schemaVersion": "1.0.0",
    "imports": [
        "js/aw-command-panel.directive",
        "js/aw-panel-body.directive",
        "js/aw-panel-section.directive",
        "js/aw-list-filter.directive",
        "js/aw-default-cell.directive",
        "js/aw-panel-footer.directive",
        "js/aw-button.directive",
        "js/visible-when.directive",
        "js/aw-i18n.directive",
        "js/aw-checkbox.directive"
    ],
    "actions": {
        "getSearchResults": {
            "actionType": "TcSoaService",
            "serviceName": "Internal-AWS2-2019-06-Finder",
            "method": "performSearchViewModel4",
            "inputData": {
                "columnConfigInput": {
                    "clientName": "AWClient",
                    "clientScopeURI": ""
                },
                "inflateProperties": false,
                "saveColumnConfigData": {},
                "searchInput": {
                    "maxToLoad": 50,
                    "maxToReturn": 50,
                    "providerName": "Aqc0QualityBaseProvider",
                    "searchFilterMap6": {
                        "WorkspaceObject.object_type": []
                    },
                    "searchCriteria": {
                        "parentGUID": "",
                        "searchStatus": "true",
                        "objectType": "Qfm0SystemEleSpec",
                        "catalogueObjectType": "",
                        "objectName": "{{data.filterBox.dbValue}}"
                    },
                    "startIndex": "{{data.dataProviders.loadFilteredList.startIndex}}",
                    "searchSortCriteria": [ {
                        "fieldName": "object_name",
                        "sortDirection": "ASC"
                    } ]
                }
            },
            "outputData": {
                "totalFound": "totalFound",
                "searchResponse": "{{json:searchResultsJSON}}",
                "ctx.search.totalFound": "totalFound",
                "ctx.search.totalLoaded": "totalLoaded"
            }
        },
        "loadList": {
            "actionType": "dataProvider",
            "method": "loadFilteredList"
        },
        "editSystemElementSpecInRep": {
            "actionType": "TcSoaService",
            "serviceName": "Core-2010-09-DataManagement",
            "method": "setProperties",
            "inputData": {
                "info": [ {
                    "object": "{{ctx.pselected}}",
                    "timestamp": "",
                    "vecNameVal": "{{function:createVecNameInputForRep}}"
                } ]
            },
            "outputData": {
                "serviceData": "ServiceData",
                "updateElementResponse": "",
                "updatedObject": "ServiceData.updated[0]"
            },
            "events": {
                "success": [ {
                        "name": "cdm.relatedModified",
                        "eventData": {
                            "relatedModified": [
                                "{{ctx.pselected}}"
                            ],
                            "refreshLocationFlag": false
                        }
                    },
                    {
                        "name": "complete",
                        "eventData": {
                            "source": "toolAndInfoPanel"
                        }
                    }
                ]
            },
            "actionMessages": {

                "failure": [ {
                    "condition": "data.serviceData.partialErrors.length > 0",
                    "message": "AttachObjectFailureMessage"
                } ]
            },
            "deps": "js/qfm0FmeaManagerUtils"
        },
        "addSystemElementSpecToRep": {
            "actionType": "TcSoaService",
            "serviceName": "Core-2010-09-DataManagement",
            "method": "setProperties",
            "inputData": {
                "info": [ {
                    "object": "{{ctx.selected}}",
                    "timestamp": "",
                    "vecNameVal": "{{function:createVecNameInputForRep}}"
                } ]
            },
            "outputData": {
                "serviceData": "ServiceData",
                "updateElementResponse": "",
                "updatedObject": "ServiceData.updated[0]"
            },
            "events": {
                "success": [ {
                        "name": "cdm.relatedModified",
                        "eventData": {
                            "relatedModified": [
                                "{{ctx.selected}}"
                            ],
                            "refreshLocationFlag": false
                        }
                    },
                    {

                        "name": "complete",
                        "eventData": {
                            "source": "toolAndInfoPanel"
                        }
                    }
                ]
            },
            "actionMessages": {
                "failure": [ {
                    "condition": "data.serviceData.partialErrors.length > 0",
                    "message": "AttachObjectFailureMessage"
                } ]
            },
            "deps": "js/qfm0FmeaManagerUtils"
        },
        "closePanel": {
            "actionType": "Event",
            "method": "Event",
            "inputData": {
                "events": [ {
                    "name": "complete",
                    "eventData": {
                        "source": "toolAndInfoPanel"
                    }
                } ]
            }
        }
    },
    "data": {
        "filterBox": {
            "displayName": "",
            "type": "STRING",
            "dbValue": ""
        },
        "searchBoxPlaceHolder": {
            "dbValue": "{{i18n.qfm0SearchString}}"
        },
        "updateRepNameBasisSpec": {
            "displayName": "{{i18n.qfm0UpdateSystemEleRepNameBasisSpec}}",
            "type": "BOOLEAN",
            "isRequired": "false",
            "isEditable": "true",
            "dbValue": false,
            "labelPosition": "PROPERTY_LABEL_AT_RIGHT"
        }
    },
    "dataProviders": {
        "loadFilteredList": {
            "action": "getSearchResults",
            "response": "{{data.searchResponse}}",
            "totalFound": "{{data.totalFound}}",
            "selectionModelMode": "single"
        }
    },
    "conditions": {
        "isAddSystemSpecificationCommandActive": {
            "expression": "ctx.relationContext===undefined"
        },
        "isReplaceSystemSpecificationCommandActive": {
            "expression": "ctx.relationContext!==undefined"
        }
    },
    "onEvent": [ {
            "eventId": "awPanel.reveal",
            "action": "loadList"
        },
        {
            "eventId": "qfm0.addElement",
            "cacheEventData": true
        },
        {
            "eventId": "gwt.SubLocationContentSelectionChangeEvent",
            "action": "closePanel"
        }
    ],
    "i18n": {
        "qfm0Add": [
            "qualityFmeaMessages"
        ],
        "toTitle": [
            "qualityFmeaMessages"
        ],
        "qfm0SystemSpecification": [
            "qualityFmeaMessages"
        ],
        "qfm0Replace": [
            "qualityFmeaMessages"
        ],
        "qfm0AttachSpecification": [
            "qualityFmeaMessages"
        ],
        "qfm0SearchString": [
            "qualityFmeaMessages"
        ],
        "PartialError": [
            "qualityFmeaMessages"
        ],
        "qfm0noSearchResultsforSystemElement": [
            "qualityFmeaMessages"
        ],
        "qfm0UpdateSystemEleRepNameBasisSpec": [
            "qualityFmeaMessages"
        ]
    },
    "functions": {
        "createVecNameInputForRep": {
            "functionName": "createVecNameInputForRep",
            "parameters": [ "{{data}}" ]
        }
    },
    "messages": {
        "AttachObjectFailureMessage": {
            "messageType": "ERROR",
            "messageText": "{{i18n.PartialError}}",
            "messageTextParams": [
                "{{data.serviceData.partialErrors[0].errorValues[0].message}}"
            ]
        },
        "displayError": {
            "messageType": "ERROR",
            "messageText": "{{i18n.PartialError}}",
            "messageTextParams": [
                "{{data.errorMessage}}"
            ]
        }
    }
}
