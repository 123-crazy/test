{
    "schemaVersion" : "1.0.0",
    "imports":[ "js/aw-panel-body.directive",
                "js/aw-textbox.directive",
                "js/exist-when.directive",
                "js/aw-datetime.directive",
                "js/aw-date.directive",
                "js/aw-panel-footer.directive",
                "js/aw-button.directive",
                "js/aw-listbox.directive",
                "js/aw-i18n.directive"
    ],

    "data" :
    {
        "nameBox":{
            "displayName": "{{i18n.name}}",
            "type": "STRING",
            "dbValue": "{{ctx.editEffectivityContext.nameBox}}",
            "isRequired": "true",
            "maxLength":128
        },
        "startDateTime":
        {
            "dbValue": "{{ctx.editEffectivityContext.startDateTime}}",
            "type": "DATETIME",
            "isRequired": "true",
            "displayName": "{{i18n.startDate}}",
            "isEditable": "true"
        },

        "endDateTime":
        {
            "dbValue": "{{ctx.editEffectivityContext.endDateTime}}",
            "type": "DATETIME",
            "isRequired": "true",
            "validationCriteria": [ {
                    "condition": "conditions.isValidStartAndEndDate",
                    "value": "{{i18n.dateRangeInvalidMessage}}"
                } ]
        },
        "effectivity" : "{{ctx.editEffectivityContext.effectivity}}",
        "groupRevision" : {"uid": "{{ctx.editEffectivityContext.groupRevision}}"},
        "endDateOptions":
        {
            "type": "STRING",
            "isRequired": "true",
            "hasLov":true,
            "displayName": "{{i18n.endDate}}",
            "isEditable": "true",
            "dbValue": "{{ctx.editEffectivityContext.endDateOption}}"
        },
        "endDateList":{
            "type": "STRING",
            "dbValue":
            [
                {"propDisplayValue" :"{{i18n.dateEffectivity}}", "propInternalValue" : "Date"},
                {"propDisplayValue" :"{{i18n.upText}}", "propInternalValue" : "UP"},
                {"propDisplayValue" :"{{i18n.soText}}", "propInternalValue" : "SO"}
            ]
        }
    },
    "actions": {
        "EditEffectivity": {
            "actionType": "TcSoaService",
            "serviceName": "Core-2010-09-DataManagement",
            "method": "setProperties",
            "inputData":
            {
                "info":
                [
                    {
                        "object": "{{ctx.editEffectivityContext.selectedCell}}",
                        "vecNameVal":
                        [
                            {
                                "name": "object_name",
                                "values":
                                [
                                    "{{data.nameBox.dbValue}}"
                                ]
                            }
                        ]
                    }
                ]
            },
            "events":
            {
                "success":
                [
                    {
                        "name": "EditEffectivity_done"
                    }
                ]
            },
            "deps": "js/effectivityGroupTableService"
        },
        "updateEffectivities": {
            "actionType": "TcSoaService",
            "serviceName": "Internal-StructureManagement-2021-12-EffectivitiesManagement",
            "method": "createOrUpdateDateEffectivities",
            "inputData":
            {
                "effectivitiesInfo": [{
                    "clientId" : "editEffectivities",
                    "effectivityComponent": "{{data.effectivity}}",
                    "endItemComponent": {
                        "type": "unknownType",
                        "uid": "AAAAAAAAAAAAAA"
                    },
                    "dateRange": "{{function:getDateRange}}",
                    "openEndedStatus": "{{function:getOpenEndedStatus}}",
                    "decision": 1
                }],
                "effectivityGroupRevision": {
                    "type": "{{data.groupRevision.type}}",
                    "uid": "{{data.groupRevision.uid}}"
                }
           },
           "events":
           {
               "success":
               [
                   {
                       "name": "updateEffectivities_done"
                   }
               ]
           },
           "deps": "js/effectivityGroupTableService"
        },
        "applyEffectivityGroup": {
            "actionType": "batchJob",
            "steps": [ {
                    "action": "updateRequestPrefOnCurrentContext"
                },{
                    "action": "applyGroupEffectivity"
                }
            ]
        },
        "updateRequestPrefOnCurrentContext": {
            "actionType": "JSFunction",
            "method": "updatePartialCtx",
            "inputData": {
                "path": "aceActiveContext.context.transientRequestPref",
                "value": {
                    "jitterFreePropLoad" : true,
                    "userGesture": "EFFECTIVITY_CHANGE"
                }
            },
            "deps": "js/appCtxService"
        },
        "applyGroupEffectivity":
        {
            "actionType": "JSFunction",
            "method": "updatePartialCtx",
            "inputData":
            {
                "path": "aceActiveContext.context.configContext",
                "value":{
                    "r_uid": "{{ctx.aceActiveContext.context.productContextInfo.props.awb0CurrentRevRule.dbValues[0]}}",
                    "eg_uids": "{{function:appendAndApplyEditedGroupEffectivity}}",
                    "ue": "{{data.contextKeyObject.productContextInfo.props.awb0EffUnitNo.dbValues[0]}}",
                    "ei_uid": "{{data.contextKeyObject.productContextInfo.props.awb0EffEndItem.dbValues[0]}}",                    
                    "var_uids": "{{data.contextKeyObject.productContextInfo.props.awb0VariantRules.dbValues}}",
                    "iro_uid": "{{data.contextKeyObject.productContextInfo.props.awb0VariantRuleOwningRev.dbValues[0]}}",
                    "startFreshNavigation": true
                }
            },
            "events": {
                "success": [{
                    "name": "complete",
                    "eventData":
                    {
                        "source": "aw_navigation"
                    }
                }
               ]
            },
            "deps": "js/dateEffectivityConfigurationService"
        }
    },
    "onEvent": [
        {
            "eventId": "EditEffectivity_done",
            "action": "updateEffectivities"
        },
        {
            "eventId": "updateEffectivities_done",
            "action": "applyEffectivityGroup"
        }
    ],
    "functions": {
        "appendAndApplyEditedGroupEffectivity": {
            "functionName": "applyDateEffectivityGroups",
            "parameters": ["{{data}}", "{{ctx.editEffectivityContext.selectedCell}}"]
        },
        "getDateRange": {
            "functionName": "getDateRange",
            "parameters":
            [
                "{{data}}"
            ]
        },
        "getOpenEndedStatus": {
            "functionName": "getOpenEndedStatus",
            "parameters": [
                "{{data}}"
            ]
        }
    },
    "conditions":
    {
        "isValidStartAndEndDate": {
            "expression": "data.endDateTime.dateApi.dateValue !== '' && data.startDateTime.dateApi.dateValue !== '' && data.endDateTime.dbValue > data.startDateTime.dbValue"
        },
        "isEndDateVisible" : {
            "expression": "data.endDateOptions.dbValue !== 'UP' && data.endDateOptions.dbValue !== 'SO'"
        }
    },
    "i18n":
    {
        "upText":["OccurrenceManagementConstants"],
        "soText":["OccurrenceManagementConstants"],
        "dateEffectivity":["OccurrenceManagementConstants"],
        "name":["OccurrenceManagementConstants"],
        "startDate":["OccurrenceManagementConstants"],
        "endDate":["OccurrenceManagementConstants"],
        "dateRangeInvalidMessage":["OccurrenceManagementMessages"],
        "apply":[ "OccurrenceManagementConstants" ]
    }
}
