{
    "schemaVersion": "1.0.0",
    "imports": [
        "js/aw-panel-body.directive",
        "js/aw-panel-section.directive",
        "js/visible-when.directive",
        "js/aw-panel-footer.directive",
        "js/aw-button.directive",
        "js/aw-checkbox.directive",
        "js/aw-i18n.directive",
        "js/aw-list.directive",
        "js/aw-type-cell.directive",
        "js/aw-type-icon.directive",
        "js/aw-type-selector.directive",
        "js/aw-xrt.directive",
        "js/aw-command-panel-section.directive",
        "js/aw-default-cell.directive",
        "js/aw-form.directive",
        "js/exist-when.directive",
        "js/aw-title-link.directive",
        "js/aw-include.directive"
    ],
    "actions": {
        "submitToHostAction": {
            "actionType": "JSFunction",
            "method": "sendEventToHost",
            "inputData": {
                "data": "{{data}}"
            },
            "deps": "js/changeMgmtUtils"
        },
        "createChangeObject": {
            "actionType": "JSFunctionAsync",
            "method": "getCreateInput",
            "inputData": {
                "data": "{{data}}",
                "isSubmit": false
            },
            "outputData": {
                "createChangeInput": "",
                "isSubmitAction": false
            },
            "events": {
                "success": [ {
                        "condition": "conditions.isValidNewSOAForDerive",
                        "name": "createChange.callNewDeriveSoa"
                    },
                    {
                        "condition": "(data.selectedType.dbValue =='C2Capa' || data.parent_types.dbValue.indexOf( 'TYPE::C2Capa::C2Capa::ProblemReport' ) > -1) && ctx.CreateChangePanel.isDerive && ctx.tcSessionData.tcMajorVersion >= 13",
                        "name": "createChange.callNewDeriveCAPASoa"
                    },
                    {
                        "condition": "!ctx.CreateChangePanel.isDerive || ( ctx.tcSessionData.tcMajorVersion <= 12 && ctx.tcSessionData.tcMinorVersion < 3 )",
                        "name": "createChange.callSoa"
                    }
                ]
            },
            "deps": "js/Cm1CreateChangeService"
        },
        "submitChangeObject": {
            "actionType": "JSFunctionAsync",
            "method": "getCreateInput",
            "inputData": {
                "data": "{{data}}",
                "isSubmit": true
            },
            "outputData": {
                "submitChangeInput": "",
                "isSubmitAction": true
            },
            "events": {
                "success": [ {
                        "condition": "conditions.isValidNewSOAForDerive",
                        "name": "submitChange.callNewDeriveSoa"
                    },
                    {
                        "condition": "(data.selectedType.dbValue =='C2Capa' || data.parent_types.dbValue.indexOf( 'TYPE::C2Capa::C2Capa::ProblemReport' ) > -1) && ctx.CreateChangePanel.isDerive && ctx.tcSessionData.tcMajorVersion >= 13",
                        "name": "submitChange.callNewDeriveCAPASoa"
                    },
                    {
                        "condition": "!ctx.CreateChangePanel.isDerive || ( ctx.tcSessionData.tcMajorVersion <= 12 && ctx.tcSessionData.tcMinorVersion < 3 )",
                        "name": "submitChange.callSoa"
                    }
                ]
            },
            "deps": "js/Cm1CreateChangeService"
        },
        "enableDataProvider": {
            "actionType": "dataProvider",
            "method": "getCreatableChangeTypes"
        },
        "clearSelectedType": {
            "actionType": "JSFunction",
            "method": "clearSelectedType",
            "inputData": {
                "data": "{{data}}"
            },
            "deps": "js/Cm1CreateChangeService"
        },
        "openNewObjectInEditMode": {
            "actionType": "JSFunction",
            "method": "openNewObjectInEditMode",
            "inputData": {
                "data": "{{data}}"
            },
            "deps": "js/Cm1CreateChangeService"
        },
        "ensureChangeTypesLoaded": {
            "actionType": "JSFunctionAsync",
            "method": "ensureChangeTypesLoadedJs",
            "inputData": {
                "data": "{{data}}"
            },
            "outputData": {
                "totalFound": "totalFound",
                "searchResults": "searchResults"
            },
            "events": {
                "success": [ {
                    "condition": "data.totalFound <= 0",
                    "name": "complete",
                    "eventData": {
                        "source": "toolAndInfoPanel"
                    }
                } ]
            },
            "actionMessages": {
                "success": [ {
                        "condition": "data.totalFound <= 0 && !ctx.CreateChangePanel.isDerive",
                        "message": "noSupportedTypesError"
                    },
                    {
                        "condition": "data.totalFound <= 0 && ctx.CreateChangePanel.isDerive",
                        "message": "noSupportedTypesErrorDerive"
                    }
                ]
            },
            "policy": {
                "types": [ {
                    "name": "ImanType",
                    "properties": [ {
                            "name": "type_name"
                        },
                        {
                            "name": "parent_types"
                        }
                    ]
                } ]
            },
            "deps": "js/Cm1CreateChangeService"
        },

        "handleTypeSelection": {
            "actionType": "JSFunction",
            "method": "handleTypeSelectionJs",
            "inputData": {
                "data": "{{data}}"
            },
            "deps": "js/Cm1CreateChangeService"
        },
        "addAttachement": {
            "actionType": "JSFunction",
            "method": "addAttachment",
            "inputData": {
                "data": "{{data}}",
                "selectedObjects": "{{data.eventData.selectedObjects}}",
                "eventData": "{{data.eventData}}"
            },
            "deps": "js/Cm1CreateChangeService"
        },
        "addCreatedAttachement": {
            "actionType": "JSFunction",
            "method": "addCreatedAttachement",
            "inputData": {
                "data": "{{data}}"
            },
            "deps": "js/Cm1CreateChangeService"
        },
        "removeAttachement": {
            "actionType": "JSFunction",
            "method": "removeAttachementJs",
            "inputData": {
                "selectedAttachToRemove": "{{commandContext.dataProviders.getAttachements.selectedObjects}}"
            },

            "deps": "js/Cm1CreateChangeService"
        },

        "createChangeObjectSoa": {
            "actionType": "TcSoaService",
            "serviceName": "Internal-Core-2012-10-DataManagement",
            "method": "createRelateAndSubmitObjects",
            "inputData": {
                "inputs": "{{data.createChangeInput}}"
            },

            "outputData": {
                "createdChangeObj": "output[0].objects[0]",
                "createdChangeObject": "output[0].objects[2]",
                "isCreatePinEvent": "true",
                "changeResponse":"output"
            },

            "events": {
                "success": [ {
                    "name": "createchangePanel.fireEventsAfterCreateOperation"
                } ],
                "failure": [
                    {
                        "name": "visualizationChange.passFailResponse",
                        "condition": "ctx.CreateChangePanel.exactTypeToCreate !== ''"
                    }
                ]
            },
            "actionMessages": {
                "success": [ {
                    "message": "createObjectSuccess",
                    "condition": "data.unpinnedToForm.dbValue === true || data.openNewChange.dbValue === false"
                } ],
                "failure": [ {
                    "message": "failureMessageFromSOA"
                } ]
            },
            "deps": "js/Cm1CreateChangeService"
        },

        "submitChangeObjectSoa": {
            "actionType": "TcSoaService",
            "serviceName": "Internal-Core-2012-10-DataManagement",
            "method": "createRelateAndSubmitObjects",
            "inputData": {
                "inputs": "{{data.submitChangeInput}}"
            },

            "outputData": {
                "createdChangeObj": "output[0].objects[0]",
                "createdChangeObject": "output[0].objects[2]",
                "isCreatePinEvent": "true",
                "changeResponse":"output"
            },

            "events": {
                "success": [ {
                    "name": "createchangePanel.fireEventsAfterCreateOperation",
                    "eventData": {
                        "createChangeData": "{{data.createdChangeObject}}"
                    }
                } ],
                "failure": [
                    {
                        "name": "visualizationChange.passFailResponse",
                        "condition": "ctx.CreateChangePanel.exactTypeToCreate !== ''"
                    }
                ]
            },
            "actionMessages": {
                "success": [ {
                    "message": "submitToWorkflowSuccess"
                } ],
                "failure": [ {
                    "message": "failureMessageFromSOA"
                } ]
            },
            "deps": "js/Cm1CreateChangeService"
        },

        "deriveChangeObjectSoa": {
            "actionType": "TcSoaService",
            "serviceName": "ChangeManagement-2020-01-ChangeManagement",
            "method": "deriveChangeItems",
            "inputData": {
                "deriveInput": "{{data.createChangeInput}}"

            },
            "outputData": {
                "derivedObjectUid": "created[1]",
                "changeResponse":"modelObjects"
            },

            "events": {
                "success": [
                    {
                        "name": "createVisRelations",
                        "condition": "ctx.CreateChangePanel.isDerive && ctx.CreateChangePanel.exactTypeToCreate !== '' && ctx.CreateChangePanel.hasExtraAttachements=== true"
                    },
                    {
                        "name": "createchangePanel.fireEventsAfterCreateOperation",
                        "condition": "ctx.CreateChangePanel.hasExtraAttachements=== false "
                    }
                ],
                "failure": [
                    {
                        "name": "visualizationChange.passFailResponse",
                        "condition": "ctx.CreateChangePanel.exactTypeToCreate !== ''"
                    }
                ]
            },
            "actionMessages": {
                "success": [ {
                    "message": "deriveObjectSuccess",
                    "condition": "data.unpinnedToForm.dbValue === true"
                } ],
                "failure": [ {
                    "message": "failureMessageFromSOA"
                } ]
            },

            "deps": "js/Cm1CreateChangeService"
        },
        "deriveCAPAObjectSoa": {
            "actionType": "TcSoaService",
            "serviceName": "Internal-Capaonawc-2020-12-QualityIssueManagement",
            "method": "deriveProblemSolvingItems",
            "inputData": {
                "deriveInput": "{{data.createChangeInput}}",
                "deriveOptions": "{{function:getDeriveOptions}}"
            },
            "outputData": {
                "derivedObjectUid": "created[1]"
            },

            "events": {
                "success": [ {
                    "name": "createchangePanel.fireEventsAfterCreateOperation"
                } ]
            },
            "actionMessages": {
                "success": [ {
                    "message": "deriveObjectSuccess",
                    "condition": "data.unpinnedToForm.dbValue === true"
                } ],
                "failure": [ {
                    "message": "failureMessageFromSOA"
                } ]
            },

            "deps": "js/Cm1CreateChangeService"
        },

        "submitDeriveChangeObjectSoa": {
            "actionType": "TcSoaService",
            "serviceName": "ChangeManagement-2020-01-ChangeManagement",
            "method": "deriveChangeItems",
            "inputData": {
                "deriveInput": "{{data.submitChangeInput}}"
            },

            "outputData": {
                "derivedObjectUid": "created[1]",
                "changeResponse":"modelObjects"
            },

            "events": {
                "success": [
                    {
                        "name": "createVisRelations",
                        "condition": "ctx.CreateChangePanel.isDerive && ctx.CreateChangePanel.exactTypeToCreate !== '' && ctx.CreateChangePanel.hasExtraAttachements=== true"
                    },
                    {
                        "name": "createchangePanel.fireEventsAfterCreateOperation",
                        "condition": "ctx.CreateChangePanel.hasExtraAttachements=== false "
                    }
                ],
                "failure": [
                    {
                        "name": "visualizationChange.passFailResponse",
                        "condition": "ctx.CreateChangePanel.exactTypeToCreate !== ''"
                    }
                ]
            },
            "actionMessages": {
                "success": [ {
                    "message": "submitDeriveToWorkflowSuccess"
                } ],
                "failure": [ {
                    "message": "failureMessageFromSOA"
                } ]
            },

            "deps": "js/Cm1CreateChangeService"
        },
        "submitDeriveChangeCAPAObjectSoa": {
            "actionType": "TcSoaService",
            "serviceName": "Internal-Capaonawc-2020-12-QualityIssueManagement",
            "method": "deriveProblemSolvingItems",
            "inputData": {
                "deriveInput": "{{data.submitChangeInput}}",
                "deriveOptions": "{{function:getDeriveOptions}}"
            },

            "outputData": {
                "derivedObjectUid": "created[1]"
            },

            "events": {
                "success": [ {
                    "name": "createchangePanel.fireEventsAfterCreateOperation"
                } ]
            },
            "actionMessages": {
                "success": [ {
                    "message": "submitDeriveToWorkflowSuccess"
                } ],
                "failure": [ {
                    "message": "failureMessageFromSOA"
                } ]
            },

            "deps": "js/Cm1CreateChangeService"
        },

        "navigateToCreateChangePanel": {
            "actionType": "Event",
            "method": "Event",
            "inputData": {
                "events": [ {
                    "name": "awPanel.navigate",
                    "eventData": {
                        "destPanelId": "Cm1CreateChangeSub",
                        "eventData": "{{data.eventData}}"
                    }
                } ]
            }
        },
        "getCreatableChangeTypeSoa": {
            "actionType": "TcSoaService",
            "serviceName": "Internal-ChangeManagement-2012-10-ChangeManagement",
            "method": "getCreatableChangeTypes",
            "inputData": {
                "inputs": "{{function:getInputForCreatableChangeType}}"
            },
            "outputData": {
                "changeTypeNames": "{{function:processResponseForTypeNames}}"
            },
            "events": {
                "success": [ {
                    "name": "getCMType.ensureTypesLoaded"
                } ]
            },

            "deps": "js/Cm1CreateChangeService"
        },
        "getCreatableChangeTypesProvided": {
            "actionType": "JSFunctionAsync",
            "method": "getCreatableChangeTypesProvided",
            "inputData": {
                "data": "{{data}}"
            },
            "events": {
                "success": [ {
                    "name": "getCMType.ensureTypesLoaded"
                } ]
            },
            "deps": "js/Cm1CreateChangeService"
        },
        "getCreatableChangeTypesForDerive": {
            "actionType": "JSFunctionAsync",
            "method": "getCreatableChangeTypesForDerive",
            "inputData": {
                "data": "{{data}}"
            },
            "events": {
                "success": [ {
                    "name": "getCMType.ensureTypesLoaded"
                } ]
            },
            "deps": "js/Cm1CreateChangeService"
        },
        "hostedModeCreateNewIssueReport": {
            "actionType": "JSFunctionAsync",
            "method": "handleHostedModeIssueTypeCreation",
            "inputData": {
                "data": "{{data}}"
            },
            "deps": "js/Cm1CreateChangeService"
        },
        "initializeDefaultValues": {
            "actionType": "JSFunction",
            "method": "initializeDefaultValues",
            "inputData": {
                "data": "{{data}}"
            },
            "deps": "js/Cm1CreateChangeService"
        },

        "enableButtons": {
            "actionType": "JSFunction",
            "method": "enableButtons",
            "inputData": {
                "data": "{{data}}"
            },
            "deps": "js/Cm1CreateChangeService"
        },

        "getCreatableChangeTypeEvent": {
            "actionType": "Event",
            "method": "Event",
            "inputData": {
                "events": [ {
                        "name": "getCMTypes.callSoa",
                        "condition": "!ctx.CreateChangePanel.isDerive && !ctx.CreateIssueHostedMode && ctx.CreateChangePanel.exactTypeToCreate === '' "
                    },

                    {
                        "name": "getCMTypes.useProvidedType",
                        "condition": "!ctx.CreateChangePanel.isDerive && ( ctx.CreateIssueHostedMode || ctx.CreateChangePanel.exactTypeToCreate !== '')"
                    },

                    {
                        "name": "getCMTypes.forDerive",
                        "condition": "ctx.CreateChangePanel.isDerive"
                    }
                ]
            }
        },
        "autoAssignProperty": {
            "actionType": "JSFunction",
            "method": "autoAssignProperty",
            "inputData": {
                "prop": "{{data.eventData.prop}}",
                "operationType": "CREATE",
                "pattern": "{{data.eventData.newPattern}}",
                "selectedObj": "{{}}",
                "hasRevRule": "{{data.hasRevRuleAttached}}"
            },
            "deps": "js/autoAssignService"
        },
        "getCmOwningProjectsAct": {
            "actionType": "JSFunction",
            "method": "createViewModelObjectById",
            "inputData": {
                "uid": "{{ctx.userSession.props.project.dbValues[0]}}",
                "operationName": "CREATE"
            },

            "outputData": {
                "owningProjects": ""
            },

            "deps": "js/tcViewModelObjectService"
        },
        "loadUserProjects": {
            "actionType": "JSFunctionAsync",
            "method": "loadObjects",
            "inputData": {
                "data": [ "{{ctx.userSession.props.project.dbValues[0]}}" ]
            },
            "events": {
                "success": [ {
                    "condition": "ctx.userSession.props.project.dbValues[0] !== ''",
                    "name": "init.assignedChProjectsProvider"
                } ]
            },
            "deps": "soa/dataManagementService"
        },
        "assignProjectsToCreatedObject": {
            "actionType": "TcSoaService",
            "serviceName": "Core-2007-09-ProjectLevelSecurity",
            "method": "assignOrRemoveObjects",
            "inputData": {
                "assignedOrRemovedobjects": [ {
                    "projects": "{{data.dataProviders.getAssignedProjectsProvider.viewModelCollection.loadedVMObjects}}",
                    "objectToAssign": "{{function:getInputForAssignAndRemoveObjectsSOA}}",
                    "objectToRemove": []
                } ]
            },
            "events": {
                "success": [ {
                    "name": "closeCreatePanelOpenChangeObjectEvent"
                } ]
            },
            "deps": "js/Cm1CreateChangeService"
        },
        "enableResponsibleUserDataProvider": {
            "actionType": "JSFunction",
            "method": "updateResponsibleUserDataProvider",
            "inputData": {
                "data": "{{data.selectedObjects[0]}}"
            },
            "deps": "js/Cm1CreateChangeService"
        },
        "addSelectedResponsibleUser": {
            "actionType": "JSFunction",
            "method": "addUserInSelectedObjects",
            "inputData": {
                "data": "{{data.selectedResponsibleUser[0]}}"
            },
            "deps": "js/Cm1CreateChangeService"
        },
        "cm1SetPin": {
            "actionType": "JSFunction",
            "method": "setPin",
            "inputData": {
                "data": "{{data.eventData.data}}"
            },
            "outputData": {},
            "deps": "js/addObjectUtils"
        },
        "cm1SetUnPin": {
            "actionType": "JSFunction",
            "method": "setUnPin",
            "inputData": {
                "data": "{{data.eventData.data}}"
            },
            "outputData": {},
            "deps": "js/addObjectUtils"
        },
        "generateNextValues": {
            "actionType": "JSFunction",
            "method": "autoAssignAllProperties",
            "inputData": {
                "data": "{{data}}",
                "operationType": "CREATE"
            },

            "deps": "js/autoAssignService"
        },
        "closePanel": {
            "actionType": "Event",
            "method": "Event",
            "inputData": {
                "events": [ {
                    "name": "complete",
                    "eventData": {
                        "source": "toolAndInfoPanel"
                    },
                    "condition": "conditions.panelCloseCondition"
                } ]
            }
        },
        "setConditionToPin": {
            "actionType": "JSFunction",
            "method": "setConditionToPin",
            "inputData": {
                "data": "{{data}}"
            },
            "deps": "js/Cm1CreateChangeService"
        },
        "panelUnpinClose": {
            "actionType": "JSFunction",
            "method": "panelUnpinClose",
            "inputData": {
                "data": "{{data}}"
            },
            "deps": "js/Cm1CreateChangeService"
        },
        "fireEventsAfterCreateOperation": {
            "actionType": "Event",
            "method": "Event",
            "inputData": {
                "events": [ {
                        "name": "primaryWorkarea.reset",
                        "condition": "(( ctx.search.provider === 'Cm1MyChangesProvider' ) && (data.isSubmitAction === true || ( data.isSubmitAction === false && data.unpinnedToForm.dbValue === true))) || data.openNewChange.dbValue === false"
                    },
                    {
                        "name": "submissionSuccessful",
                        "eventData": {
                            "createChangeData": "{{data}}"
                        }
                    },

                    {
                        "name": "assignProjects",
                        "condition": "data.dataProviders.getAssignedProjectsProvider.viewModelCollection.loadedVMObjects.length>0"
                    },
                    {
                        "name": "closeCreatePanelOpenChangeObjectEvent",
                        "condition": "data.dataProviders.getAssignedProjectsProvider.viewModelCollection.loadedVMObjects.length<=0"
                    },
                    {
                        "name": "cdm.relatedModified",
                        "eventData": {
                            "relatedModified": [
                                "{{ctx.selected}}"
                            ]
                        }
                    },
                    {
                        "name": "cdm.relatedModified",
                        "condition": "ctx.xrtPageContext.primaryXrtPageID === 'tc_xrt_Content' && ctx.xrtPageContext.secondaryXrtPageID === 'tc_xrt_Changes'",
                        "eventData": {
                            "relatedModified": [
                                "{{ctx.selected}}"
                            ],
                            "refreshLocationFlag": true
                        }
                    },
                    {
                        "name": "cdm.relatedModified",
                        "condition": "( ctx.selected.modelType.typeHierarchyArray.indexOf( 'C2IssueRevision' ) > -1 && (ctx.pselected.modelType.typeHierarchyArray.indexOf( 'Prg0AbsPlan' ) > -1 || ctx.pselected.modelType.typeHierarchyArray.indexOf( 'Prg0AbsEvent' ) > -1 || ctx.pselected.modelType.typeHierarchyArray.indexOf( 'Psi0AbsChecklist' ) > -1 ))",
                        "eventData": {
                            "relatedModified": [
                                "{{ctx.pselected}}"
                            ]
                        }
                    },
                    {
                        "name": "setConditionToPin",
                        "condition": "data.unpinnedToForm.dbValue === true"
                    },
                    {
                        "name": "awPanel.loadNextValues",
                        "condition": "data.unpinnedToForm.dbValue === true"
                    }
                ]
            }
        },
        "closeCreatePanelOpenChangeObject": {
            "actionType": "Event",
            "method": "Event",
            "inputData": {
                "events": [ {
                        "condition": "data.unpinnedToForm.dbValue === false && data.openNewChange.dbValue === true && !conditions.isIssueFromVisualization",
                        "name": "Cm1CreateChange.openInEditMode"


                    },
                    {
                       "condition":"conditions.isIssueFromVisualization && conditions.openIssueInEditMode",
                       "name": "Cm1CreateChange.openInEditMode"
                    },
                    {
                        "name": "complete",
                        "eventData": {
                            "source": "toolAndInfoPanel"
                        },
                        "condition": "data.unpinnedToForm.dbValue === false && data.createRelationForChange !== true"

                    },
                    {
                        "name": "createChangePanelClosed",
                        "eventData": {
                            "createChangeResponse":  "{{data.changeResponse}}"
                        }

                    }
                ]
            }
        },
        "removeSymptomDefect": {
            "actionType": "JSFunction",
            "method": "removeSymptomDefect",
            "inputData": {
                "data": "{{data}}"
            },
            "deps": "js/Cm1CreateChangeService"
        },
        "PopulateCopyOptions": {
            "actionType": "batchJob",
            "steps": [
                {
                    "action": "loadDeepCopyData",
                    "condition": "conditions.isValidCopyOption"
                },
                {
                    "action": "loadRelations",
                    "condition": "conditions.isValidCopyOption"
                }
            ]
        },
        "loadDeepCopyData": {
            "actionType": "TcSoaService",
            "serviceName": "Core-2014-10-DataManagement",
            "method": "getDeepCopyData",
            "inputData": {
                "deepCopyDataInput": [{
                    "operation": "cm0DeriveChange",
                    "businessObject": "{{ctx.selected}}"
                }]
            },
            "outputData": {
                "deepCopyInfoMap": "deepCopyInfoMap"
            },
            "deps": "js/Cm1CreateChangeService"
        },
        "loadRelations": {
            "actionType": "JSFunction",
            "method": "getDeriveRelations",
            "inputData": {
                "data": "{{data}}",
                "deepCopyInfoMap": "{{data.deepCopyInfoMap}}"
            },
            "deps": "js/cmDeriveRelationDirective"
        },

        "clearVisCtx":
        {
            "actionType": "JSFunctionAsync",
            "method": "clearVisCtx",
            "inputData":{},
            "deps": "js/Cm1ChangeCommandService"
        },


        "callCreateRelationForVis":{
            "actionType": "TcSoaService",
            "serviceName": "Core-2006-03-DataManagement",
            "method": "createRelations",
            "inputData": {
                "input": "{{function:getVisAttachmentData}}"
            },
            "outputData": {
                "relation": "visRelations",
                "serviceData": "IServiceData"
            },
            "events": {
                "success": [
                    {
                        "name": "createchangePanel.fireEventsAfterCreateOperation"
                    }
                ]
            },
            "deps": "js/changeMgmtUtils"
        },
        "passVisFailResponse": {
            "actionType": "Event",
            "method": "Event",
            "inputData": {
                "events": [ {
                    "name": "createChangePanelClosed",
                        "eventData": {
                            "createChangeResponse":  "{{data.changeResponse}}"
                        }
                }]
            }
        },
        "clearCtxAppCreateChangePanel": {
            "actionType": "JSFunction",
            "method": "unRegisterCtx",
            "inputData": {
                "name": "appCreateChangePanel"
            },
            "deps": "js/appCtxService"
        }
    },
    "onEvent": [ {
            "eventId": "awPanel.reveal",
            "criteria": {
                "panelId": "Cm1CreateChangeSub"
            },
            "action": "getCreatableChangeTypeEvent"
        },
        {
            "eventId": "awPanel.reveal",
            "action": "PopulateCopyOptions"
        },
        {
            "eventId": "submissionSuccessful",
            "action": "submitToHostAction"
        },
        {
            "eventId": "setConditionToPin",
            "action": "setConditionToPin"
        },
        {
            "eventId": "getCMTypes.callSoa",
            "action": "getCreatableChangeTypeSoa"
        },
        {
            "eventId": "getCMTypes.useProvidedType",
            "action": "getCreatableChangeTypesProvided"
        },
        {
            "eventId": "getCMTypes.forDerive",
            "action": "getCreatableChangeTypesForDerive"
        },
        {
            "eventId": "getCreatableChangeTypes.selectionChangeEvent",
            "action": "handleTypeSelection"
        },
        {
            "eventId": "awTypeSelector.selectionChangeEvent",
            "cacheEventData": true,
            "action": "handleTypeSelection"
        },
        {
            "eventId": "changeReferences.assignobject",
            "action": "addAttachement",
            "cacheEventData": true
        },
        {
            "eventId": "addObjectCM.objectcreated",
            "action": "addCreatedAttachement"
        },
        {
            "eventId": "getCMType.ensureTypesLoaded",
            "action": "enableDataProvider"
        },
        {
            "eventId": "awXRT.contentLoaded",
            "action": "initializeDefaultValues"
        },
        {
            "eventId": "awXRT.contentLoaded",
            "action": "enableButtons"
        },
        {
            "eventId": "Cm1CreateChange.openInEditMode",
            "action": "openNewObjectInEditMode"
        },
        {
            "eventId": "createChange.callSoa",
            "action": "createChangeObjectSoa"
        },
        {
            "eventId": "createChange.callNewDeriveSoa",
            "action": "deriveChangeObjectSoa"
        },
        {
            "eventId": "createChange.callNewDeriveCAPASoa",
            "action": "deriveCAPAObjectSoa"
        },
        {
            "eventId": "submitChange.callSoa",
            "action": "submitChangeObjectSoa"
        },
        {
            "eventId": "submitChange.callNewDeriveSoa",
            "action": "submitDeriveChangeObjectSoa"
        },
        {
            "eventId": "submitChange.callNewDeriveCAPASoa",
            "action": "submitDeriveChangeCAPAObjectSoa"
        },
        {
            "eventId": "hostedModeCreateChange.IssueReport",
            "action": "hostedModeCreateNewIssueReport"
        },
        {
            "eventId": "Cm1RemoveAttachementCmdEvent",
            "action": "removeAttachement"
        },
        {
            "eventId": "awPattern.newPatternSelected",
            "cacheEventData": true,
            "action": "autoAssignProperty"
        },
        {
            "eventId": "awPanel.reveal",
            "action": "loadUserProjects",
            "criteria": {
                "panelId": "Cm1CreateChangeSub"
            }
        },
        {
            "eventId": "cm1userProjects.assignProjects",
            "action": "getAssignedProjectsProvider"
        },
        {
            "eventId": "cm1userProjects.assignProjects",
            "action": "navigateToCreateChangePanel"
        },
        {
            "eventId": "caw0addSymptomDefect",
            "action": "getSymptomDefectProvider"
        },
        {
            "eventId": "caw0addSymptomDefect",
            "action": "navigateToCreateChangePanel"
        },
        {
            "eventId": "init.assignedChProjectsProvider",
            "action": "getCmOwningProjectsProvider"
        },
        {
            "eventId": "assignProjects",
            "action": "assignProjectsToCreatedObject"
        },
        {
            "eventId": "closeCreatePanelOpenChangeObjectEvent",
            "action": "closeCreatePanelOpenChangeObject"
        },
        {
            "eventId": "addSelectionToMainPanel",
            "cacheEventData": true,
            "action": "navigateToCreateChangePanel"
        },
        {
            "eventId": "addSelectionToMainPanel",
            "cacheEventData": true,
            "action": "enableResponsibleUserDataProvider"
        },
        {
            "eventId": "getAssignedResponsibleUser.selectionChangeEvent",
            "action": "addSelectedResponsibleUser"
        },
        {
            "eventId": "createChangeWorkspace.Cm1SetPin",
            "cacheEventData": true,
            "action": "cm1SetPin"
        },
        {
            "eventId": "createChangeWorkspace.Cm1SetUnPin",
            "cacheEventData": true,
            "action": "cm1SetUnPin"
        },
        {
            "eventId": "awPanel.loadNextValues",
            "action": "generateNextValues"
        },
        {
            "eventId": "primaryWorkArea.selectionChangeEvent",
            "action": "panelUnpinClose"
        },
        {
            "eventId": "change.complete",
            "action": "closePanel"
        },
        {
            "eventId": "createchangePanel.fireEventsAfterCreateOperation",
            "action": "fireEventsAfterCreateOperation"
        },
        {
            "eventId": "Caw0RemoveSymptomDefectCommand.removeSymptomDefect",
            "action": "removeSymptomDefect"
        },
        {
            "eventId": "Cm1ShowCreateChangeInContext.contentUnloaded",
            "action": "clearVisCtx"

        },
        {
            "eventId": "Cm1ShowCreateChange.contentUnloaded",
            "action": "clearVisCtx"
        },
        {
            "eventId": "Cm1ShowDeriveChange.contentUnloaded",
            "action": "clearVisCtx"
        },
        {
            "eventId": "createVisRelations",
            "action": "callCreateRelationForVis"

        },
        {
            "eventId": "visualizationChange.passFailResponse",
            "action": "passVisFailResponse"

        }
    ],
    "lifecycleHooks": {
        "onUnmount": "clearCtxAppCreateChangePanel"
    },
    "data": {
        "filterBox": {
            "type": "STRING",
            "dbValue": ""
        },
        "typeName": {
            "type": "STRING",
            "dbValue": ""
        },
        "typeDisplayName": {
            "type": "STRING",
            "dbValue": ""
        },
        "selectedType": {
            "type": "STRING",
            "dbValue": ""
        },
        "selectedTypeDisplayName": {
            "type": "STRING",
            "dbValue": ""
        },
        "parent_types": {
            "type": "OBJECTARRAY",
            "dbValue": []
        },
        "displayedType": {
            "displayName": "",
            "type": "STRING"
        },
        "showCopyOptions": {
            "dbValue": false,
            "type": "BOOLEAN"
        },
        "showSubmitButton": {
            "dbValue": false,
            "type": "BOOLEAN"
        },
        "showCreateButton": {
            "dbValue": false,
            "type": "BOOLEAN"
        },
        "isContentLoaded": {
            "dbValue": false,
            "type": "BOOLEAN"
        },
        "addObjectCommands": "cm1_addObjectCommands",
        "projectSectionCommands": "cm1_projectSectionCommands",
        "addResponsibleUserCommand": "cm1_addRespUserCommands",
        "addSymptomDefectCommand": "caw0_addSymptomDefectCommand",
        "cm1PinCommands": "cm1_oneStepPinCommands",
        "createRelationForChange": "{{ctx.PaletteAndSearchData.showPaletteAndSearch}}",
        "pinnedToForm": {
            "type": "BOOLEAN",
            "dbValue": true
        },
        "unpinnedToForm": {
            "type": "BOOLEAN",
            "dbValue": false
        },
        "isPanelPinned": {
            "type": "BOOLEAN",
            "dbValue": false
        },
        "isCreatePinEvent": {
            "type": "BOOLEAN",
            "dbValue": false
        },
        "openNewChange": {
            "displayName": "{{i18n.openNewChange}}",
            "type": "BOOLEAN",
            "isRequired": "false",
            "isEditable": "true",
            "dbValue": true,
            "labelPosition": "PROPERTY_LABEL_AT_RIGHT"
        }
    },
    "functions": {
        "getCreateInput": {
            "functionName": "getCreateInput",
            "parameters": [
                "{{data}}",
                "false"
            ]
        },
        "getInputForCreatableChangeType": {
            "functionName": "getInputForCreatableChangeType",
            "parameters": [
                "{{data}}"
            ]
        },
        "getInputForAssignAndRemoveObjectsSOA": {
            "functionName": "getInputForAssignAndRemoveObjectsSOA",
            "parameters": [
                "{{data}}"
            ]
        },
        "getCreateInputForSubmit": {
            "functionName": "getCreateInput",
            "parameters": [
                "{{data}}",
                "true"
            ]
        },
        "getDeriveInput": {
            "functionName": "getDeriveInput",
            "parameters": [
                "{{data}}",
                "false"
            ]
        },
        "getDeriveInputForSubmit": {
            "functionName": "getDeriveInput",
            "parameters": [
                "{{data}}",
                "true"
            ]
        },
        "getDeriveOptions": {
            "functionName": "getDeriveOptions",
            "parameters": [
                "{{data}}",
                "true"
            ]
        },
        "getVisAttachmentData":{
            "functionName": "getVisAttachmentData",
            "parameters": ["{{data}}"]
        }
    },

    "messages": {
        "submitToWorkflowSuccess": {
            "messageType": "INFO",
            "messageText": "{{i18n.submitToWorkflowSuccess}}",
            "messageTextParams": [
                "{{data.createdChangeObject}}"
            ]
        },
        "submitDeriveToWorkflowSuccess": {
            "messageType": "INFO",
            "messageText": "{{i18n.submitToWorkflowSuccess}}",
            "messageTextParams": [
                "{{data.object_name.dbValue}}"
            ]
        },
        "noSupportedTypesError": {
            "messageType": "INFO",
            "messageText": "{{i18n.noSupportedTypesError}}"
        },
        "noSupportedTypesErrorDerive": {
            "messageType": "INFO",
            "messageText": "{{i18n.noSupportedTypesErrorDerive}}"

        },
        "createObjectSuccess": {
            "messageType": "INFO",
            "messageText": "{{i18n.changeObjectAdded}}",
            "messageTextParams": [
                "{{data.createdChangeObject}}"
            ]
        },
        "deriveObjectSuccess": {
            "messageType": "INFO",
            "messageText": "{{i18n.changeObjectAdded}}",
            "messageTextParams": [
                "{{data.object_name.dbValue}}"
            ]
        },
        "failureMessageFromSOA": {
                "messageType": "ERROR",
                "messageText": "{{errorCode}}"
            }
    },

    "i18n": {
        "CreateChange": [ "CreateChangeMessages" ],
        "CreateButtonTitle": [ "CreateChangeMessages" ],
        "CreateSubmitButtonTitle": [ "CreateChangeMessages" ],
        "DeriveButtonTitle": [ "CreateChangeMessages" ],
        "DeriveSubmitButtonTitle": [ "CreateChangeMessages" ],
        "objectType": [ "CreateChangeMessages" ],
        "submitToWorkflowSuccess": [ "CreateChangeMessages" ],
        "noSupportedTypesError": [ "CreateChangeMessages" ],
        "noSupportedTypesErrorDerive": [ "CreateChangeMessages" ],
        "addattachments": [ "CreateChangeMessages" ],
        "removeattachments": [ "CreateChangeMessages" ],
        "attachmentsText": [ "CreateChangeMessages" ],
        "implementsText": [ "CreateChangeMessages" ],
        "ownProjectSectionTitle": [ "awAddDirectiveMessages" ],
        "projectsSectionTitle": [ "awAddDirectiveMessages" ],
        "responsibleUser": [ "PlantDataManagementConstants" ],
        "changeObjectAdded": [ "CreateChangeMessages" ],
        "openNewChange": [ "CreateChangeMessages" ],
        "symptomDefect": [ "CreateChangeMessages" ],
        "copyOptionsText": [ "ChangeMessages" ],
        "findingGuideline": [ "CreateChangeMessages" ]
    },

    "preferences": [
        "WRKFLW_user_panel_content_display"
    ],

    "conditions": {
        "isTypeSelected": {
            "expression": "data.selectedType.dbValue =='' "
        },
        "isAttachementSelected": {
            "expression": "data.dataProviders.getAttachements.selectedObjects.length > 0"
        },
        "showCopyOptions": {
            "expression": "showCopyOptions.dbValue"
        },
        "showSubmitButton": {
            "expression": "data.showSubmitButton.dbValue"
        },
        "showCreateButton": {
            "expression": "data.showCreateButton.dbValue"
        },
        "isContentLoaded": {
            "expression": "data.isContentLoaded.dbValue"
        },
        "isPlantPRTypeSelected": {
            "expression": "data.selectedType.dbValue =='Pdm1ProblemItem' "
        },
        "callNewSOAForDerive": {
            "expression": "((ctx.tcSessionData.tcMajorVersion >= 12 && ctx.tcSessionData.tcMinorVersion >= 3) || (ctx.tcSessionData.tcMajorVersion >= 13))"
        },
        "isHostedComponent": {
            "expression": "ctx.aw_hosting_state.currentHostedComponentId === 'com.siemens.splm.client.change.CreateChangeComponent'"
        },
        "panelCloseCondition": {
            "expression": "(ctx.CreateChangePanel.selectedObjects.length !== ctx.mselected.length || ctx.CreateChangePanel.selectedObjects[0].uid !== ctx.mselected[0].uid)"
        },
        "isCapaDerivingFromIssue": {
            "expression": "(data.selectedType.dbValue =='C2Capa' || data.parent_types.dbValue.indexOf( 'TYPE::C2Capa::C2Capa::ProblemReport' ) > -1) && (ctx.selected.modelType.typeHierarchyArray.indexOf( 'C2IssueRevision' ) > -1 || ctx.selected.modelType.typeHierarchyArray.indexOf('C2CapaRevision') > -1) && ctx.tcSessionData.tcMajorVersion >= 13"
        },
        "isValidNewSOAForDerive": {
            "expression": "((data.selectedType.dbValue !=='C2Capa' && data.parent_types.dbValue.indexOf( 'TYPE::C2Capa::C2Capa::ProblemReport' ) == -1) || (data.selectedType.dbValue ==='C2Capa' && ctx.tcSessionData.tcMajorVersion < 13)) && ctx.CreateChangePanel.isDerive && ( (ctx.tcSessionData.tcMajorVersion >= 12 && ctx.tcSessionData.tcMinorVersion >= 3) || (ctx.tcSessionData.tcMajorVersion >= 13) )"
        },
        "isValidCopyOption": {
            "expression": "ctx.CreateChangePanel.isDerive && ctx.mselected.length === 1"
        },
        "isSimpleChangeObjectCreation": {
            "expression": "data.isSimpleChangeObjectCreation"
        },
        "openIssueInEditMode": {
            "expression": "!ctx.CreateChangePanel || ctx.CreateChangePanel.openNewIssueInEditMode == true"
        },
        "isIssueFromVisualization":{
            "expression":"ctx.CreateIssueHostedMode || ctx.CreateChangePanel.exactTypeToCreate !== ''"
        },
        "isAuditFindingSelected": {
            "expression": "data.revision__c2Category.dbValues =='Audit'"
        },
        "isEnableAssignProjects": {
            "expression": "data.isEnableAssignProjects"
        }
    },
    "dataProviders": {
        "getCreatableChangeTypes": {
            "action": "ensureChangeTypesLoaded",
            "response": "{{data.searchResults}}",
            "totalFound": "{{data.totalFound}}",
            "selectionModelMode": "single"
        },
        "getAttachements": {
            "response": "{{data.addAttachment}}",
            "totalFound": "{{data.addAttachment.length}}",
            "selectionModelMode": "multiple",
            "commands": {
                "Awp0ShowObjectCell": {
                    "id": "cmdOpen",
                    "title": "Open",
                    "areas": [ "com.siemens.splm.clientfx.ui.modelObjectListActionCommands" ],
                    "priorities": [ 300 ],
                    "dependencies": [ "js/showObjectCommandHandler" ],
                    "displayOption": "ON_HOVER_AND_SELECTION",
                    "position": "TOP_RIGHT"
                }
            }
        },
        "getImplements":{

            "selectionModelMode": "multiple",
            "commands": {
                "Awp0ShowObjectCell": {
                    "id": "cmdOpen",
                    "title": "Open",
                    "areas": [ "com.siemens.splm.clientfx.ui.modelObjectListActionCommands" ],
                    "priorities": [ 300 ],
                    "dependencies": [ "js/showObjectCommandHandler" ],
                    "displayOption": "ON_HOVER_AND_SELECTION",
                    "position": "TOP_RIGHT"
                }
            }

        },
        "getAssignedProjectsProvider": {
            "response": "{{data.dataProviders.getUserProjectsProvider.selectedObjects}}",
            "totalFound": "{{data.dataProviders.getUserProjectsProvider.selectedObjects.length}}",
            "selectionModelMode": "single",
            "commands": {
                "Awp0RemoveProjectsCell": {
                    "id": "cmdRemove",
                    "areas": [
                        "com.siemens.splm.clientfx.ui.modelObjectListActionCommands"
                    ],
                    "priorities": [
                        300
                    ],
                    "dependencies": [
                        "js/removeObjectCellCommandHandler"
                    ],
                    "displayOption": "ON_HOVER_AND_SELECTION",
                    "position": "TOP_RIGHT"
                }
            }
        },
        "getCmOwningProjectsProvider": {
            "action": "getCmOwningProjectsAct",
            "response": [ "{{data.owningProjects}}" ],
            "totalFound": "{{data.owningProjects.length}}",
            "preSelection": false,
            "selectionModelMode": "single",
            "commands": {
                "Awp0ShowObjectCell": {
                    "id": "cmdOpen",
                    "areas": [
                        "com.siemens.splm.clientfx.ui.modelObjectListActionCommands"
                    ],

                    "priorities": [
                        300
                    ],

                    "dependencies": [
                        "js/showObjectCommandHandler"
                    ],

                    "displayOption": "ON_HOVER_AND_SELECTION",
                    "position": "TOP_RIGHT"
                }
            }
        },
        "getAssignedResponsibleUser": {
            "response": "{{data.selectedResponsibleUser}}",
            "totalFound": "{{data.selectedResponsibleUser.length}}",
            "totalLoaded": "{{data.selectedResponsibleUser}}",
            "selectionModelMode": "single"
        },
        "getSymptomDefectProvider": {
            "response": "{{data.dataProviders.loadSymptomDefectsProvider.selectedObjects}}",
            "totalFound": "{{data.dataProviders.loadSymptomDefectsProvider.selectedObjects.length}}",
            "selectionModelMode": "single",
            "commandsAnchor": "aw_removeSymptomDefectCellCommand"
        }
    }
}
