{
    "schemaVersion": "1.0.0",
    "imports": [
        "js/aw-column.directive",
        "js/aw-splm-table.directive",
        "js/aw-command-bar.directive",
        "js/aw-row.directive"
    ],

    "actions": {


        "loadProbableImpacted": {
            "actionType": "JSFunctionAsync",
            "method": "loadProbableImpactedTree",
            "inputData": {
                "treeLoadInput": "request.treeLoadInput",
                "dataProvider": "{{data.dataProviders.probableImpactedDataProvider}}",
                "inContextData" :"{{data}}"
            },
            "outputData": {
                "response": "tableSummaries"
            },
            "deps": "js/Cm1ImpactedWidgetService"
        },
        "loadInitialColumns": {
            "actionType": "JSFunction",
            "method": "loadInitialColumns",
            "inputData": {
                "dataProvider": "{{data.dataProviders.probableImpactedDataProvider}}"
            },
            "deps": "js/Cm1ChangeSummaryService"
        },
        "createImpactedRelationSoaCall": {
            "actionType": "JSFunction",
            "method": "execute",
            "deps": "js/pasteService",
            "inputData": {
                "targetObject": "{{subPanelContext.selectedChangeVMO}}",
                "sourceObjects": "{{data.dataProviders.probableImpactedDataProvider.selectedObjects}}",
                "relationType": "CMHasImpactedItem"
            },
            "events": {
                "success": [
                    {
                        "name": "resetPersistedImpactedTable.refreshTable"
                    },
                    {
                        "name": "calculateColorIndicatorForProbableImpacted"
                    }
                ],
                "failure": [
                    {
                        "name": "resetPersistedImpactedTable.refreshTable"
                    },
                    {
                        "name": "calculateColorIndicatorForProbableImpacted"
                    }
                ]
            },
            "actionMessages": {
                "success": [
                    {
                        "condition": "data.dataProviders.probableImpactedDataProvider.selectedObjects.length === 1",
                        "message": "pasteImpactedSuccessMessage"
                    },
                    {
                        "condition": "data.dataProviders.probableImpactedDataProvider.selectedObjects.length > 1",
                        "message": "pasteMultipleImpactedSuccessMessage"
                    }
                ]
            }
        },
        "resetProbableImpactedTree": {
            "actionType": "Event",
            "method": "Event",
            "inputData": {
                "events": [
                    {
                        "name": "probableImpactedGrid.plTable.reload"
                    }
                ]
            }
        },
        "reloadRelationImpactedTable": {
            "actionType": "Event",
            "method": "Event",
            "inputData": {
                "events": [ {
                    "name": "reloadRelationImpactedTable.reloadTable"
                } ]
            }
        },
        "calculateColorIndicatorForProbableImpacted": {
            "actionType": "JSFunction",
            "method": "calculateColorIndicatorForProbableImpacted",
            "inputData": {
                "data": "{{data}}"
            },
            "deps": "js/Cm1ImpactedWidgetService"
        },
        "processPersistedImpactedTableSelection": {
            "actionType": "JSFunction",
            "method": "processPersistedImpactedTableSelection",
            "inputData": {
                "data": "{{subPanelContext}}"
            },
            "deps": "js/Cm1ImpactedWidgetService"
        },
        "setViewerContext": {
            "actionType": "JSFunction",
            "method": "setViewerContext",
            "deps": "js/Cm1ChangeSummaryService"
        },
        "expandAndSelectFirstLevelTreeNode":{
            "actionType": "JSFunction",
            "method": "expandAndSelectFirstLevelTreeNode",
            "inputData": {
                "data": "{{subPanelContext}}",
                "loadedTreeNodes": "{{data.dataProviders.probableImpactedDataProvider.viewModelCollection.loadedVMObjects}}"
            },
            "deps": "js/Cm1ImpactedWidgetService"
        },
        "calculateColorIndicatorForPersistedImpacted": {
            "actionType": "Event",
            "method": "Event",
            "inputData": {
                "events": [ {
                    "name": "calculateColorIndicatorForPersistedImpacted"
                } ]
            }
        },
        "calculateColorIndicatorForRelObjectImpacted": {
            "actionType": "Event",
            "method": "Event",
            "inputData": {
                "events": [ {
                    "name": "calculateColorIndicatorForRelObjectImpacted"
                } ]
            }
        },


        "impactAnalysisTableRefreshTable": {
            "actionType": "Event",
            "method": "Event",
            "inputData": {
                "events": [
                    {
                        "condition":"commandContext.name === probableImpactedDataProvider",
                        "name":"probableImpactedGrid.plTable.clientRefresh"
                    }
                ]
            }
        },
        "saveColumnConfigLoadData": {
            "actionType": "TcSoaService",
            "serviceName": "Internal-AWS2-2016-03-UiConfig",
            "method": "saveUIColumnConfigs",
            "inputData": {
                "columnConfigurations": [ {
                    "clientScopeURI": "{{data.clientScopeURI}}",
                    "columnConfigId": "{{data.dataProviders.probableImpactedDataProvider.columnConfig.columnConfigId}}",
                    "columns": "{{data.dataProviders.probableImpactedDataProvider.newColumns}}",
                    "scope": "LoginUser",
                    "scopeName": ""
                } ]
            },
            "outputData": {}
        },
        "resetColumnConfig" : {
            "actionType": "TcSoaService",
            "serviceName": "Internal-AWS2-2017-06-UiConfig",
            "method": "getOrResetUIColumnConfigs2",
            "inputData": {
                "getOrResetUiConfigsIn": [{
                    "scope": "LoginUser",
                    "scopeName": "",
                    "clientName": "AWClient",
                    "resetColumnConfig": true,
                    "columnConfigQueryInfos":
                        [{
                            "clientScopeURI": "{{data.clientScopeURI}}",
                            "operationType": "configured",
                            "columnsToExclude": []
                        }],
                    "businessObjects": [{}]
                }]
            },
            "outputData": {
                "dataProviders.probableImpactedDataProvider.resetColumnConfigs": "columnConfigurations"
            }
        },
        "doArrangeEvent" : {
            "actionType": "JSFunctionAsync",
            "method": "arrangeColumns",
            "inputData": {
                "declViewModel": "{{data}}",
                "eventData": "{{data.eventData}}"
            },
            "deps": "js/columnArrangeService"
        }
    },

    "functions": {
        "getCreateInputToCreteImpactedRelation": {
            "functionName": "getCreateInputToCreteImpactedRelation",
            "parameters": [
                "{{subPanelContext}}"
            ]
        }
    },

    "onEvent": [
        {
            "eventId": "probableImpactedDataProvider.selectionChangeEvent",
            "action": "calculateColorIndicatorForPersistedImpacted",
            "condition": "((data.dataProviders.probableImpactedDataProvider.selectedObjects.length !== 1 )|| (!conditions.hasProbableImpactedTableSelChanged)) "
        },
        {
            "eventId": "probableImpactedDataProvider.modelObjectsUpdated",
            "action": "calculateColorIndicatorForPersistedImpacted"
        },
        {
            "eventId": "calculateColorIndicatorForProbableImpacted",
            "action": "calculateColorIndicatorForProbableImpacted"
        },
        {
            "eventId": "probableImpactedGrid.plTable.toggleTreeNode",
            "action": "calculateColorIndicatorForPersistedImpacted"
        },
        {
            "eventId": "probableImpactedDataProvider.selectionChangeEvent",
            "action": "reloadRelationImpactedTable",
            "condition" :"conditions.isCallRelatedProvider"
        },

        {
            "eventId": "probableImpactedDataProvider.selectionChangeEvent",
            "action": "calculateColorIndicatorForRelObjectImpacted",
            "condition" :"((data.dataProviders.probableImpactedDataProvider.selectedObjects.length === 1) && (!conditions.hasProbableImpactedTableSelChanged))"
        },
        {
            "eventId": "probableImpactedDataProvider.treeNodesLoaded",
            "action": "setViewerContext"
        },

        {
            "eventId": "createImpactedRelationSoaCall.probableImpactedTable",
            "action": "createImpactedRelationSoaCall"
        },
        {
            "eventId": "probableImpactedDataProvider.treeNodesLoaded",
            "cacheEventData": true,
            "action": "expandAndSelectFirstLevelTreeNode"
        },
        {
            "eventId": "impactAnalysisTable.refreshTable",
            "action": "impactAnalysisTableRefreshTable"
        },
        {
            "eventId": "resetProbableImpactedTree",
            "action": "resetProbableImpactedTree"
        },
        {
            "eventId": "columnArrange",
            "cacheEventData": true,
            "action": "doArrangeEvent"
        }
    ],

    "conditions": {
        "isCallRelatedProvider": {
            "expression": "((data.dataProviders.probableImpactedDataProvider.selectedObjects.length === 1) && data.probableImpactedTablePrevSel.dbValue !== data.dataProviders.probableImpactedDataProvider.selectedObjects[0].props.cm0ProposedImpactedObject.dbValue)"
        },
        "hasProbableImpactedTableSelChanged": {
            "expression": "(data.probableImpactedTablePrevSel.dbValue !== data.dataProviders.probableImpactedDataProvider.selectedObjects[0].props.cm0ProposedImpactedObject.dbValue)"
        }
    },

    "data": {

        "probableImpactedTableLoaded": {
            "type": "BOOLEAN",
            "dbValue": false
        },
        "probableImpactedTablePrevSel": {
            "type": "STRING",
            "dbValue": null
        },
        "addToImpactedCommand": "cm1_addImpactedItemCommands"
    },

    "columnProviders": {
        "probableImpactedColumnProvider": {
            "columns": [{}],
            "saveColumnAndLoadAction" : "saveColumnConfigLoadData",
            "resetColumnAction" : "resetColumnConfig",
            "frozenColumnIndex" : 0
        }
    },

    "dataProviders": {
        "probableImpactedDataProvider": {
            "initializeAction": "loadProbableImpacted",
            "nextAction": "loadProbableImpacted",
            "previousAction": "loadProbableImpacted",
            "treeLoadResult": "action.result.treeLoadResult",
            "editContext": "TABLE_CONTEXT",
            "inputData": {
                "accessMode": "tree"
            },
            "response": "data.response",
            "selectionModelMode": "multiple",
            "commandsAnchor": "com.siemens.splm.clientfx.tcui.commands.modelObjectCellListActionCommands"
        }
    },

    "grids": {
        "probableImpactedGrid": {
            "dataProvider": "probableImpactedDataProvider",
            "columnProvider": "probableImpactedColumnProvider",
            "enableArrangeMenu": true,
            "addIconColumn": false,
            "gridOptions": {
                "useStaticFirstCol": true,
                "enableSorting": true,
                "isFilteringEnabled": false,
                "enableExpandAndPaginationInEdit": true,
                "textBundle": {
                    "TwistieTooltipCollapsed": "{{i18n.TwistieTooltipCollapsed}}",
                    "TwistieTooltipExpanded": "{{i18n.TwistieTooltipExpanded}}"
                },
                "maxRowsToShow": 10
            },

            "deps": "js/Cm1ImpactedWidgetService"
        }
    },

    "messages": {
        "pasteImpactedSuccessMessage": {
            "messageType": "INFO",
            "messageText": "{{i18n.pasteImpactedSuccessMessage}}",
            "messageTextParams": [
                "{{data.dataProviders.probableImpactedDataProvider.selectedObjects[0].props.object_string.uiValues[0]}}",
                "{{ctx.pselected.props.object_string.uiValues[0]}}"
            ]
        },
        "pasteMultipleImpactedSuccessMessage": {
            "messageType": "INFO",
            "messageText": "{{i18n.pasteMultipleImpactedSuccessMessage}}",
            "messageTextParams": [
                "{{data.dataProviders.probableImpactedDataProvider.selectedObjects}}",
                "{{ctx.pselected.props.object_string.uiValues[0]}}"
            ]
        }
    },

    "i18n": {
        "TwistieTooltipCollapsed": [
            "ChangeMessages"
        ],
        "TwistieTooltipExpanded": [
            "ChangeMessages"
        ],
        "pasteImpactedSuccessMessage": [
            "ChangeMessages"
        ],
        "pasteMultipleImpactedSuccessMessage": [
            "ChangeMessages"
        ],
        "proposedImpactedTitle": [
            "ChangeMessages"
        ],
        "revisionRuleLabel": [
            "ChangeMessages"
        ]
    }
}
