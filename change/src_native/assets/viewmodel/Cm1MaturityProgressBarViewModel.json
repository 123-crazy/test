{
    "schemaVersion": "1.0.0",
    "imports": [
        "js/aw-step-progress.directive"
    ],
    "actions": {
        "reveal":
        {
            "actionType": "TcSoaService",
            "serviceName": "Core-2013-05-LOV",
            "method": "getInitialLOVValues",
            "inputData": {
                    "initialData": {
                        "propertyName" : "{{data.propName}}",
                        "lovInput": {
                            "operationName": "Create",
                            "boName": "{{ctx.mselected[0].type}}"
                        }
                   }
            },
            "outputData":
            {
                "loadedStates": "lovValues"
            },
            "events": {
                "success": [ {
                    "name": "statesLoaded"
                } ]
            },
            "deps": "js/Cm1MaturityProgressBarService"
        },
        "handleUpdatedEvent":
        {
            "actionType": "JSFunction",
            "method": "handleUpdatedEvent",
            "deps": "js/Cm1MaturityProgressBarService",
            "inputData":
            {
                "modelObjects": "{{data.eventMap['cdm.updated'].updatedObjects}}"
            }
        },
        "getStates": {
            "actionType": "JSFunction",
            "method": "showSteps",
            "inputData": {
                "selectedUid": "{{ctx.xrtSummaryContextObject.uid}}",
                "propName": "{{data.propName}}",
                "loadedStates": "{{data.loadedStates}}"
            },
            "outputData": {
                "steps": "states",
                "currStep": "currState"
            },
            "deps": "js/Cm1MaturityProgressBarService"
        }
    },
    "data": {
        "propName": "CMMaturity"
    },
    "onEvent": [
        {
            "eventId":"Cm1MaturityProgressBar.contentLoaded",
            "action": "reveal"
        },
        {
            "eventId":"updateMaturityProgressBar",
            "action": "reveal"
        },
        {
            "eventId": "cdm.updated",
            "action": "handleUpdatedEvent",
            "cacheEventData": true
        },
        {
            "eventId": "statesLoaded",
            "action": "getStates"
        }
    ]
}
